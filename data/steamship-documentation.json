[{
  "url": "https://docs.steamship.com/",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/",
    "loadedTime": "2023-08-17T22:09:47.481Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 0,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/",
    "title": "Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Steamship\nSteamship is an SDK and hosting platform for AI Agents and Tools.\nFollow our Agent Guidebook for a complete tutorial.\nSteamship in 30 seconds\nBuild Agents which run in the cloud.\nUse Plugins for common operations like generating text with GPT, converting a CSV to text, or generating an image from text. Steamship manages asynchronicity and retries.\nStore data in Files, Blocks, and Tags. This allows you to query or search it later.\nDeploy as a Package, creating a scalable API for your front end.\nCreate as many instances of the Package as you want, each with its own data.\nStart from our Multimodal Agent Template\nClone our starter repository:\nCreate a virtual environment and install dependencies:\nThen run:\nNow that you've interacted with your new agent, you're ready to start modifying it in src/api.py.\nSee the Agent Guidebook for details.\nContents\nAgent Guidebook\nConfiguration \nAuthentication \nSteamship Configuration File\nUsing Multiple Profiles\nEnvironment Variables\nClient Libraries \nPython Client\nTypescript Client\nCLI\nHTTP API \nRequests \nOptional Headers\nEngine Response Format\nCreating a Package Instance\nInvoking a Package Method\nAgents \nAgent\nAgentContext\nTool\nAgentService\nPackages\nPlugins \nFile Importers\nBlockifiers\nTaggers\nGenerators\nEmbedders\nData \nWorkspaces \nCreating Workspaces\nFiles \nCreating Files Directly\nMaking File Data Public\nBlocks \nCreating Blocks\nMaking Block Data Public\nTags \nWays to use Tags\nTag Schemas\nBlock and File Tags\nQuerying Data \nUsage\nLanguage Description \nUnary Predicates\nBinary Predicates\nBinary Relations\nConjunctions\nSpecial Predicates\nEmbedding Search Index\nInserting Data\nQuerying Data\nDeveloper Reference \nCloning a Starter Project\nThe Steamship Manifest file \nPlugin Configuration\nSteamship Registry\nPython Environment Setup\nAccepting Configuration \nDefining and Accepting configuration in your code\nStoring Secrets\nRunning on Localhost \nLocalhost caveats\nWriting Tests \nLogging\nThrowing Errors\nManual Testing\nAutomated testing \nAutomated testing setup\nModifying or removing automated testing\nDeploying \nDeploying with the Steamship CLI\nDeploying via GitHub Actions \nAutomated Deployment Setup\nModifying or disabling automated deployments\nTroubleshooting Deployments \nThe deployment fails because the version already exists\nThe deployment fails because the tag does not match the manifest file\nThe deployment fails with an authentication error\nMonitoring your Instances \nMonitoring via Web \nLogs\nUsage\nTasks\nUsing Logging in Instances\nLogs Retrieval with ship CLI\nLicense\nAuthors\nLast updated on August 17, 2023",
  "markdown": "## Steamship\n\nSteamship is an SDK and hosting platform for AI Agents and Tools.\n\n**Follow our [Agent Guidebook](https://docs.steamship.com/agent-guidebook) for a complete tutorial.**\n\n## Steamship in 30 seconds[](#steamship-in-30-seconds)\n\n*   [Build Agents](https://docs.steamship.com/agent-guidebook) which run in the cloud.\n*   [Use Plugins](https://docs.steamship.com/plugins/using#using-plugins) for common operations like generating text with GPT, converting a CSV to text, or generating an image from text. Steamship manages asynchronicity and retries.\n*   [Store data in Files, Blocks, and Tags](https://docs.steamship.com/data#data-model). This allows you to [query](https://docs.steamship.com/data/queries#queries) or [search](https://docs.steamship.com/embedding-search#embedding-search-index) it later.\n*   [Deploy as a Package](https://docs.steamship.com/packages/developing#developing-packages), creating a scalable API for your front end.\n*   [Create as many instances of the Package](https://docs.steamship.com/packages/developing#creating-package-instances) as you want, each with its own data.\n\n## Start from our Multimodal Agent Template[](#start-from-our-multimodal-agent-template)\n\nClone our starter repository:\n\nCreate a virtual environment and install dependencies:\n\nThen run:\n\nNow that you've interacted with your new agent, you're ready to start modifying it in `src/api.py`.\n\nSee the **[Agent Guidebook](https://docs.steamship.com/agent-guidebook)** for details.\n\n## Contents\n\n*   [Agent Guidebook](https://docs.steamship.com/agent-guidebook)\n*   [Configuration](https://docs.steamship.com/configuration)\n    *   [Authentication](https://docs.steamship.com/configuration/authentication)\n        *   [Steamship Configuration File](https://docs.steamship.com/configuration/authentication#steamship-configuration-file)\n        *   [Using Multiple Profiles](https://docs.steamship.com/configuration/authentication#using-multiple-profiles)\n        *   [Environment Variables](https://docs.steamship.com/configuration/authentication#environment-variables)\n    *   [Client Libraries](https://docs.steamship.com/configuration/clients)\n        *   [Python Client](https://docs.steamship.com/configuration/clients#python-client)\n        *   [Typescript Client](https://docs.steamship.com/configuration/clients#typescript-client)\n    *   [CLI](https://docs.steamship.com/configuration/cli)\n    *   [HTTP API](https://docs.steamship.com/configuration/http)\n        *   [Requests](https://docs.steamship.com/configuration/http#requests)\n            *   [Optional Headers](https://docs.steamship.com/configuration/http#optional-headers)\n            *   [Engine Response Format](https://docs.steamship.com/configuration/http#engine-response-format)\n        *   [Creating a Package Instance](https://docs.steamship.com/configuration/http#creating-a-package-instance)\n        *   [Invoking a Package Method](https://docs.steamship.com/configuration/http#invoking-a-package-method)\n*   [Agents](https://docs.steamship.com/agents)\n    *   [Agent](https://docs.steamship.com/agents#agent)\n    *   [AgentContext](https://docs.steamship.com/agents#agentcontext)\n    *   [Tool](https://docs.steamship.com/agents#tool)\n    *   [AgentService](https://docs.steamship.com/agents#agentservice)\n*   [Packages](https://docs.steamship.com/packages)\n*   [Plugins](https://docs.steamship.com/plugins)\n    *   [File Importers](https://docs.steamship.com/plugins#file-importers)\n    *   [Blockifiers](https://docs.steamship.com/plugins#blockifiers)\n    *   [Taggers](https://docs.steamship.com/plugins#taggers)\n    *   [Generators](https://docs.steamship.com/plugins#generators)\n    *   [Embedders](https://docs.steamship.com/plugins#embedders)\n*   [Data](https://docs.steamship.com/data)\n    *   [Workspaces](https://docs.steamship.com/data/workspaces)\n        *   [Creating Workspaces](https://docs.steamship.com/data/workspaces#creating-workspaces)\n    *   [Files](https://docs.steamship.com/data/files)\n        *   [Creating Files Directly](https://docs.steamship.com/data/files#creating-files-directly)\n        *   [Making File Data Public](https://docs.steamship.com/data/files#making-file-data-public)\n    *   [Blocks](https://docs.steamship.com/data/blocks)\n        *   [Creating Blocks](https://docs.steamship.com/data/blocks#creating-blocks)\n        *   [Making Block Data Public](https://docs.steamship.com/data/blocks#making-block-data-public)\n    *   [Tags](https://docs.steamship.com/data/tags)\n        *   [Ways to use Tags](https://docs.steamship.com/data/tags#ways-to-use-tags)\n        *   [Tag Schemas](https://docs.steamship.com/data/tags#tag-schemas)\n        *   [Block and File Tags](https://docs.steamship.com/data/tags#block-and-file-tags)\n    *   [Querying Data](https://docs.steamship.com/data/queries)\n        *   [Usage](https://docs.steamship.com/data/queries#usage)\n        *   [Language Description](https://docs.steamship.com/data/queries#language-description)\n            *   [Unary Predicates](https://docs.steamship.com/data/queries#unary-predicates)\n            *   [Binary Predicates](https://docs.steamship.com/data/queries#binary-predicates)\n            *   [Binary Relations](https://docs.steamship.com/data/queries#binary-relations)\n            *   [Conjunctions](https://docs.steamship.com/data/queries#conjunctions)\n            *   [Special Predicates](https://docs.steamship.com/data/queries#special-predicates)\n*   [Embedding Search Index](https://docs.steamship.com/embedding-search)\n*   [Inserting Data](https://docs.steamship.com/embedding-search#inserting-data)\n*   [Querying Data](https://docs.steamship.com/embedding-search#querying-data)\n*   [Developer Reference](https://docs.steamship.com/developing)\n    *   [Cloning a Starter Project](https://docs.steamship.com/developing/project-creation)\n    *   [The Steamship Manifest file](https://docs.steamship.com/developing/steamship-manifest)\n        *   [Plugin Configuration](https://docs.steamship.com/developing/steamship-manifest#plugin-configuration)\n        *   [Steamship Registry](https://docs.steamship.com/developing/steamship-manifest#steamship-registry)\n    *   [Python Environment Setup](https://docs.steamship.com/developing/environment-setup)\n    *   [Accepting Configuration](https://docs.steamship.com/developing/configuration)\n        *   [Defining and Accepting configuration in your code](https://docs.steamship.com/developing/configuration#defining-and-accepting-configuration-in-your-code)\n    *   [Storing Secrets](https://docs.steamship.com/developing/storing-secrets)\n    *   [Running on Localhost](https://docs.steamship.com/developing/running)\n        *   [Localhost caveats](https://docs.steamship.com/developing/running#localhost-caveats)\n    *   [Writing Tests](https://docs.steamship.com/developing/testing)\n        *   [Logging](https://docs.steamship.com/developing/testing#logging)\n        *   [Throwing Errors](https://docs.steamship.com/developing/testing#throwing-errors)\n        *   [Manual Testing](https://docs.steamship.com/developing/testing#manual-testing)\n        *   [Automated testing](https://docs.steamship.com/developing/testing#automated-testing)\n            *   [Automated testing setup](https://docs.steamship.com/developing/testing#automated-testing-setup)\n            *   [Modifying or removing automated testing](https://docs.steamship.com/developing/testing#modifying-or-removing-automated-testing)\n    *   [Deploying](https://docs.steamship.com/developing/deploying)\n        *   [Deploying with the Steamship CLI](https://docs.steamship.com/developing/deploying#deploying-with-the-steamship-cli)\n        *   [Deploying via GitHub Actions](https://docs.steamship.com/developing/deploying#deploying-via-github-actions)\n            *   [Automated Deployment Setup](https://docs.steamship.com/developing/deploying#automated-deployment-setup)\n            *   [Modifying or disabling automated deployments](https://docs.steamship.com/developing/deploying#modifying-or-disabling-automated-deployments)\n        *   [Troubleshooting Deployments](https://docs.steamship.com/developing/deploying#troubleshooting-deployments)\n            *   [The deployment fails because the version already exists](https://docs.steamship.com/developing/deploying#the-deployment-fails-because-the-version-already-exists)\n            *   [The deployment fails because the tag does not match the manifest file](https://docs.steamship.com/developing/deploying#the-deployment-fails-because-the-tag-does-not-match-the-manifest-file)\n            *   [The deployment fails with an authentication error](https://docs.steamship.com/developing/deploying#the-deployment-fails-with-an-authentication-error)\n    *   [Monitoring your Instances](https://docs.steamship.com/developing/monitoring)\n        *   [Monitoring via Web](https://docs.steamship.com/developing/monitoring#monitoring-via-web)\n            *   [Logs](https://docs.steamship.com/developing/monitoring#logs)\n            *   [Usage](https://docs.steamship.com/developing/monitoring#usage)\n            *   [Tasks](https://docs.steamship.com/developing/monitoring#tasks)\n        *   [Using Logging in Instances](https://docs.steamship.com/developing/monitoring#using-logging-in-instances)\n        *   [Logs Retrieval with `ship` CLI](https://docs.steamship.com/developing/monitoring#logs-retrieval-with-ship-cli)\n*   [License](https://docs.steamship.com/license)\n*   [Authors](https://docs.steamship.com/authors)\n\nLast updated on August 17, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook",
    "loadedTime": "2023-08-17T22:09:56.539Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook",
    "title": "Agent Guidebook – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Agent Guidebook\nThis guidebook will walk you through building and deploying your own AI Agent.\n\"Agents\" are the emerging programming model for AI apps: from question answering, to AI management coaching, to image generation services, to AI friends.\nThe chapters in this guidebook will show you how to:\n🤖 Add a custom personality and moods using Prompt Engineering\n🏞️ Generate images with Stable Diffusion, DALL-E, or Google Image Search\n🔈 Use voice to interact with you\n📲 Connect to apps like Telegram or embed on your website\nPlus it's all open-source Python: you can change anything you see in this guidebook.\nYour Agent is Deployment Ready\nAll Steamship agents are ready to deploy to our AI-native stack. They have:\nbuilt-in, pre-authenticated support for popular LLMs and models (opens in a new tab)\na built-in managed vector database\nfile and key-value storage accessible from your tools\nmulti-tenancy: when you deploy an agent, others can create their own instance\nasync-task queues\nAre you ready??\nLet's get shipping!\n🚢 🚢 🚢\nLast updated on August 16, 2023",
  "markdown": "## Agent Guidebook\n\nThis guidebook will walk you through **building and deploying** your own AI Agent.\n\n\"**Agents**\" are the emerging programming model for AI apps: from question answering, to AI management coaching, to image generation services, to AI friends.\n\nThe chapters in this guidebook will show you how to:\n\n*   [**🤖 Add a custom personality**](https://docs.steamship.com/agent-guidebook/personality/add-a-personality) and moods using Prompt Engineering\n*   [**🏞️ Generate images**](https://docs.steamship.com/agent-guidebook/generate-images) with Stable Diffusion, DALL-E, or Google Image Search\n*   [**🔈 Use voice**](https://docs.steamship.com/agent-guidebook/generate-speech) to interact with you\n*   [**📲 Connect to apps**](https://docs.steamship.com/agent-guidebook/connect/use-on-the-web) like Telegram or embed on your website\n\nPlus it's all open-source Python: you can change anything you see in this guidebook.\n\n## Your Agent is Deployment Ready[](#your-agent-is-deployment-ready)\n\nAll Steamship agents are ready to deploy to our AI-native stack. They have:\n\n*   built-in, pre-authenticated support for [**popular LLMs and models** (opens in a new tab)](https://github.com/steamship-plugins)\n*   a built-in managed vector database\n*   file and key-value storage accessible from your tools\n*   multi-tenancy: when you deploy an agent, others can create their own instance\n*   async-task queues\n\n## Are you ready??[](#are-you-ready)\n\nLet's get shipping!\n\n🚢 🚢 🚢\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/required-skills",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/required-skills",
    "loadedTime": "2023-08-17T22:09:57.461Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/required-skills",
    "title": "Required Skills – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Programmers!, please put your laptops on your desk to identify yourself.\nPoets!, please put your laptops away, just for now.\nIf you’re a programmer AND a poet, please play the role of a programmer so that every poet gets a buddy.\nAre you ready?\nPoets! Please stand up! For the next few minutes, walk around and find a programmer to team up with.\nProgrammers! Please welcome poets with open arms! This is an opportunity to collaborate!",
  "markdown": "**Programmers!**, please put your laptops on your desk to identify yourself.\n\n**Poets!**, please put your laptops away, just for now.\n\n**If you’re a programmer AND a poet**, please play the role of a programmer so that every poet gets a buddy.\n\nAre you ready?\n\n**Poets!** Please stand up! For the next few minutes, walk around and find a programmer to team up with.\n\n**Programmers!** Please welcome poets with open arms! This is an opportunity to collaborate!"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/getting-started/run-your-agent",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/getting-started/run-your-agent",
    "loadedTime": "2023-08-17T22:10:07.035Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/getting-started/run-your-agent",
    "title": "Run Your Agent – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Run Your Agent\nRun your agent on your local computer by typing the following in your terminal:\nThis command will boot a local server that provides a number of options to interact with your agent:\nYou can use the console to REPL to begin talking with your agent immediately, but you can also:\nUse the Web UI to interact via your browser\nUse the local API endpoint to interact programmatically\nUse the public API endpoint to test integrations (e.g. with Telegram or Slack)\nCommon Problems when Running\nI'm getting an error that the port is in use. Sometimes the development server gets stuck shutting down. Just re-run with another port number using the --port flag. For example: ship run local --port 8889. The original port will usually be released within about a minute.\nI'm getting an NGROK error. Sometimes VPNs or other network situations can cause complications with NGROK. Just run with the --no-ngrok flag to suppress the creation of a public URL. Note that this will prevent you from testing integrations with external webhooks.\nI'm getting an error about the Steamship manifest or api.py file. This may mean you're running the ship run local command from a directory other than the one containing your agent. Make sure you are running from your project directory and try again.\nLast updated on August 16, 2023",
  "markdown": "## Run Your Agent\n\nRun your agent on your local computer by typing the following in your terminal:\n\nThis command will boot a local server that provides a number of options to interact with your agent:\n\nYou can use the console to REPL to begin talking with your agent immediately, but you can also:\n\n*   Use the Web UI to interact via your browser\n*   Use the local API endpoint to interact programmatically\n*   Use the public API endpoint to test integrations (e.g. with Telegram or Slack)\n\n## Common Problems when Running[](#common-problems-when-running)\n\n*   **I'm getting an error that the port is in use.** Sometimes the development server gets stuck shutting down. Just re-run with another port number using the `--port` flag. For example: `ship run local --port 8889`. The original port will usually be released within about a minute.\n    \n*   **I'm getting an NGROK error.** Sometimes VPNs or other network situations can cause complications with NGROK. Just run with the `--no-ngrok` flag to suppress the creation of a public URL. Note that this will prevent you from testing integrations with external webhooks.\n    \n*   **I'm getting an error about the Steamship manifest or api.py file.** This may mean you're running the `ship run local` command from a directory other than the one containing your agent. Make sure you are running from your project directory and try again.\n    \n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent",
    "loadedTime": "2023-08-17T22:10:16.914Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent",
    "title": "Share Your Agent – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Share Your Agent\nWhen you run ship deploy, you will see output that looks like this:\nYou can think of that URL as your agent's app store page: it's a URL you can share with others to create their own instances of what you've built.\nEach instance is separate. It's a running copy of your agent.\nIt has its own data & memory\nIt provides its own API & Web interface\nIt is pinned to a version of your agent\nAny cloud service usage is associated with the account that created the instance.\nYou can only share public agents\nWhen you deployed for the first time, you have to mark your agent as public if you wish to share it.\nLast updated on August 17, 2023",
  "markdown": "## Share Your Agent\n\nWhen you run `ship deploy`, you will see output that looks like this:\n\nYou can think of that URL as your agent's **app store page**: it's a URL you can share with others to create their own instances of what you've built.\n\nEach instance is separate. It's a running copy of your agent.\n\n*   It has its own data & memory\n*   It provides its own API & Web interface\n*   It is pinned to a version of your agent\n*   Any cloud service usage is associated with the account that created the instance.\n\nYou can only share public agents\n\nWhen you deployed for the first time, you have to mark your agent as `public` if you wish to share it.\n\nLast updated on August 17, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/core-concepts/project-layout",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/project-layout",
    "loadedTime": "2023-08-17T22:10:18.581Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/project-layout",
    "title": "Project Layout – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Project Layout\nHere's a quick guide to your agent project (opens in a new tab).\nThe starting codebase is small but very extensible.\nIt's built atop the Steamship SDK (opens in a new tab), which you can think of as Flask for AI Agents.\nIt deploys to the Steamship Cloud (opens in a new tab), which manages all the AI orchestration & monitoring to power your agent.\nKey Files\nThere are only three critical files required to run and deploy an agent to Steamship:\nsteamship.json contains information used during deployment: your agent's name, version, etc.\nrequirements.txt contains pip modules your agent depends upon. This is necessary to run in the cloud.\nsrc/api.py contains: \nyour AgentService, which is a Flask-like API container\nthe Agent within it, with access to Tools, LLMs, Memory, and async task queues\nEverything else in the starter project is just a convenience file to help things build & run smoothly.\nLast updated on August 16, 2023",
  "markdown": "## Project Layout\n\nHere's a quick guide to your [agent project (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter).\n\nThe starting codebase is small but very extensible.\n\n*   It's built atop the [Steamship SDK (opens in a new tab)](https://github.com/steamship-core/python-client), which you can think of as Flask for AI Agents.\n*   It deploys to the [Steamship Cloud (opens in a new tab)](https://steamship.com/), which manages all the AI orchestration & monitoring to power your agent.\n\n## Key Files[](#key-files)\n\nThere are only three critical files required to run and deploy an agent to Steamship:\n\n*   `steamship.json` contains information used during deployment: your agent's name, version, etc.\n*   `requirements.txt` contains pip modules your agent depends upon. This is necessary to run in the cloud.\n*   `src/api.py` contains:\n    *   your `AgentService`, which is a Flask-like API container\n    *   the `Agent` within it, with access to Tools, LLMs, Memory, and async task queues\n\nEverything else in the starter project is just a convenience file to help things build & run smoothly.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent",
    "loadedTime": "2023-08-17T22:10:19.278Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent",
    "title": "Deploy Your Agent – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Deploy Your Agent\nTo deploy your agent to the cloud, just open a shell and type:\nYour first time, you'll be asked a few questions:\nWhat you want to name your agent. Choose a name with only lowercase letters and dashes.\nWhat version you want. You can just accept the default suggestion\nAfter you've completed those questions, you'll see the following:\nClick that URL to create a new instance of your agent.\nWhat exactly IS deployment?\nDeploying your agent is like releasing software:\nYour agent will get a name, like customer-service-bot\nYour deployment will result in a version, like 1.0.0\nThat version -- customer-service-bot@1.0.0 -- lives in the cloud. If you deployed it as a public agent, anyone can create their own instances.\nEach instance is separate. It's a running copy of your agent.\nIt has its own data & memory\nIt provides its own API & Web interface\nIt is pinned to a version of your agent\nHow do I deploy Version 2?\nWhenever you want to deploy a new version, just run:\nThe wizard will ask you what the new version number should be and push it up to the cloud.\nThe most recently deployed version always becomes the default version for new instances.\nDeploying a new version doesn't upgrade running ones!\nWhen you deploy a new version, it's like releasing a new version of software.\nThe agent instances already running in the cloud continue to run on whatever version they were created with.\nReach out to us at crew@steamship.com if this is problematic and we can assist with upgrading.\nLast updated on August 17, 2023",
  "markdown": "## Deploy Your Agent\n\nTo deploy your agent to the cloud, just open a shell and type:\n\nYour first time, you'll be asked a few questions:\n\n*   **What you want to name your agent.** Choose a name with only lowercase letters and dashes.\n*   **What version you want.** You can just accept the default suggestion\n\nAfter you've completed those questions, you'll see the following:\n\nClick that URL to create a new instance of your agent.\n\n## What exactly IS deployment?[](#what-exactly-is-deployment)\n\nDeploying your agent is like releasing software:\n\n*   Your agent will get a name, like `customer-service-bot`\n*   Your deployment will result in a version, like `1.0.0`\n\nThat version -- `customer-service-bot@1.0.0` -- lives in the cloud. If you deployed it as a `public` agent, anyone can create their own **instances**.\n\nEach instance is separate. It's a running copy of your agent.\n\n*   It has its own data & memory\n*   It provides its own API & Web interface\n*   It is pinned to a version of your agent\n\n## How do I deploy Version 2?[](#how-do-i-deploy-version-2)\n\nWhenever you want to deploy a new version, just run:\n\nThe wizard will ask you what the new version number should be and push it up to the cloud.\n\nThe most recently deployed version always becomes the default version for new instances.\n\nDeploying a new version doesn't upgrade running ones!\n\nWhen you deploy a new version, it's like releasing a new version of software.\n\nThe agent instances already running in the cloud continue to run on whatever version they were created with.\n\nReach out to us at [crew@steamship.com](mailto:crew@steamship.com) if this is problematic and we can assist with upgrading.\n\nLast updated on August 17, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/core-concepts/api-py",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/api-py",
    "loadedTime": "2023-08-17T22:10:28.662Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/api-py",
    "title": "AgentService, aka api.py – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "AgentService, aka api.py\nThe src/api.py file contains the AgentService that houses your agent.\nRun it on localhost with ship run local\nDeploy it to the cloud with ship deploy\nOnce deployed to the cloud, you can create multiple instances of it, each with its own private data, logging, and billing.\nThe minimum viable api.py is:\nBut you'll probably want an agent you can talk to on the web and via a chat app.\nTo add both web and Telegram support, just you can use Transport Mixins. Mixins are like plugins for your agent -- they add capabilities that define endpoints, webhooks, and async task queues. Transport mixins add ways to connect to different kinds of chat services.\nHere is the same ChatGPT service above with Web Widget and Telegram support:\nLast updated on August 16, 2023",
  "markdown": "## AgentService, aka api.py\n\nThe `src/api.py` file contains the `AgentService` that houses your agent.\n\n*   Run it on localhost with `ship run local`\n*   Deploy it to the cloud with `ship deploy`\n\nOnce deployed to the cloud, you can create multiple instances of it, each with its own private data, logging, and billing.\n\nThe minimum viable `api.py` is:\n\nBut you'll probably want an agent you can talk to on the web and via a chat app.\n\nTo add both web and Telegram support, just you can use **Transport Mixins**. Mixins are like plugins for your agent -- they add capabilities that define endpoints, webhooks, and async task queues. Transport mixins add ways to connect to different kinds of chat services.\n\nHere is the same ChatGPT service above with Web Widget and Telegram support:\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/core-concepts/your-agent",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/your-agent",
    "loadedTime": "2023-08-17T22:10:29.841Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/your-agent",
    "title": "Parts of Your Agent – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Parts of Your Agent\nYour agent is a custom AI entity you’ve designed. Some agents perform reasoning and planning. Others add tasking and scheduling. You can build one that's entirely made of Python rules if you wish.\nThis guidebook focuses on multimodal agents. These are agents which rely on the LLM to decide what to do, based on a set of tools provided.\nThese agents have:\nGeneral purpose knowledge, from the LLM it's connected to\nA personality and moods that you can control via prompt engineering\nMultimodal skills like generating images\nVoice support both incoming and outgoing\nMemory across a variety of channels: vector search, chat history, and prompt databases\nThe code\nHere's the full content of the src/api.py (opens in a new tab) in your starter project.\nLet's divide that into three sections.\nPart 1 - The System Prompt\nThe system prompt provides the core set of instructions for you agent.\nIn starter project has a system prompt that contains:\nA personality (see the Personality Chapter)\nInstructions for using tools, including multi-modal tools like for generating images and audio.\nThe wording of this prompt plays a huge role in how your LLM reasoner will behave, so spend a lot of time watching how changes you make impacts things.\nPart 2 - Tools\nWe'll cover tools in the next section, but for now think of them as targeted skills that your agent can learn.\nPart 3 - A REPL\nYour AgentREPL is just a miniature program you can run on your local machine to interact with it.\nThis lets you run and debug your agent on localhost, without having to first deploy it to the cloud.\nLast updated on August 16, 2023",
  "markdown": "## Parts of Your Agent\n\nYour agent is a custom AI entity you’ve designed. Some agents perform reasoning and planning. Others add tasking and scheduling. You can build one that's entirely made of Python rules if you wish.\n\nThis guidebook focuses on **multimodal agents**. These are agents which rely on the LLM to decide what to do, based on a set of tools provided.\n\nThese agents have:\n\n*   **General purpose knowledge**, from the LLM it's connected to\n*   **A personality and moods** that you can control via prompt engineering\n*   **Multimodal skills** like generating images\n*   **Voice support** both incoming and outgoing\n*   **Memory** across a variety of channels: vector search, chat history, and prompt databases\n\n## The code[](#the-code)\n\nHere's the full content of the [src/api.py (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/api.py) in your starter project.\n\nLet's divide that into three sections.\n\n## Part 1 - The System Prompt[](#part-1---the-system-prompt)\n\nThe system prompt provides the core set of instructions for you agent.\n\nIn starter project has a system prompt that contains:\n\n*   A personality (see the [Personality Chapter](https://docs.steamship.com/agent-guidebook/personality/add-a-personality))\n*   Instructions for [using tools](https://docs.steamship.com/agent-guidebook/core-concepts/tools), including multi-modal tools like for generating [images](https://docs.steamship.com/agent-guidebook/generate-images) and [audio](https://docs.steamship.com/agent-guidebook/generate-speech).\n\nThe wording of this prompt plays a huge role in how your LLM reasoner will behave, so spend a lot of time watching how changes you make impacts things.\n\n## Part 2 - Tools[](#part-2---tools)\n\nWe'll cover tools in the [next section](https://docs.steamship.com/agent-guidebook/core-concepts/tools), but for now think of them as targeted skills that your agent can learn.\n\n## Part 3 - A REPL[](#part-3---a-repl)\n\nYour `AgentREPL` is just a miniature program you can run on your local machine to interact with it.\n\nThis lets you run and debug your agent on localhost, without having to first deploy it to the cloud.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/core-concepts/memory",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/memory",
    "loadedTime": "2023-08-17T22:10:39.314Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/memory",
    "title": "Memory – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Memory\nYour agent can remember and reference previous parts of conversation with users by leveraging its memory.\nThe storage mechanism for memory is the ChatHistory object. It allows agents to record and access the interactions that it has with users and format it for addition into prompts.\nChatHistory is available within the AgentContext object, which can be accessed from Agents and Tools. Implementors of Agents, Tools, and Transports can decide when is the appropriate time to append conversational data to the ChatHistory object.\nConversation in ChatHistory can be accessed linearly or via search, which is backed by Steamship's vector database.\nFetching by context keys\nIf you need to keep different ChatHistory objects for different contexts (different users, for example) you can control which AgentContext object you receive by passing different context keys to AgentContext.get_or_create. Context keys are an arbitrary dict; sending the same keys means you will receive the same context object back.\nFor example, the Telegram transport uses the Telegram chat_id to create contexts specific to individual chats.\nWindowing access to memory\nSince we cannot pass infinite tokens into LLMs for context, we must choose which pieces of the memory to pass into LLM prompts. The MessageSelector interface is for choosing which pieces of the ChatHistory object are relevant for the current situation.\nTwo MessageSelectors are provided with Steamship:\nMessageWindowMessageSelector selects the n most recent user or assistant messages\nTokenWindowMessageSelector selects the most recent user or assistant messages, up to a specified number of tokens\nYou may also implement your own MessageSelectors to filter messages in the way you see fit. Using MessageSelectors allows you fine control over the amount of context and cost incurred by including it.\nUsing memory in your agent\nWhen implementing an Agent, you can decide how to incorporate ChatHistory into the messages sent to the LLM. By default, the FunctionsBasedAgent uses both messages from search history and a set of most recent messages in its history.\nThe code for the use of memory lives in the next_action method of FunctionsBasedAgent:\nIf you wish to use memory differently in tool selection (and otherwise) for your agent, you can extend FunctionsBasedAgent to override next_action.\nDifference between ChatHistory and AgentContext.completed_steps\nBy convention, ChatHistory is updated whenever messages are exchanged between a user and your AgentService. This means that the only messages in the history are the ones that are part of a two-way conversation between your agent and you.\nThe actions that an Agent takes in order to answer a prompt are stored in AgentContext.completed_steps. Those steps represent the internal state of an Agent as it works through trying to answer a prompt. This \"thinking\" area is refreshed with each new prompt, and is not added to ChatHistory (avoiding message pollution).\nLast updated on August 16, 2023",
  "markdown": "## Memory\n\nYour agent can remember and reference previous parts of conversation with users by leveraging its memory.\n\nThe storage mechanism for memory is the `ChatHistory` object. It allows agents to record and access the interactions that it has with users and format it for addition into prompts.\n\n`ChatHistory` is available within the `AgentContext` object, which can be accessed from `Agents` and `Tools`. Implementors of `Agents`, `Tools`, and `Transports` can decide when is the appropriate time to append conversational data to the `ChatHistory` object.\n\nConversation in `ChatHistory` can be accessed linearly or via `search`, which is backed by Steamship's vector database.\n\n## Fetching by context keys[](#fetching-by-context-keys)\n\nIf you need to keep different `ChatHistory` objects for different contexts (different users, for example) you can control which `AgentContext` object you receive by passing different context keys to `AgentContext.get_or_create`. Context keys are an arbitrary dict; sending the same keys means you will receive the same context object back.\n\nFor example, the Telegram transport uses the Telegram `chat_id` to create contexts specific to individual chats.\n\n## Windowing access to memory[](#windowing-access-to-memory)\n\nSince we cannot pass infinite tokens into LLMs for context, we must choose which pieces of the memory to pass into LLM prompts. The `MessageSelector` interface is for choosing which pieces of the `ChatHistory` object are relevant for the current situation.\n\nTwo `MessageSelectors` are provided with Steamship:\n\n*   `MessageWindowMessageSelector` selects the `n` most recent user or assistant messages\n*   `TokenWindowMessageSelector` selects the most recent user or assistant messages, up to a specified number of tokens\n\nYou may also implement your own `MessageSelectors` to filter messages in the way you see fit. Using `MessageSelectors` allows you fine control over the amount of context and cost incurred by including it.\n\n## Using memory in your agent[](#using-memory-in-your-agent)\n\nWhen implementing an `Agent`, you can decide how to incorporate `ChatHistory` into the messages sent to the LLM. By default, the `FunctionsBasedAgent` uses both messages from search history and a set of most recent messages in its history.\n\nThe code for the use of memory lives in the `next_action` method of `FunctionsBasedAgent`:\n\nIf you wish to use memory differently in tool selection (and otherwise) for your agent, you can extend `FunctionsBasedAgent` to override `next_action`.\n\n## Difference between `ChatHistory` and `AgentContext.completed_steps`[](#difference-between-chathistory-and-agentcontextcompleted_steps)\n\nBy convention, `ChatHistory` is updated whenever messages are exchanged between a user and your `AgentService`. This means that the only messages in the history are the ones that are part of a two-way conversation between your agent and you.\n\nThe actions that an `Agent` takes in order to answer a prompt are stored in `AgentContext.completed_steps`. Those steps represent the internal state of an `Agent` as it works through trying to answer a prompt. This \"thinking\" area is refreshed with each new prompt, and is not added to `ChatHistory` (avoiding message pollution).\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/core-concepts/tools",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/tools",
    "loadedTime": "2023-08-17T22:10:41.271Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/core-concepts/tools",
    "title": "Tools – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Tools\nTools help your agent perform actions or fetch information from the outside world.\nYour starter project already has a few tools in src/example_tools (opens in a new tab) that you can edit and use.\nAnd you can import or find more open source tools in the Steamship SDK (opens in a new tab):\nAudio Transcription: \nAssembly AI (opens in a new tab) - Turns audio into text\nWhisper (opens in a new tab) - Turns audio into text\nRSS Download (opens in a new tab) - Returns Audio URLs from an RSS feed\nClassification: \nSentiment Analysis (opens in a new tab) - Can report on the sentiment of a piece of text\nZero Shot Classification (opens in a new tab) - Can classify a piece of text\nImage Generation: \nDALL-E (opens in a new tab) - Generate images with DALL-E\nStable Diffusion (opens in a new tab) - Generate images with Stable Diffusion\nGoogle Image Search (opens in a new tab) - Perform a Google Image Search and return the results\nSpeech Generation: \nEleven Labs (opens in a new tab) - Turn text into the spoken word\nSearch: \nGoogle Search (opens in a new tab) - Find answers to questions on the web\nQuestion Answering: \nVector Search QA (opens in a new tab) - Find answers to questions in the Steamship Vector Database\nPrompt Database QA (opens in a new tab) - Find answers to questions from a pre-loaded prompt database\nText Generation: \nImage Prompt Generation (opens in a new tab) - Rewrite a topic into a Stable Diffusion image prompt\nPersonality Tool (opens in a new tab) - Reword a response according to a particular personality\nText Summarization (opens in a new tab) - Summarize text\nText Rewriter (opens in a new tab) - Utility tool for building tools that use prompts to operate\nTranslation (opens in a new tab) - Translate text using an LLM\nConversation Starters: \nKnock Knock Joke Starter (opens in a new tab) - Initiate a knock knock joke. The world's most useful tool.\nTools are run in the Cloud\nEvery Steamship tool is managed for you and run in the cloud. That way you, and your agent, can use them like Python functions without worrying about:\nAuthentication (for tools that require it, like DALL-E)\nLogging so you can track what each agent is doing\nMetering so you can track how much each agent is using\nLoad balancing & rate limiting so you don't have to worry about overloading API endpoints\nRetry on error so you don't have to add your own retry logic\nAsync execution so you can kick off large jobs without worrying about HTTP timeouts\nBuilding your own tool\nA tool is just a basic Python class with a few fields:\nFor now, tools should return lists of Blocks (opens in a new tab). Async support is coming soon.\nThe name field is the token that will be used by the ReACT LLM to request the tool.\nThe human_description is used for logging output for human consumption\nThe agent_description is used to tell the LLM how the tool should be used.\nThe run method returns Block objects instead of str (as with some other frameworks) in order to support multi-modal output.\nThe AgentContext object contains a copy of the Steamship Client (opens in a new tab) which is pre-authenticated into the workspace (opens in a new tab) in which your agent is running.\nThat means the tools you write can use it for:\nVector Search (opens in a new tab)\nKey-Value storage (opens in a new tab)\nFile storage (opens in a new tab)\nAnd arbitrary model invocation on data you have\nLast updated on August 16, 2023",
  "markdown": "## Tools\n\nTools help your agent perform actions or fetch information from the outside world.\n\nYour starter project already has a few tools in [`src/example_tools` (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_tools/) that you can edit and use.\n\nAnd you can import or find more open source tools in the [Steamship SDK (opens in a new tab)](https://github.com/steamship-core/python-client):\n\n*   Audio Transcription:\n    *   [Assembly AI (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/audio_transcription/assembly_speech_to_text_tool.py) - Turns audio into text\n    *   [Whisper (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/audio_transcription/whisper_speech_to_text_tool.py) - Turns audio into text\n    *   [RSS Download (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/audio_transcription/fetch_audio_urls_from_rss_tool.py) - Returns Audio URLs from an RSS feed\n*   Classification:\n    *   [Sentiment Analysis (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/classification/sentiment_analysis_tool.py) - Can report on the sentiment of a piece of text\n    *   [Zero Shot Classification (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/classification/zero_shot_classifier_tool.py) - Can classify a piece of text\n*   Image Generation:\n    *   [DALL-E (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/dalle.py) - Generate images with DALL-E\n    *   [Stable Diffusion (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/stable_diffusion.py) - Generate images with Stable Diffusion\n    *   [Google Image Search (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/google_image_search.py) - Perform a Google Image Search and return the results\n*   Speech Generation:\n    *   [Eleven Labs (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/speech_generation/generate_speech.py) - Turn text into the spoken word\n*   Search:\n    *   [Google Search (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/search/search.py) - Find answers to questions on the web\n*   Question Answering:\n    *   [Vector Search QA (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/vector_search_qa_tool.py) - Find answers to questions in the Steamship Vector Database\n    *   [Prompt Database QA (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/prompt_database_question_answerer.py) - Find answers to questions from a pre-loaded prompt database\n*   Text Generation:\n    *   [Image Prompt Generation (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/text_generation/image_prompt_generator_tool.py) - Rewrite a topic into a Stable Diffusion image prompt\n    *   [Personality Tool (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/text_generation/personality_tool.py) - Reword a response according to a particular personality\n    *   [Text Summarization (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/text_generation/summarize_text_with_prompt_tool.py) - Summarize text\n    *   [Text Rewriter (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/text_generation/text_rewrite_tool.py) - Utility tool for building tools that use prompts to operate\n    *   [Translation (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/text_generation/text_translation_tool.py) - Translate text using an LLM\n*   Conversation Starters:\n    *   [Knock Knock Joke Starter (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/conversation_starters/knock_knock_tool.py) - Initiate a knock knock joke. The world's most useful tool.\n\n## Tools are run in the Cloud[](#tools-are-run-in-the-cloud)\n\nEvery Steamship tool is managed for you and run in the cloud. That way you, and your agent, can use them like Python functions without worrying about:\n\n*   **Authentication** (for tools that require it, like DALL-E)\n*   **Logging** so you can track what each agent is doing\n*   **Metering** so you can track how much each agent is using\n*   **Load balancing & rate limiting** so you don't have to worry about overloading API endpoints\n*   **Retry on error** so you don't have to add your own retry logic\n*   **Async execution** so you can kick off large jobs without worrying about HTTP timeouts\n\n## Building your own tool[](#building-your-own-tool)\n\nA tool is just a basic Python class with a few fields:\n\nFor now, tools should return lists of [Blocks (opens in a new tab)](https://docs.steamship.com/data/blocks). Async support is coming soon.\n\n*   The `name` field is the token that will be used by the ReACT LLM to request the tool.\n*   The `human_description` is used for logging output for human consumption\n*   The `agent_description` is used to tell the LLM how the tool should be used.\n*   The `run` method returns `Block` objects instead of `str` (as with some other frameworks) in order to support multi-modal output.\n\nThe `AgentContext` object contains a copy of the [Steamship Client (opens in a new tab)](https://docs.steamship.com/) which is pre-authenticated into the [workspace (opens in a new tab)](https://docs.steamship.com/data/workspaces) in which your agent is running.\n\nThat means the tools you write can use it for:\n\n*   [Vector Search (opens in a new tab)](https://docs.steamship.com/embedding-search)\n*   [Key-Value storage (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/utils/kv_store.py)\n*   [File storage (opens in a new tab)](https://docs.steamship.com/data/files)\n*   And arbitrary model invocation on data you have\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/personality/add-a-personality",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/personality/add-a-personality",
    "loadedTime": "2023-08-17T22:10:51.610Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/personality/add-a-personality",
    "title": "Add a Personality – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Add a Personality\nYour Agent's personality is drive primarily by its SYSTEM_PROMPT. This prompt acts as a preamble to the text completions that your agent does to contribute to a chat.\nAt the top of most example agents (opens in a new tab), you'll find a variable named SYSTEM_PROMPT that you can modify to experiment with this personality. It may include text like this:\nLast updated on August 16, 2023",
  "markdown": "## Add a Personality\n\nYour Agent's personality is drive primarily by its `SYSTEM_PROMPT`. This prompt acts as a preamble to the text completions that your agent does to contribute to a chat.\n\nAt the top of most [example agents (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/tree/main/src/example_agents), you'll find a variable named `SYSTEM_PROMPT` that you can modify to experiment with this personality. It may include text like this:\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/personality/add-a-dynamic-mood",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/personality/add-a-dynamic-mood",
    "loadedTime": "2023-08-17T22:11:50.932Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/personality/add-a-dynamic-mood",
    "title": "Add Mood – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Add Mood\nYour agent's personality can change over time based on memories and events.\nYou can program it to act caring for the next 24 hours after you've told it you've had a bad day.\nYou can program it to challenge you if you ask it to help prepare for an interview.\nThey key to achieving this is the following strategy:\nMood is just a temporary change or addition to the personality prompt.\nYou save moods & mood timeouts using Steamship's persistence stack.\nYou can detect when to activate a mood in a number of places of your agent's operation.\nLet's unpack this below.\nMood is just a temporary change to personality.\nFor example, imagine your SYSTEM_PROMPT contains the following instructions:\nYou could imagine breaking this system prompt into a default prompt, plus a mood:\nYou've essentially templatized the system prompt into two layers:\nThe personality layer, which always applies (this is your agent's personality)\nThe mood layer, which may differ based on the agent's mood (listed as normal and mischievous above)\nTo get the final system prompt, you need only use Python's built-in string formatting:\nSave a mood & timeout using Steamship's persistence stack\nThe above description shows you how to add a mood, but not how to save that mood so that your Agent will maintain it until you want otherwise.\nYou can save it using Steamship's KeyValueStore, which is available anywhere in your agent that has access to the Steamship client or AgentContext.\nActivate a mood in a number of places\nThis documentation is somewhat open-ended because \"AI mood swings\" aren't exactly well understood territory. That said, here are a few ideas for how you might incorporate moods into your agent:\nFrom inside a Tool: When a Tool runs, it has access to the AgentContext, which means it can have a side effect of persisting a mood.\nBy listening the Agent's Message traffic You could augment the Agent class to listen to messages. In addition to planning work & responding with LLMs, you could react to keywords in the messages going back and forth by altering your agent's mood.\nVia API Endpoint Your AgentService allows you to add arbitrary HTTP GET and HTTP POST endpoints. You can use these to create a API that manually changes the mood.\nChallenges to expect\nThe above technique blends mood into your SYSTEM_PROMPT.\nThis can work well, but it also means you'll have to engineer your mood descriptions that don't interact badly with the other purposes of that prompt. (In a way, this isn't so different that a strong mood impairing the normal behavior of us humans.)\nLast updated on August 16, 2023",
  "markdown": "## Add Mood\n\nYour agent's personality can change over time based on memories and events.\n\n*   You can program it to act caring for the next 24 hours after you've told it you've had a bad day.\n*   You can program it to challenge you if you ask it to help prepare for an interview.\n\nThey key to achieving this is the following strategy:\n\n1.  Mood is just a temporary change or addition to the personality prompt.\n2.  You save moods & mood timeouts using Steamship's persistence stack.\n3.  You can detect when to activate a mood in a number of places of your agent's operation.\n\nLet's unpack this below.\n\n## Mood is just a temporary change to personality.[](#mood-is-just-a-temporary-change-to-personality)\n\nFor example, imagine your `SYSTEM_PROMPT` contains the following instructions:\n\nYou could imagine breaking this system prompt into a default prompt, plus a mood:\n\nYou've essentially templatized the system prompt into two layers:\n\n*   The personality layer, which always applies (this is your agent's personality)\n*   The mood layer, which may differ based on the agent's mood (listed as `normal` and `mischievous` above)\n\nTo get the final system prompt, you need only use Python's built-in string formatting:\n\n## Save a mood & timeout using Steamship's persistence stack[](#save-a-mood--timeout-using-steamships-persistence-stack)\n\nThe above description shows you how to add a mood, but not how to save that mood so that your Agent will maintain it until you want otherwise.\n\nYou can save it using Steamship's `KeyValueStore`, which is available **anywhere** in your agent that has access to the Steamship client or `AgentContext`.\n\n## Activate a mood in a number of places[](#activate-a-mood-in-a-number-of-places)\n\nThis documentation is somewhat open-ended because \"AI mood swings\" aren't exactly well understood territory. That said, here are a few ideas for how you might incorporate moods into your agent:\n\n*   **From inside a `Tool`**: When a `Tool` runs, it has access to the `AgentContext`, which means it can have a side effect of persisting a mood.\n    \n*   **By listening the Agent's Message traffic** You could augment the `Agent` class to listen to messages. In addition to planning work & responding with LLMs, you could react to keywords in the messages going back and forth by altering your agent's mood.\n    \n*   **Via API Endpoint** Your `AgentService` allows you to add arbitrary `HTTP GET` and `HTTP POST` endpoints. You can use these to create a API that manually changes the mood.\n    \n\n## Challenges to expect[](#challenges-to-expect)\n\nThe above technique blends mood into your `SYSTEM_PROMPT`.\n\nThis can work well, but it also means you'll have to engineer your mood descriptions that don't interact badly with the other purposes of that prompt. (In a way, this isn't so different that a strong mood impairing the normal behavior of us humans.)\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/personality/personality-ideas",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/personality/personality-ideas",
    "loadedTime": "2023-08-17T22:11:57.972Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/personality/personality-ideas",
    "title": "Personality Ideas – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Take an hour and see how far you can push the idea of personality hacking. It's probably farther than you think.\nCan you give your agent..\nA Helpful Personality?\nDirected at explaining things to a novice?\nDirected at pumping someone up before a big event?\nDirected at helping someone think through a problem?\nA Manipulative Personality?\nThat always frames things from a particular political viewpoint?\nThat tries to subtly suggest any problems you have can be solved with a shopping spree?\nA one-track-mind?\nThat only talks about cheeseburgers, trying to bring any other conversation back to them?\nA COMPUTER mind?\nThat responds to your English language questions with JSON or CSV?\nThat responds to your English language questions with a plausible database query that might answer them?\nA translator?\nThat responds to every question in French?",
  "markdown": "Take an hour and see how far you can push the idea of personality hacking. It's probably farther than you think.\n\nCan you give your agent..\n\n**A Helpful Personality?**\n\n*   Directed at explaining things to a novice?\n*   Directed at pumping someone up before a big event?\n*   Directed at helping someone think through a problem?\n\n**A Manipulative Personality?**\n\n*   That always frames things from a particular political viewpoint?\n*   That tries to subtly suggest any problems you have can be solved with a shopping spree?\n\n**A one-track-mind?**\n\n*   That only talks about cheeseburgers, trying to bring any other conversation back to them?\n\n**A COMPUTER mind?**\n\n*   That responds to your English language questions with JSON or CSV?\n*   That responds to your English language questions with a plausible database query that might answer them?\n\n**A translator?**\n\n*   That responds to every question in French?"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/generate-images/generate-dalle-images",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/generate-images/generate-dalle-images",
    "loadedTime": "2023-08-17T22:11:58.425Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/generate-images/generate-dalle-images",
    "title": "Generate DALL-E Images – Steamship",
    "description": "Give your agent the ability to return DALL-E images.",
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "You can use the DalleTool (opens in a new tab) to generate and return DALL-E images from your agent.\nBuilding a ReACT Agent with DalleTool\nJust provide the DalleTool (opens in a new tab) to your FunctionsBasedAgent (opens in a new tab) to use it.\nBy default, this will cause the ReACT agent to generate an image when you request a picture of something. It will do so using Steamship's managed DALL-E plugin.\nIf you want to change or constrain the circumstances when this tool is used, you can set the ai_description field during initialization:\nFull-working examples of DalleTool\nThe following examples can be copy-pasted into your project:\nCaptainPicardWithVoice (opens in a new tab) - Uses Stable Diffusion to generate pictures when you ask him what he sees outside the space ship. Just change StableDiffusionTool for DalleTool.\nDeploying an AgentService with DalleTool\nTo deploy an agent with this tool, just make sure it's properly wrapped in an AgentService wrapper and then follow the normal deployment instructions. You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\nLast updated on August 16, 2023",
  "markdown": "You can use the [`DalleTool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/dalle.py) to generate and return DALL-E images from your agent.\n\n## Building a ReACT Agent with `DalleTool`[](#building-a-react-agent-with-dalletool)\n\nJust provide the [`DalleTool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/dalle.py) to your [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py) to use it.\n\nBy default, this will cause the ReACT agent to generate an image when you request a picture of something. It will do so using Steamship's managed DALL-E plugin.\n\nIf you want to change or constrain the circumstances when this tool is used, you can set the `ai_description` field during initialization:\n\n## Full-working examples of `DalleTool`[](#full-working-examples-of-dalletool)\n\nThe following examples can be copy-pasted into your project:\n\n*   [CaptainPicardWithVoice (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/captain_picard_with_voice.py) - Uses Stable Diffusion to generate pictures when you ask him what he sees outside the space ship. Just change `StableDiffusionTool` for `DalleTool`.\n\n## Deploying an AgentService with `DalleTool`[](#deploying-an-agentservice-with-dalletool)\n\nTo deploy an agent with this tool, just make sure it's properly wrapped in an [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py) wrapper and then follow the normal [deployment instructions](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent). You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/generate-images/generate-google-search-images",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/generate-images/generate-google-search-images",
    "loadedTime": "2023-08-17T22:11:58.921Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/generate-images/generate-google-search-images",
    "title": "Send Google Image Search Results – Steamship",
    "description": "Give your agent the ability to search and send Google Image Search results",
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "You can use the GoogleImageSearchTool (opens in a new tab) to generate and return Google Image Search results from your agent.\nBuilding a ReACT Agent with GoogleImageSearchTool\nJust provide the GoogleImageSearchTool (opens in a new tab) to your FunctionsBasedAgent (opens in a new tab) to use it.\nBy default, this will cause the ReACT agent to generate an image when you request a picture of something. If will do so by using Google's managed Google Image Search plugin.\nIf you want to change or constrain the circumstances when this tool is used, you can set the ai_description field during initialization:\nFull-working examples of DalleTool\nThe following examples can be copy-pasted into your project:\nGoogleChatbot (opens in a new tab) - Uses Google Image Search and Google Question Answering to generate images and answers from the web.\nDeploying an AgentService with GoogleImageSearchTool\nTo deploy an agent with this tool, just make sure it's properly wrapped in an AgentService wrapper and then follow the normal deployment instructions. You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\nLast updated on August 16, 2023",
  "markdown": "You can use the [`GoogleImageSearchTool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/google_image_search.py) to generate and return Google Image Search results from your agent.\n\n## Building a ReACT Agent with `GoogleImageSearchTool`[](#building-a-react-agent-with-googleimagesearchtool)\n\nJust provide the [`GoogleImageSearchTool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/google_image_search.py) to your [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py) to use it.\n\nBy default, this will cause the ReACT agent to generate an image when you request a picture of something. If will do so by using Google's managed Google Image Search plugin.\n\nIf you want to change or constrain the circumstances when this tool is used, you can set the `ai_description` field during initialization:\n\n## Full-working examples of `DalleTool`[](#full-working-examples-of-dalletool)\n\nThe following examples can be copy-pasted into your project:\n\n*   [GoogleChatbot (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/google_chatbot.py) - Uses Google Image Search and Google Question Answering to generate images and answers from the web.\n\n## Deploying an AgentService with `GoogleImageSearchTool`[](#deploying-an-agentservice-with-googleimagesearchtool)\n\nTo deploy an agent with this tool, just make sure it's properly wrapped in an [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py) wrapper and then follow the normal [deployment instructions](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent). You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/generate-images",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/generate-images",
    "loadedTime": "2023-08-17T22:11:58.111Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/generate-images",
    "title": "Generate Images – Steamship",
    "description": "Give your agent powers like DALL-E, StableDiffusion, and Google Image Search.",
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Steamship agents are multi-modal: they can send and receive text, images, audio, and video.\nThis chapter shows you how to generate (or locate) and return images from your agents:\nwith DALL-E\nwith Stable Diffusion\nwith Google Image Search\nIt also shows how to build new image Tools that wrap these tools with your own prompts or logic:\nImage & Prompt Bundling\nWhat you can build with this chapter\nThis chapter will let you build:\nAn agent that can fetch images from the web for you (with Google Image Search)\nA chatbot that can generate DALL-E or Stable Diffusion images for your friends in a chat room\nYou can combine these skills with personalities and moods to:\nCreate characters that can show you their imaginary world\nCreate characters whose image generation style is influenced by the mood they're in\nYou can combine these skills with Steamship's Key-Value storage (opens in a new tab) to:\nCreate characters that remember where the are, and show you photos from that place\nCreate bots that let you and your friends record prompt macros and then use them to generate images\nLast updated on August 16, 2023",
  "markdown": "Steamship agents are multi-modal: they can send and receive text, images, audio, and video.\n\nThis chapter shows you how to generate (or locate) and return images from your agents:\n\n*   [with DALL-E](https://docs.steamship.com/agent-guidebook/generate-images/generate-dalle-images)\n*   [with Stable Diffusion](https://docs.steamship.com/agent-guidebook/generate-images/generate-stable-diffusion-images)\n*   [with Google Image Search](https://docs.steamship.com/agent-guidebook/generate-images/generate-google-search-images)\n\nIt also shows how to build new image [Tools](https://docs.steamship.com/agent-guidebook/core-concepts/tools) that wrap these tools with your own prompts or logic:\n\n*   [Image & Prompt Bundling](https://docs.steamship.com/agent-guidebook/generate-images/bundling-prompts)\n\n## What you can build with this chapter[](#what-you-can-build-with-this-chapter)\n\nThis chapter will let you build:\n\n*   An agent that can fetch images from the web for you (with [Google Image Search](https://docs.steamship.com/agent-guidebook/generate-images/generate-google-search-images))\n*   A chatbot that can generate DALL-E or Stable Diffusion images for your friends in a chat room\n\nYou can combine these skills with [personalities](https://docs.steamship.com/agent-guidebook/personality/add-a-personality) and [moods](https://docs.steamship.com/agent-guidebook/personality/add-a-dynamic-mood) to:\n\n*   Create characters that can show you their imaginary world\n*   Create characters whose image generation style is influenced by the mood they're in\n\nYou can combine these skills with Steamship's [Key-Value storage (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/utils/kv_store.py) to:\n\n*   Create characters that remember where the are, and show you photos from that place\n*   Create bots that let you and your friends record prompt macros and then use them to generate images\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/personality/add-a-configurable-personality",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/personality/add-a-configurable-personality",
    "loadedTime": "2023-08-17T22:11:58.667Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/personality/add-a-configurable-personality",
    "title": "Add a Configurable Personality – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Add a Configurable Personality\nServices like Character AI let you create characters with a personality of your choosing. You can let users of your Steamship agents do that, too.\nYour AgentService can define configuration parameters (opens in a new tab) to be provided when you create a new instance of your agent.\nWhen users create an instance of your agent on the web, they will see a text box for each configuration parameter\nWhen users create an instance of your agent via API, they will provide them as JSON\nThese configuration parameters are fixed for the entire lifespan of your agent, and they're always available on the self.config object.\nUsing AgentService Configuration to Drive Personality\nYou can use your AgentService configuration to drive personality by creating a system prompt which is actually a template. Then fill in the values of that template with the configuration parameters.\nFor example, you might write a SYSTEM_PROMPT template that has three main fields: Agent Name, Agent Tagline, and Agent Personality:\nYou could incorporate that into your full AgentService like this, resulting in an agent that could adopt whichever persona the instantiator wished of it.\nHere's what that might look like in the context of a full agent:\nWhen users create the agent, they can provide the name, tagline, and personality. But if they do not provide those, they'll get an agent that behaves like Harry Potter.\nLast updated on August 16, 2023",
  "markdown": "## Add a Configurable Personality\n\nServices like Character AI let you create characters with a personality of your choosing. You can let users of your Steamship agents do that, too.\n\nYour AgentService can define [configuration parameters (opens in a new tab)](https://docs.steamship.com/developing/configuration) to be provided when you create a new instance of your agent.\n\n*   When users create an instance of your agent on the web, they will see a text box for each configuration parameter\n*   When users create an instance of your agent via API, they will provide them as JSON\n\nThese configuration parameters are fixed for the entire lifespan of your agent, and they're always available on the `self.config` object.\n\n## Using AgentService Configuration to Drive Personality[](#using-agentservice-configuration-to-drive-personality)\n\nYou can use your AgentService configuration to drive personality by creating a system prompt which is actually a template. Then fill in the values of that template with the configuration parameters.\n\nFor example, you might write a `SYSTEM_PROMPT` template that has three main fields: `Agent Name`, `Agent Tagline`, and `Agent Personality`:\n\nYou could incorporate that into your full AgentService like this, resulting in an agent that could adopt whichever persona the instantiator wished of it.\n\nHere's what that might look like in the context of a full agent:\n\nWhen users create the agent, they can provide the name, tagline, and personality. But if they do not provide those, they'll get an agent that behaves like Harry Potter.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/generate-images/bundling-prompts",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/generate-images/bundling-prompts",
    "loadedTime": "2023-08-17T22:12:10.932Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/generate-images/bundling-prompts",
    "title": "Custom Image Prompt Tools – Steamship",
    "description": "How to bundle your special prompt into a tool.",
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "A great example of building your own tool -- using existing tools as a building block -- is one that combines a prompt template with an image generator.\nConsider this prompt to generate a Pixar-style image:\nYou could turn this prompt into a template with the following Python:\nAnd wrap into a tool of its own, capable of generating Pixar-style images:\nThis tool is located as an example in your starter project at src/example_tools/pixar-style_tool.py (opens in a new tab)\nLast updated on August 16, 2023",
  "markdown": "A great example of building your own tool -- using existing tools as a building block -- is one that combines a prompt template with an image generator.\n\nConsider this prompt to generate a Pixar-style image:\n\nYou could turn this prompt into a template with the following Python:\n\nAnd wrap into a tool of its own, capable of generating Pixar-style images:\n\nThis tool is located as an example in your starter project at [`src/example_tools/pixar-style_tool.py` (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_tools/pixar_style_tool.py)\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/generate-images/generate-stable-diffusion-images",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/generate-images/generate-stable-diffusion-images",
    "loadedTime": "2023-08-17T22:12:11.718Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/generate-images/generate-stable-diffusion-images",
    "title": "Generate Stable Diffusion Images – Steamship",
    "description": "Give your agent the ability to return Stable Diffusion images.",
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "You can use the StableDiffusionTool (opens in a new tab) to generate and return Stable Diffusion images from your agent.\nBuilding a ReACT Agent with StableDiffusionTool\nJust provide the StableDiffusionTool (opens in a new tab) to your FunctionsBasedAgent (opens in a new tab) to use it.\nBy default, this will cause the ReACT agent to generate an image when you request a picture of something. It will do so using Steamship's managed Stable Diffusion plugin.\nIf you want to change or constrain the circumstances when this tool is used, you can set the ai_description field during initialization:\nFull-working examples of DalleTool\nThe following examples can be copy-pasted into your project:\nCaptainPicardWithVoice (opens in a new tab) - Uses Stable Diffusion to generate pictures when you ask him what he sees outside the space ship.\nDeploying an AgentService with StableDiffusionTool\nTo deploy an agent with this tool, just make sure it's properly wrapped in an AgentService wrapper and then follow the normal deployment instructions. You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\nLast updated on August 16, 2023",
  "markdown": "You can use the [`StableDiffusionTool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/stable_diffusion.py) to generate and return Stable Diffusion images from your agent.\n\n## Building a ReACT Agent with `StableDiffusionTool`[](#building-a-react-agent-with-stablediffusiontool)\n\nJust provide the [`StableDiffusionTool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/image_generation/stable_diffusion.py) to your [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py) to use it.\n\nBy default, this will cause the ReACT agent to generate an image when you request a picture of something. It will do so using Steamship's managed Stable Diffusion plugin.\n\nIf you want to change or constrain the circumstances when this tool is used, you can set the `ai_description` field during initialization:\n\n## Full-working examples of `DalleTool`[](#full-working-examples-of-dalletool)\n\nThe following examples can be copy-pasted into your project:\n\n*   [CaptainPicardWithVoice (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/captain_picard_with_voice.py) - Uses Stable Diffusion to generate pictures when you ask him what he sees outside the space ship.\n\n## Deploying an AgentService with `StableDiffusionTool`[](#deploying-an-agentservice-with-stablediffusiontool)\n\nTo deploy an agent with this tool, just make sure it's properly wrapped in an [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py) wrapper and then follow the normal [deployment instructions](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent). You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/learning/learn-from-pdfs",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/learning/learn-from-pdfs",
    "loadedTime": "2023-08-17T22:12:20.156Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/learning/learn-from-pdfs",
    "title": "Learn from PDFs on the Web – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Give your agent the ability to read and remember PDF content\nUse the IndexerPipelineMixin (opens in a new tab) to give your agent the ability to read and remember PDF files.\nA full working example is available here (opens in a new tab). You can copy and paste this agent into your api.py file or use it as a reference.\nMixins\nA Mixin is just a way to add a bundle of functionality to your AgentService. Mixins can include new API endpoints, async processing pipelines, and webhooks.\nAdding the IndexerPipelineMixin\nAdd IndexerPipelineMixin to the static USED_MIXIN_CLASSES list in your AgentService\nRegister IndexerPipelineMixin in your AgentService __init__ with \nAdding this mixin registers an entire asynchronous document processing pipeline to your agent, along with an API endpoint (/index_url) to access it.\nThis pipeline will:\nImport provided URLs\nConvert them to text format (currently only PDF and YouTube are supported -- see the Customizing section below!)\nChunk the data for use question-answering Tools\nEmbed each chunk into your agent's default Vector Database (created on-demand for it)\nLearning new content with IndexerPipelineMixin\nNOTE: IndexerPipelineMixin currently only functions in deployed agents. You will have to run ship deploy to learn new information with this Mixin.\nVia API\nAny AgentService with the IndexerPipelineMixin gains two authenticated endpoints /index_url and /index_text that let you load information into your agent.\nTo view the documentation for your agent's learning endpoints:\nDeploy your agent if you haven't done so already\nCreate an instance so that you can use it\nView your agent instance's web page\nClick on the Manage tab of your agent instance's web page\nClick on the API tab in your agent's management console\nClick on either the /index_url or /index_text endpoints for customized API documentation\nIn the case of PDF files, simply provide the URL of the PDF file to the /index_url argument as directed by the API documentation.\nVia the Web Interface\nProceed just as with the instructions for API learning, but use the auto-generated web endpoint for the API method.\nNote that you only need to provide the url argument.\nPDF Specific Notes\nOur PDF processing plugin currently only supports text PDFs.\nIf your PDF is scanned and each page is an image, it will fail to parse.\nAdding file importer plugins to Steamship to leverage cloud OCR services is relatively easy. If you create one, please consider sending us a pull request on GitHub (opens in a new tab)!\nCustomizing the Behavior of IndexerPipelineMixin\nSteamship mixins are just open-source Python. The source for this mixin is available here (opens in a new tab). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\nThis particular tool works by:\nLoading three other mixins: \nThe FileImporterMixin (opens in a new tab), which adds API endpoints to scrape data from the web and YouTube.\nThe BlockifierMixin (opens in a new tab), which adds API endpoints to convert PDF and Video data to text.\nThe IndexerMixin (opens in a new tab), which adds API endpoints chunk and embed documents into a vector database, for use with question-answering tools.\nAdds an API endpoint which orchestrates an asynchronous task pipeline that scrapes, converts, chunks, embeds, and stores documents in a vector database.\nThis pipeline is open source Python and very customizable: you can incorporate tools such as LlamaIndex or LangChain if they contain specific importers or splitters you need.\nHere are some ideas for how you might extend it:\nExtend the FileImporterMixin to support auto-detection of new URL types, such as Wikipedia or the SEC's EDGAR database\nExtend the BlockifierMixin to support new filetypes, such as images (via OCR or other image-to-text models)\nExtend the IndexerMixin to utilize different text chunking/splitting strategies\nAdd a /learn_website endpoint which scrapes an entire website and schedules the learning of it\nIf you create an interesting customization of this tool, please consider sending us a pull request on GitHub (opens in a new tab)!\nLast updated on August 16, 2023",
  "markdown": "Give your agent the ability to read and remember PDF content\n\nUse the [`IndexerPipelineMixin` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/indexer_pipeline_mixin.py) to give your agent the ability to read and remember PDF files.\n\n**[A full working example is available here (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/document_qa_agent.py)**. You can copy and paste this agent into your `api.py` file or use it as a reference.\n\nMixins\n\nA **Mixin** is just a way to add a bundle of functionality to your `AgentService`. Mixins can include new API endpoints, async processing pipelines, and webhooks.\n\n## Adding the `IndexerPipelineMixin`[](#adding-the-indexerpipelinemixin)\n\n1.  Add `IndexerPipelineMixin` to the static `USED_MIXIN_CLASSES` list in your AgentService\n2.  Register `IndexerPipelineMixin` in your AgentService `__init__` with\n\nAdding this mixin registers an entire asynchronous document processing pipeline to your agent, along with an API endpoint (`/index_url`) to access it.\n\nThis pipeline will:\n\n*   Import provided URLs\n*   Convert them to text format (currently only PDF and YouTube are supported -- see the Customizing section below!)\n*   Chunk the data for use question-answering Tools\n*   Embed each chunk into your agent's default Vector Database (created on-demand for it)\n\n## Learning new content with `IndexerPipelineMixin`[](#learning-new-content-with-indexerpipelinemixin)\n\n**NOTE: `IndexerPipelineMixin` currently only functions in deployed agents. You will have to run `ship deploy` to learn new information with this Mixin.**\n\n### Via API[](#via-api)\n\nAny `AgentService` with the `IndexerPipelineMixin` gains two authenticated endpoints `/index_url` and `/index_text` that let you load information into your agent.\n\nTo view the documentation for your agent's learning endpoints:\n\n1.  [Deploy your agent](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent) if you haven't done so already\n2.  [Create an instance](https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent) so that you can use it\n3.  [View your agent instance's web page](https://docs.steamship.com/agent-guidebook/connect/use-on-the-web)\n4.  Click on the **Manage** tab of your agent instance's web page\n5.  Click on the **API** tab in your agent's management console\n6.  Click on either the `/index_url` or `/index_text` endpoints for customized API documentation\n\nIn the case of PDF files, simply provide the URL of the PDF file to the `/index_url` argument as directed by the API documentation.\n\n### Via the Web Interface[](#via-the-web-interface)\n\nProceed just as with the instructions for API learning, but use the auto-generated web endpoint for the API method.\n\nNote that you only need to provide the `url` argument.\n\n## PDF Specific Notes[](#pdf-specific-notes)\n\nOur PDF processing plugin currently only supports text PDFs.\n\nIf your PDF is scanned and each page is an image, it will fail to parse.\n\nAdding file importer plugins to Steamship to leverage cloud OCR services is relatively easy. If you create one, please consider sending us a [pull request on GitHub (opens in a new tab)](https://github.com/steamship-core/python-client)!\n\n## Customizing the Behavior of `IndexerPipelineMixin`[](#customizing-the-behavior-of-indexerpipelinemixin)\n\nSteamship mixins are just open-source Python. The source for this mixin is available [here (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/indexer_pipeline_mixin.py). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\n\nThis particular tool works by:\n\n1.  Loading three other mixins:\n    1.  The [`FileImporterMixin` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/file_importer_mixin.py), which adds API endpoints to scrape data from the web and YouTube.\n    2.  The [`BlockifierMixin` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/blockifier_mixin.py), which adds API endpoints to convert PDF and Video data to text.\n    3.  The [`IndexerMixin` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/indexer_mixin.py), which adds API endpoints chunk and embed documents into a vector database, for use with question-answering tools.\n2.  Adds an API endpoint which orchestrates an asynchronous task pipeline that scrapes, converts, chunks, embeds, and stores documents in a vector database.\n\nThis pipeline is open source Python and very customizable: you can incorporate tools such as LlamaIndex or LangChain if they contain specific importers or splitters you need.\n\nHere are some ideas for how you might extend it:\n\n*   Extend the `FileImporterMixin` to support auto-detection of new URL types, such as Wikipedia or the SEC's EDGAR database\n*   Extend the `BlockifierMixin` to support new filetypes, such as images (via OCR or other image-to-text models)\n*   Extend the `IndexerMixin` to utilize different text chunking/splitting strategies\n*   Add a `/learn_website` endpoint which scrapes an entire website and schedules the learning of it\n\nIf you create an interesting customization of this tool, please consider sending us a [pull request on GitHub (opens in a new tab)](https://github.com/steamship-core/python-client)!\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/learning",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/learning",
    "loadedTime": "2023-08-17T22:12:22.158Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/learning",
    "title": "Learning Information – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "A Vector Database (aka Embedding Index) is just a way to store and search through natural language content.\nSteamship contains a built-in vector database that's configured to \"just work\" with Agents and Tool. By default it auto-applies OpenAI's embeddings to text ans queries.",
  "markdown": "A Vector Database (aka Embedding Index) is just a way to store and search through natural language content.\n\nSteamship contains a built-in vector database that's configured to \"just work\" with Agents and Tool. By default it auto-applies OpenAI's embeddings to text ans queries."
},
{
  "url": "https://docs.steamship.com/agent-guidebook/learning/learn-from-youtube",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/learning/learn-from-youtube",
    "loadedTime": "2023-08-17T22:12:24.523Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/learning/learn-from-youtube",
    "title": "Transcribe and Learn from YouTube Videos – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Give your agent the ability to watch and remember YouTube videos\nUse the IndexerPipelineMixin (opens in a new tab) to give your agent the ability to watch and remember YouTube videos.\nA full working example is available here (opens in a new tab). You can copy and paste this agent into your api.py file or use it as a reference.\nMixins\nA Mixin is just a way to add a bundle of functionality to your AgentService. Mixins can include new API endpoints, async processing pipelines, and webhooks.\nAdding the IndexerPipelineMixin\nAdd IndexerPipelineMixin to the static USED_MIXIN_CLASSES list in your AgentService\nRegister IndexerPipelineMixin in your AgentService __init__ with \nAdding this mixin registers an entire asynchronous document processing pipeline to your agent, along with an API endpoint (/learn_url) to access it.\nThis pipeline will:\nImport provided URLs\nConvert them to text format (currently only PDF and YouTube are supported -- see the Customizing section below!)\nChunk the data for use question-answering Tools\nEmbed each chunk into your agent's default Vector Database (created on-demand for it)\nLearning new content with IndexerPipelineMixin\nNOTE: IndexerPipelineMixin currently only functions in deployed agents. You will have to run ship deploy to learn new information with this Mixin.\nVia API\nAny AgentService with the IndexerPipelineMixin gains two authenticated endpoints /index_url and /index_text that let you load information into your agent.\nTo view the documentation for your agent's learning endpoints:\nDeploy your agent if you haven't done so already\nCreate an instance so that you can use it\nView your agent instance's web page\nClick on the Manage tab of your agent instance's web page\nClick on the API tab in your agent's management console\nClick on either the /index_url or /index_text endpoints for customized API documentation\nIn the case of PDF files, simply provide the URL of the PDF file to the /index_url argument as directed by the API documentation.\nVia the Web Interface\nProceed just as with the instructions for API learning, but use the auto-generated web endpoint for the API method.\nNote that you only need to provide the url argument.\nYouTube Specific Notes\nThe open source tools used to scrape YouTube videos have a high error rate.\nWhen you use the IndexerPipelineMixin to scrape YouTube videos, you should expect that up to 70-80% of your attempts to scrape a video will fail.\nIn our experience, simply trying a few times, adding a generous (1-2 second) timeout between attempts generally results in success after a few tries.\nCustomizing the Behavior of IndexerPipelineMixin\nSteamship mixins are just open-source Python. The source for this mixin is available here (opens in a new tab). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\nThis particular tool works by:\nLoading three other mixins: \nThe FileImporterMixin (opens in a new tab), which adds API endpoints to scrape data from the web and YouTube.\nThe BlockifierMixin (opens in a new tab), which adds API endpoints to convert PDF and Video data to text.\nThe IndexerMixin (opens in a new tab), which adds API endpoints chunk and embed documents into a vector database, for use with question-answering tools.\nAdds an API endpoint which orchestrates an asynchronous task pipeline that scrapes, converts, chunks, embeds, and stores documents in a vector database.\nThis pipeline is open source Python and very customizable: you can incorporate tools such as LlamaIndex or LangChain if they contain specific importers or splitters you need.\nHere are some ideas for how you might extend it:\nExtend the FileImporterMixin to support auto-detection of new URL types, such as Wikipedia or the SEC's EDGAR database\nExtend the BlockifierMixin to support new filetypes, such as images (via OCR or other image-to-text models)\nExtend the IndexerMixin to utilize different text chunking/splitting strategies\nAdd a /learn_website endpoint which scrapes an entire website and schedules the learning of it\nIf you create an interesting customization of this tool, please consider sending us a pull request on GitHub (opens in a new tab)!\nLast updated on August 16, 2023",
  "markdown": "Give your agent the ability to watch and remember YouTube videos\n\nUse the [`IndexerPipelineMixin` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/indexer_pipeline_mixin.py) to give your agent the ability to watch and remember YouTube videos.\n\n**[A full working example is available here (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/document_qa_agent.py)**. You can copy and paste this agent into your `api.py` file or use it as a reference.\n\nMixins\n\nA **Mixin** is just a way to add a bundle of functionality to your `AgentService`. Mixins can include new API endpoints, async processing pipelines, and webhooks.\n\n## Adding the `IndexerPipelineMixin`[](#adding-the-indexerpipelinemixin)\n\n1.  Add `IndexerPipelineMixin` to the static `USED_MIXIN_CLASSES` list in your AgentService\n2.  Register `IndexerPipelineMixin` in your AgentService `__init__` with\n\nAdding this mixin registers an entire asynchronous document processing pipeline to your agent, along with an API endpoint (`/learn_url`) to access it.\n\nThis pipeline will:\n\n*   Import provided URLs\n*   Convert them to text format (currently only PDF and YouTube are supported -- see the Customizing section below!)\n*   Chunk the data for use question-answering Tools\n*   Embed each chunk into your agent's default Vector Database (created on-demand for it)\n\n## Learning new content with `IndexerPipelineMixin`[](#learning-new-content-with-indexerpipelinemixin)\n\n**NOTE: `IndexerPipelineMixin` currently only functions in deployed agents. You will have to run `ship deploy` to learn new information with this Mixin.**\n\n### Via API[](#via-api)\n\nAny `AgentService` with the `IndexerPipelineMixin` gains two authenticated endpoints `/index_url` and `/index_text` that let you load information into your agent.\n\nTo view the documentation for your agent's learning endpoints:\n\n1.  [Deploy your agent](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent) if you haven't done so already\n2.  [Create an instance](https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent) so that you can use it\n3.  [View your agent instance's web page](https://docs.steamship.com/agent-guidebook/connect/use-on-the-web)\n4.  Click on the **Manage** tab of your agent instance's web page\n5.  Click on the **API** tab in your agent's management console\n6.  Click on either the `/index_url` or `/index_text` endpoints for customized API documentation\n\nIn the case of PDF files, simply provide the URL of the PDF file to the `/index_url` argument as directed by the API documentation.\n\n### Via the Web Interface[](#via-the-web-interface)\n\nProceed just as with the instructions for API learning, but use the auto-generated web endpoint for the API method.\n\nNote that you only need to provide the `url` argument.\n\n## YouTube Specific Notes[](#youtube-specific-notes)\n\nThe open source tools used to scrape YouTube videos have a high error rate.\n\nWhen you use the `IndexerPipelineMixin` to scrape YouTube videos, you should expect that up to 70-80% of your attempts to scrape a video will fail.\n\nIn our experience, simply trying a few times, adding a generous (1-2 second) timeout between attempts generally results in success after a few tries.\n\n## Customizing the Behavior of `IndexerPipelineMixin`[](#customizing-the-behavior-of-indexerpipelinemixin)\n\nSteamship mixins are just open-source Python. The source for this mixin is available [here (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/indexer_pipeline_mixin.py). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\n\nThis particular tool works by:\n\n1.  Loading three other mixins:\n    1.  The [`FileImporterMixin` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/file_importer_mixin.py), which adds API endpoints to scrape data from the web and YouTube.\n    2.  The [`BlockifierMixin` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/blockifier_mixin.py), which adds API endpoints to convert PDF and Video data to text.\n    3.  The [`IndexerMixin` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/invocable/mixins/indexer_mixin.py), which adds API endpoints chunk and embed documents into a vector database, for use with question-answering tools.\n2.  Adds an API endpoint which orchestrates an asynchronous task pipeline that scrapes, converts, chunks, embeds, and stores documents in a vector database.\n\nThis pipeline is open source Python and very customizable: you can incorporate tools such as LlamaIndex or LangChain if they contain specific importers or splitters you need.\n\nHere are some ideas for how you might extend it:\n\n*   Extend the `FileImporterMixin` to support auto-detection of new URL types, such as Wikipedia or the SEC's EDGAR database\n*   Extend the `BlockifierMixin` to support new filetypes, such as images (via OCR or other image-to-text models)\n*   Extend the `IndexerMixin` to utilize different text chunking/splitting strategies\n*   Add a `/learn_website` endpoint which scrapes an entire website and schedules the learning of it\n\nIf you create an interesting customization of this tool, please consider sending us a [pull request on GitHub (opens in a new tab)](https://github.com/steamship-core/python-client)!\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/generate-speech",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/generate-speech",
    "loadedTime": "2023-08-17T22:12:27.440Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/generate-speech",
    "title": "Generate Speech – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Generate Speech\nYour agent can speak to you with a voice.\nThis is a preview: we'll add official support soon.\nThe src/example_agents/captain_picard_with_voice.py (opens in a new tab) agent in your example project shows how to return spoken output instead of text.\nThat agent overrides the run_agent method of Agent service to patch each emit_func in AgentContext with a function that transforms any outgoing text into a voice block:\nFull-working examples of GenerateSpeechTool\nThe following examples can be copy-pasted into your project:\nCaptainPicardWithVoice (opens in a new tab) - Uses GenerateSpeechTool to generate spoken responses from a pretend starship captain.\nUse a custom voice\nOur GenerateSpeechTool is powered by Eleven Labs. To use a custom public voice, simply invoke the tool as follows:\nTo use a private voice, provide your own API key as well:\nTo alter the voice stability and similarty boost, you can provide those parameters:\nLast updated on August 16, 2023",
  "markdown": "## Generate Speech\n\nYour agent can speak to you with a voice.\n\n**This is a preview: we'll add official support soon**.\n\nThe [`src/example_agents/captain_picard_with_voice.py` (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/captain_picard_with_voice.py) agent in your example project shows how to return spoken output instead of text.\n\nThat agent overrides the `run_agent` method of Agent service to patch each `emit_func` in `AgentContext` with a function that transforms any outgoing text into a voice block:\n\n## Full-working examples of `GenerateSpeechTool`[](#full-working-examples-of-generatespeechtool)\n\nThe following examples can be copy-pasted into your project:\n\n*   [CaptainPicardWithVoice (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/captain_picard_with_voice.py) - Uses `GenerateSpeechTool` to generate spoken responses from a pretend starship captain.\n\n## Use a custom voice[](#use-a-custom-voice)\n\nOur `GenerateSpeechTool` is powered by Eleven Labs. To use a custom public voice, simply invoke the tool as follows:\n\nTo use a private voice, provide your own API key as well:\n\nTo alter the voice stability and similarty boost, you can provide those parameters:\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/learning/learning-facts-from-users",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/learning/learning-facts-from-users",
    "loadedTime": "2023-08-17T22:12:31.060Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/learning/learning-facts-from-users",
    "title": "Learn Facts from Users – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Learn Facts from Users\nLearn facts from your users and save them to a vector database\nYou can use the VectorSearchLearnerTool (opens in a new tab) to learn facts from users and save them to a vector database.\nVector Databases\nA Vector Database (aka Embedding Index) is just a way to store and search through natural language content.\nSteamship contains a built-in vector database that's configured to \"just work\" with Agents and Tool. By default it auto-applies OpenAI's embeddings to text ans queries.\nUsing this tool only requires providing it to your FunctionsBasedAgent (opens in a new tab):\nBy default, the tool will:\nUse your agent's default vector database, created on demand for you inside Steamship\nAsk the agent to save facts whenever the user requests that the agent learn or remember something\nTo customize these to behaviors, just provide these arguments to the tool's constructor:\nindex_handle - The name of the vector database to use (created on-demand for you; must be a-z and dashes)\nai_description - Tells your agent how and when to use the tool\nname - The name of this tool; only important if you plan to create multiple copies of the tool\nFor example, to add a VectorSearchLearnerTool that records your likes and dislikes to a specific vector database, you might say:\nBuilding an Agent with VectorSearchLearnerTool\nThis tool can be provided to a FunctionsBasedAgent (opens in a new tab) which will decide when to use it based on its ai_description. For example, if the tool's ai_description says the tool is \"Used to remember a fact. Only use this tool if someone asks to remember or learn something\", then the agent will tend to use the tool when the user makes a statement like \"Remember that Susan lives in Boston.\"\nIn your AgentService, here's how you can provide this tool to a FunctionsBasedAgent (opens in a new tab):\nA full, working example can be found at TODO.\nDeploying an AgentService with VectorSearchLearnerTool\nTo deploy an agent with this tool, just make sure it's properly wrapped in an AgentService wrapper and then follow the normal deployment instructions. You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\nCustomizing the Behavior of VectorSearchLearnerTool\nSteamship tools are just open-source Python. The source for this tool is available here (opens in a new tab). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\nThis particular tool works by:\nLoading an Embedding Index Plugin from Steamship (this auto-manages embeddings & vector databases for you)\nAdding the provided text to the Embedding Index\nResponding with templated statement that the new facts will be remembered\nA few ways you might customize it might be:\nApply a prompt before saving it to the embedding index, using the LLM in the provided AgentContext. Perhaps the prompt can rewrite, summarize, or expand upon the provided information.\nAdd additional information to the metadata that is saved with the embedded item. Perhaps context in which the fact is being learned.\nIf you create an interesting customization of this tool, please consider sending us a pull request on GitHub (opens in a new tab)!\nLast updated on August 16, 2023",
  "markdown": "## Learn Facts from Users\n\nLearn facts from your users and save them to a vector database\n\nYou can use the [`VectorSearchLearnerTool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/vector_search_learner_tool.py) to learn facts from users and save them to a vector database.\n\nVector Databases\n\nA Vector Database (aka Embedding Index) is just a way to store and search through natural language content.\n\nSteamship contains a built-in vector database that's configured to \"just work\" with Agents and Tool. By default it auto-applies OpenAI's embeddings to text ans queries.\n\nUsing this tool only requires providing it to your [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py):\n\nBy default, the tool will:\n\n*   Use your agent's default vector database, created on demand for you inside Steamship\n*   Ask the agent to save facts whenever the user requests that the agent **learn or remember something**\n\nTo customize these to behaviors, just provide these arguments to the tool's constructor:\n\n*   `index_handle` - The name of the vector database to use (created on-demand for you; must be `a-z` and dashes)\n*   `ai_description` - Tells your agent how and when to use the tool\n*   `name` - The name of this tool; only important if you plan to create multiple copies of the tool\n\nFor example, to add a `VectorSearchLearnerTool` that records your likes and dislikes to a specific vector database, you might say:\n\n## Building an Agent with `VectorSearchLearnerTool`[](#building-an-agent-with-vectorsearchlearnertool)\n\nThis tool can be provided to a [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py) which will decide when to use it based on its `ai_description`. For example, if the tool's `ai_description` says the tool is \"**Used to remember a fact. Only use this tool if someone asks to remember or learn something**\", then the agent will tend to use the tool when the user makes a statement like \"Remember that Susan lives in Boston.\"\n\nIn your [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py), here's how you can provide this tool to a [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py):\n\nA full, working example can be found at TODO.\n\n## Deploying an AgentService with `VectorSearchLearnerTool`[](#deploying-an-agentservice-with-vectorsearchlearnertool)\n\nTo deploy an agent with this tool, just make sure it's properly wrapped in an [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py) wrapper and then follow the normal [deployment instructions](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent). You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\n\n## Customizing the Behavior of `VectorSearchLearnerTool`[](#customizing-the-behavior-of-vectorsearchlearnertool)\n\nSteamship tools are just open-source Python. The source for this tool is available [here (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/vector_search_learner_tool.py). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\n\nThis particular tool works by:\n\n1.  Loading an Embedding Index Plugin from Steamship (this auto-manages embeddings & vector databases for you)\n2.  Adding the provided text to the Embedding Index\n3.  Responding with templated statement that the new facts will be remembered\n\nA few ways you might customize it might be:\n\n*   Apply a prompt before saving it to the embedding index, using the LLM in the provided `AgentContext`. Perhaps the prompt can rewrite, summarize, or expand upon the provided information.\n*   Add additional information to the `metadata` that is saved with the embedded item. Perhaps context in which the fact is being learned.\n\nIf you create an interesting customization of this tool, please consider sending us a [pull request on GitHub (opens in a new tab)](https://github.com/steamship-core/python-client)!\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/plugins/developing/embedders",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing/embedders",
    "loadedTime": "2023-08-17T22:12:32.837Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing/embedders",
    "title": "Developing Embedders – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Developing Embedders\nWe’re excited for you to do this, but we haven’t documented it yet!\nCome chat with us on Discord (opens in a new tab)",
  "markdown": "## Developing Embedders\n\nWe’re excited for you to do this, but we haven’t documented it yet!\n\n[Come chat with us on Discord (opens in a new tab)](http://steamship.com/discord)"
},
{
  "url": "https://docs.steamship.com/plugins/developing/async-plugins",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing/async-plugins",
    "loadedTime": "2023-08-17T22:12:41.264Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing/async-plugins",
    "title": "Writing Asynchronous Plugins – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Writing Asynchronous Plugins\nIf a plugin method calls a third-party API that is asynchronous, then that plugin should adopt an asynchronous conversation with the Steamship Engine. The Request[InputType] and Response[OutputType] objects passed into and returned from plugin invocations contain fields that make such an asynchronous conversation quick and easy.\nSignaling an Asynchronous Response\nA synchronous plugin method response always returns either a raw object or a Response object wrapping a raw object:\nTo make this response asynchronous, return a Response object with the status field set to a running Task object:\nThat will cause the Steamship Engine to record the plugin’s work as still RUNNING. It will schedule repeated inquiries – at increasingly longer intervals – to check on whether the plugin invocation has.\nThe remote_status_input object on the returned Task contains a Python dict that will be provided to the plugin when this future check occurs. It is the appropriate location to stash metadata about the async work in progress, such as a task ID received from a third-party API.\nDetecting an Asynchronous Progress Request\nWhen a plugin responds with an asyncronous task, the Engine will begin checking back for status updates. The Engine performs these checks via the same endpoints used to initiate the work. It is therefore important for asynchronous plugins to be able to distinguish between invocations requesting new work and invocations checking on existing work.\nThe Request object contains a boolean field named is_status_check that distinguishes async status requests from new work requests. If this field is true, the request is checking the status of prior work. If this field is false, the request is initiating new work.\nIn a fully synchronous plugin method, it is generally safe to ignore the is_status_check field, but if a plugin method is asynchronous, you must take care to always check it, like so:\nIn the above code, the initiate_work method would return a Task in the running state with a useful remote_status_input field, as follows:\nAnd then the check_status method would retrieve the remote_status_input to check on the status of the remote work. If the work remains in progress, it responds with a task in the running state, just as before. If the work is complete, it responds with the raw data object or a Response object wrapping it.\nThrowing errors from an asynchronous plugin\nErrors can be thrown from an asynchronous plugin just as they would be from a synchronous plugin. Just raise a SteamshipError and the Engine will set the task’s state to TaskState.FAILED and record the error output.",
  "markdown": "## Writing Asynchronous Plugins\n\nIf a plugin method calls a third-party API that is asynchronous, then that plugin should adopt an asynchronous conversation with the Steamship Engine. The `Request[InputType]` and `Response[OutputType]` objects passed into and returned from plugin invocations contain fields that make such an asynchronous conversation quick and easy.\n\n## Signaling an Asynchronous Response[](#signaling-an-asynchronous-response)\n\nA synchronous plugin method response always returns either a raw object or a `Response` object wrapping a raw object:\n\nTo make this response asynchronous, return a `Response` object with the `status` field set to a running `Task` object:\n\nThat will cause the Steamship Engine to record the plugin’s work as still `RUNNING`. It will schedule repeated inquiries – at increasingly longer intervals – to check on whether the plugin invocation has.\n\nThe `remote_status_input` object on the returned `Task` contains a Python `dict` that will be provided to the plugin when this future check occurs. It is the appropriate location to stash metadata about the async work in progress, such as a task ID received from a third-party API.\n\n## Detecting an Asynchronous Progress Request[](#detecting-an-asynchronous-progress-request)\n\nWhen a plugin responds with an asyncronous task, the Engine will begin checking back for status updates. The Engine performs these checks via the same endpoints used to initiate the work. It is therefore important for asynchronous plugins to be able to distinguish between invocations requesting new work and invocations checking on existing work.\n\nThe `Request` object contains a boolean field named `is_status_check` that distinguishes async status requests from new work requests. If this field is `true`, the request is checking the status of prior work. If this field is `false`, the request is initiating new work.\n\nIn a fully synchronous plugin method, it is generally safe to ignore the `is_status_check` field, but if a plugin method is asynchronous, you must take care to always check it, like so:\n\nIn the above code, the `initiate_work` method would return a `Task` in the running state with a useful `remote_status_input` field, as follows:\n\nAnd then the `check_status` method would retrieve the `remote_status_input` to check on the status of the remote work. If the work remains in progress, it responds with a task in the running state, just as before. If the work is complete, it responds with the raw data object or a `Response` object wrapping it.\n\n## Throwing errors from an asynchronous plugin[](#throwing-errors-from-an-asynchronous-plugin)\n\nErrors can be thrown from an asynchronous plugin just as they would be from a synchronous plugin. Just raise a `SteamshipError` and the Engine will set the task’s state to `TaskState.FAILED` and record the error output."
},
{
  "url": "https://docs.steamship.com/embedding-search",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/embedding-search",
    "loadedTime": "2023-08-17T22:12:43.051Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/embedding-search",
    "title": "Querying Data – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Embedding Search Index\nSteamship provides a built-in vector store and search interface. This can be used in combination with a Embedder to quickly create a search over text, images, or other content. To use the index, first create an instance of it with your preferred Embedder plugin (we recommend OpenAI):\nOnce you’ve created the index and paired it with the embedder, Steamship will automatically vectorize content as it is inserted and queried.\nInserting Data\nThe unit of insertion in a search index is :ref:Tags. Embedding search is most useful on short-ish chunks of text like sentences or short paragraphs. If your text or content is in Blocks, you can create Tags over the spans that you wish to index and then insert them.\nQuerying Data\nOnce you’ve inserted content, you can query it using the query() method.",
  "markdown": "## Embedding Search Index\n\nSteamship provides a built-in vector store and search interface. This can be used in combination with a [Embedder](https://docs.steamship.com/plugins/using/embedders#embedders) to quickly create a search over text, images, or other content. To use the index, first create an instance of it with your preferred `Embedder` plugin (we recommend OpenAI):\n\nOnce you’ve created the index and paired it with the embedder, Steamship will automatically vectorize content as it is inserted and queried.\n\n## Inserting Data\n\nThe unit of insertion in a search index is :ref:`Tags`. Embedding search is most useful on short-ish chunks of text like sentences or short paragraphs. If your text or content is in `Blocks`, you can create `Tags` over the spans that you wish to index and then insert them.\n\n## Querying Data\n\nOnce you’ve inserted content, you can query it using the `query()` method."
},
{
  "url": "https://docs.steamship.com/developing",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing",
    "loadedTime": "2023-08-17T22:12:51.451Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing",
    "title": "Developing Packages and Plugins – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Developing Packages and Plugins\nThink of Steamship packages and plugins as PyPi modules that run in the cloud.\nPackages expose endpoints that can do work on an associated workspace\nPlugins conform to interfaces defined by the Steamship Engine to perform common tasks.\nWARNING\nThird-party plugin development is currently in Alpha and the interface may change. If you want to build a plugin, we are eager to chat! Just email hello@steamship.com or hop on our Discord (opens in a new tab)\nSteamship is designed from the ground up to support building, modifying, and sharing both packages and plugins. Each one you create is cloned from an existing template of your choosing. That template contains everything you need for a great development lifecycle:\nA manifest file with metadata and statically-typed configuration\nUnit tests with pre-configured GitHub Actions integration\nSecrets management\nA pre-written main body to build from\nSimple deployment via the Steamship CLI and/or GitHub Actions\nThe process for details are located in the following pages:\nCloning a Starter Project\nThe Steamship Manifest file\nPython Environment Setup\nAccepting Configuration\nStoring Secrets\nRunning on Localhost\nWriting Tests\nDeploying\nMonitoring your Instances",
  "markdown": "## Developing Packages and Plugins\n\nThink of Steamship packages and plugins as PyPi modules that run in the cloud.\n\n*   [Packages](https://docs.steamship.com/packages#packages) expose endpoints that can do work on an associated [workspace](https://docs.steamship.com/data/workspaces#workspaces)\n*   [Plugins](https://docs.steamship.com/plugins#plugins) conform to interfaces defined by the Steamship Engine to perform common tasks.\n\n#### WARNING[](#warning)\n\nThird-party plugin development is currently in Alpha and the interface may change. If you want to build a plugin, we are eager to chat! Just email [hello@steamship.com](mailto:hello@steamship.com) or hop on our [Discord (opens in a new tab)](http://steamship.com/discord)\n\nSteamship is designed from the ground up to support building, modifying, and sharing both packages and plugins. Each one you create is cloned from an existing template of your choosing. That template contains everything you need for a great development lifecycle:\n\n1.  A manifest file with metadata and statically-typed configuration\n2.  Unit tests with pre-configured GitHub Actions integration\n3.  Secrets management\n4.  A pre-written main body to build from\n5.  Simple deployment via the Steamship CLI and/or GitHub Actions\n\nThe process for details are located in the following pages:\n\n*   [Cloning a Starter Project](https://docs.steamship.com/developing/project-creation)\n*   [The Steamship Manifest file](https://docs.steamship.com/developing/steamship-manifest)\n*   [Python Environment Setup](https://docs.steamship.com/developing/environment-setup)\n*   [Accepting Configuration](https://docs.steamship.com/developing/configuration)\n*   [Storing Secrets](https://docs.steamship.com/developing/storing-secrets)\n*   [Running on Localhost](https://docs.steamship.com/developing/running)\n*   [Writing Tests](https://docs.steamship.com/developing/testing)\n*   [Deploying](https://docs.steamship.com/developing/deploying)\n*   [Monitoring your Instances](https://docs.steamship.com/developing/monitoring)"
},
{
  "url": "https://docs.steamship.com/developing/project-creation",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/project-creation",
    "loadedTime": "2023-08-17T22:12:55.627Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/project-creation",
    "title": "Cloning a Starter Package – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Cloning a Starter Project\nCloning a Starter Package\nWe have several packages available to start from:\nEmpty Package (opens in a new tab) - Bare-bones starter package shell\nPrompt API template (opens in a new tab) - Turn a GPT prompt into an API\nChat analytics (opens in a new tab) - Cluster chatroom messages into conversations and classify intent and sentiment\nTicket Tagging (opens in a new tab) - Tag service tickets with a zero-shot classifier, then transition to a trained model\nAudio to Markdown (opens in a new tab) - Create a markdown file from an audio transcript, using specific command words",
  "markdown": "Cloning a Starter Project\n\n## Cloning a Starter Package\n\nWe have several packages available to start from:\n\n*   [Empty Package (opens in a new tab)](https://github.com/steamship-packages/empty-package) - Bare-bones starter package shell\n*   [Prompt API template (opens in a new tab)](https://github.com/steamship-packages/prompt-api-template) - Turn a GPT prompt into an API\n*   [Chat analytics (opens in a new tab)](https://github.com/steamship-packages/chat-analytics) - Cluster chatroom messages into conversations and classify intent and sentiment\n*   [Ticket Tagging (opens in a new tab)](https://github.com/steamship-packages/ticket-tagging-api) - Tag service tickets with a zero-shot classifier, then transition to a trained model\n*   [Audio to Markdown (opens in a new tab)](https://github.com/steamship-packages/audio-markdown) - Create a markdown file from an audio transcript, using specific command words"
},
{
  "url": "https://docs.steamship.com/developing/steamship-manifest",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/steamship-manifest",
    "loadedTime": "2023-08-17T22:13:01.841Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/steamship-manifest",
    "title": "Steamship Manifest Files – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Steamship Manifest Files\nEvery Steamship package and plugin has a steamship.json file at its root that describes the project to Steamship.\nAt a minimum, when you create a new project, you should fill out the following fields:\nhandle\ndescription\nversion\npublic\nPlugin and package handles are globally unique across Steamship. They are how other code will refer to your project when using it.\nThe full list of fields is:\ntype - Either package or plugin. Tells Steamship how to interpret this project. A package is a user library that others import and use. It can define custom endpoints and do anything from process audio files to implement a calculator. A plugin is an extension to the Steamship Engine. Plugins follow a strict interface contract governed by their plugin type.\nhandle - A globally unique identifier for the package, consisting of lowercase letters, numbers, and dashes. This is the name by which you will refer to your package elsewhere in Steamship code.\nversion - The version of your project, in SemVer style (X.Y.Z or X.Y.Z-abc123). By default, the last version you deploy is the default used when new instances are created, but users can always specify an older version.\npublic - Whether users other than you can see and use this project.\nauthor - Your name and contact information.\ndescription - A short, one sentence description of the project’s purpose.\nplugin - Plugin-specific configuration. See description here.\nconfigTemplate - A schema for the configuration your project requires . See the configuration documentation for details.\nPlugin Configuration\nIf your project is a Plugin, its steamship.json file contains a plugin variable that defines further parameterization that is specific to Plugins.\nThat configuration looks like this:\nThat code shows the following required settings:\ntype - Either fileImporter, corpusImporter, blockifier, tagger, embedder, or exporter\nisTrainable - Whether the plugin can be trained.\nA trainable plugin obligates it to implement a few extra methods as a part of its contract with the Steamship Engine.\nSteamship Registry\nSteamship generates a public web listing for each public package and plugin. The steamshipRegistry block in your steamship.json file contains a fields which enhance this web listing:\nThat configuration looks like this:\nAll these fields are optional. When non-empty, your project’s web listing will gain additional UI features.",
  "markdown": "## Steamship Manifest Files\n\nEvery Steamship package and plugin has a `steamship.json` file at its root that describes the project to Steamship.\n\nAt a minimum, when you create a new project, you should fill out the following fields:\n\n*   `handle`\n*   `description`\n*   `version`\n*   `public`\n\nPlugin and package handles are globally unique across Steamship. They are how other code will refer to your project when using it.\n\nThe full list of fields is:\n\n*   `type` - Either `package` or `plugin`. Tells Steamship how to interpret this project. A `package` is a user library that others import and use. It can define custom endpoints and do anything from process audio files to implement a calculator. A `plugin` is an extension to the Steamship Engine. Plugins follow a strict interface contract governed by their plugin type.\n*   `handle` - A globally unique identifier for the package, consisting of lowercase letters, numbers, and dashes. This is the name by which you will refer to your package elsewhere in Steamship code.\n*   `version` - The version of your project, in SemVer style (`X.Y.Z` or `X.Y.Z-abc123`). By default, the last version you deploy is the default used when new instances are created, but users can always specify an older version.\n*   `public` - Whether users other than you can see and use this project.\n*   `author` - Your name and contact information.\n*   `description` - A short, one sentence description of the project’s purpose.\n*   `plugin` - Plugin-specific configuration. See [description here](https://docs.steamship.com/developing/steamship-manifest#plugin-manifest-config).\n*   `configTemplate` - A schema for the configuration your project requires . See the configuration documentation for details.\n\n## Plugin Configuration[](#plugin-configuration)\n\nIf your project is a Plugin, its `steamship.json` file contains a `plugin` variable that defines further parameterization that is specific to Plugins.\n\nThat configuration looks like this:\n\nThat code shows the following required settings:\n\n*   `type` - Either `fileImporter`, `corpusImporter`, `blockifier`, `tagger`, `embedder`, or `exporter`\n*   `isTrainable` - Whether the plugin can be trained.\n\nA trainable plugin obligates it to implement a few extra methods as a part of its contract with the Steamship Engine.\n\n## Steamship Registry[](#steamship-registry)\n\nSteamship generates a public web listing for each public package and plugin. The `steamshipRegistry` block in your `steamship.json` file contains a fields which enhance this web listing:\n\nThat configuration looks like this:\n\nAll these fields are optional. When non-empty, your project’s web listing will gain additional UI features."
},
{
  "url": "https://docs.steamship.com/developing/environment-setup",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/environment-setup",
    "loadedTime": "2023-08-17T22:13:04.236Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/environment-setup",
    "title": "Environment Setup – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Environment Setup\nSteamship plugins are written in Python. We’ve standardized on venv for dependency management, and every plugin starter template comes with a requirements.txt and requirements.dev.txt file describing its dependencies.\nIf you add new dependencies as you develop, it is important that you add them to requirements.txt. Otherwise they will not be available when you deploy your plugin to the cloud.\nTo set up your virtual environment for the first time, run this command from your plugin’s root directory:\nYou can activate your virtual environment by running:\nYour first time, or any time you add a dependency, run:",
  "markdown": "## Environment Setup\n\nSteamship plugins are written in Python. We’ve standardized on `venv` for dependency management, and every plugin starter template comes with a `requirements.txt` and `requirements.dev.txt` file describing its dependencies.\n\nIf you add new dependencies as you develop, it is important that you add them to `requirements.txt`. Otherwise they will not be available when you deploy your plugin to the cloud.\n\nTo set up your virtual environment for the first time, run this command from your plugin’s root directory:\n\nYou can activate your virtual environment by running:\n\nYour first time, or any time you add a dependency, run:"
},
{
  "url": "https://docs.steamship.com/developing/configuration",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/configuration",
    "loadedTime": "2023-08-17T22:13:06.343Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/configuration",
    "title": "Accepting Configuration – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Accepting Configuration\nYour package or plugin may need to accept configuration to be usable. Examples might include:\nAn API key to invoke a third-party service\nA parameter setting, such as a threshold or output class\nA configuration parameter has:\ntype - Either boolean, string, or number.\ndescription - A short description of the parameter.\ndefault - A default value if the user does not provide one.\nIf a parameter does not have a default value, and a Steamship user tries to create a new instance without specifying it, that instance creation will fail. Similarly, provided values with incorrect types will be rejected. This means that your package or plugin is guaranteed to receive a config that structurally matches.\nNOTE\nThere is currently no such thing as an optional configuration parameter. All parameters that do not have a default value must have a value provided by the user at Package instantiation.\nDefining and Accepting configuration in your code\nTo define the configuration for your Package, create a class that inherits from Config:\nand then return this class from your package or plugin’s config_cls class method:\nThis will guarantee that my_string_config_param and my_numeric_config_param are set for all invocations of your package or plugin. Since my_strong_config_param provides a default value, the user can omit it from their configuration and the value \"my-default-value\" will be used. Since my_numeric_config_param does not have a default value, a user must supply a value to create an instance of your package or plugin.\nTo use the config values within your code, you can then refer to them from self.config, as in self.config.my_numeric_config_param. They will be automatically populated with the user’s data by Steamship when invoking your package or plugin.",
  "markdown": "## Accepting Configuration\n\nYour package or plugin may need to accept configuration to be usable. Examples might include:\n\n*   An API key to invoke a third-party service\n*   A parameter setting, such as a threshold or output class\n\nA configuration parameter has:\n\n*   `type` - Either `boolean`, `string`, or `number`.\n*   `description` - A short description of the parameter.\n*   `default` - A default value if the user does not provide one.\n\nIf a parameter does not have a default value, and a Steamship user tries to create a new instance without specifying it, that instance creation will fail. Similarly, provided values with incorrect types will be rejected. This means that your package or plugin is guaranteed to receive a config that structurally matches.\n\n#### NOTE[](#note)\n\nThere is currently no such thing as an optional configuration parameter. All parameters that do not have a default value must have a value provided by the user at Package instantiation.\n\n## Defining and Accepting configuration in your code[](#defining-and-accepting-configuration-in-your-code)\n\nTo define the configuration for your Package, create a class that inherits from Config:\n\nand then return this class from your package or plugin’s `config_cls` class method:\n\nThis will guarantee that `my_string_config_param` and `my_numeric_config_param` are set for all invocations of your package or plugin. Since `my_strong_config_param` provides a default value, the user can omit it from their configuration and the value `\"my-default-value\"` will be used. Since `my_numeric_config_param` does not have a default value, a user _must_ supply a value to create an instance of your package or plugin.\n\nTo use the config values within your code, you can then refer to them from `self.config`, as in `self.config.my_numeric_config_param`. They will be automatically populated with the user’s data by Steamship when invoking your package or plugin."
},
{
  "url": "https://docs.steamship.com/developing/storing-secrets",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/storing-secrets",
    "loadedTime": "2023-08-17T22:13:14.163Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/storing-secrets",
    "title": "Storing Secrets – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Storing Secrets\nYou may wish your plugin instance to store secrets, such as an API key or random seed. These should never be committed to your plugin’s GitHub repository, but they can be easily bundled and loaded automatically during deployment.\nSimply place your secrets in src/.steamship/secrets.toml and ensure that they are git-ignored. All default plugin templates should have this file already git-ignored. For example, your secrets.toml file might look like this:\nSteamship’s plugin loader will automatically detect this file and attempt to set any properties on your plugin’s configuration object that have matching keys.\nNote: Automated deployments via GitHub-actions will not have this git-ignored file. To automate deployments that contain secrets, you will need to alter your GitHub Action scripts to create these files using GitHub Secrets after the checkout but before the deployment.",
  "markdown": "## Storing Secrets\n\nYou may wish your plugin instance to store secrets, such as an API key or random seed. These should never be committed to your plugin’s GitHub repository, but they can be easily bundled and loaded automatically during deployment.\n\nSimply place your secrets in `src/.steamship/secrets.toml` and ensure that they are git-ignored. All default plugin templates should have this file already git-ignored. For example, your `secrets.toml` file might look like this:\n\nSteamship’s plugin loader will automatically detect this file and attempt to set any properties on your plugin’s configuration object that have matching keys.\n\n**Note:** Automated deployments via GitHub-actions will not have this git-ignored file. To automate deployments that contain secrets, you will need to alter your GitHub Action scripts to create these files using GitHub Secrets after the checkout but before the deployment."
},
{
  "url": "https://docs.steamship.com/developing/running",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/running",
    "loadedTime": "2023-08-17T22:13:16.432Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/running",
    "title": "Running on Localhost – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Running on Localhost\nTo run your project on localhost type:\nThis will start a local instance with a number of ways to interact with it:\nA Console REPL, which will start immediately in the console.\nAn HTTP endpoint, which will be printed to the console\nA Web endpoint, which will be printed to the console\nThe output will look like this:\nLocalhost caveats\nRunning on localhost currently does not yet support asynchronous tasks. In practice, this most often comes up with our DocumentIndexerPipelineMixin, which enables loading in PDFs, YouTube videos, and other large documents for vector storage and retrieval.",
  "markdown": "## Running on Localhost\n\nTo run your project on localhost type:\n\nThis will start a local instance with a number of ways to interact with it:\n\n*   A Console REPL, which will start immediately in the console.\n*   An HTTP endpoint, which will be printed to the console\n*   A Web endpoint, which will be printed to the console\n\nThe output will look like this:\n\n## Localhost caveats[](#localhost-caveats)\n\nRunning on localhost currently does not yet support asynchronous tasks. In practice, this most often comes up with our `DocumentIndexerPipelineMixin`, which enables loading in PDFs, YouTube videos, and other large documents for vector storage and retrieval."
},
{
  "url": "https://docs.steamship.com/developing/testing",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/testing",
    "loadedTime": "2023-08-17T22:13:21.216Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/testing",
    "title": "Throw, Log, and Test! – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Throw, Log, and Test!\nSteamship plugins execute remotely, automatically, and potentially at high-scale. This makes it critical that you:\nThrow detailed exceptions eagerly\nLog liberally\nWrite unit tests\nEvery plugin template comes with a detailed logging and testing setup.\nLogging\nWe recommend that you log liberally within your plugin code. Use Python’s default logging library.\nThrowing Errors\nWhen something goes wrong in a plugin, the correct response is to throw a SteamshipError. This will result in an error message returned to the end-user.\nManual Testing\nYour plugin template comes with a test/ folder that stores pytest tests. You can run them with:\nMany templates additionally contain a test_data/ folder with data that is read in as part of testing.\nOn your local machine, any tests will run using the run using the STEAMSHIP_API_KEY environment variable, if available, or using the key specified in your user-global Steamship settings (~/.steamship.json).\nAutomated testing\nYour plugin template comes configured to auto-test upon pull-requests to the main and staging branches. Testing will also be performed as part of the automated deployment.\nFailing tests are will block any automated deployments\nWe recommend configuring your repository to block pull-request merges unless a passing test has been registered\nAutomated testing setup\nTesting requires that you set a GitHub secret named steamship_key_test. This secret will be used to set the STEAMSHIP_API_KEY environment variable during test running.\nModifying or removing automated testing\nAutomated tests are run from the GitHub workflow located in your plugin project at .github/workflows/test.yml",
  "markdown": "## Throw, Log, and Test!\n\nSteamship plugins execute remotely, automatically, and potentially at high-scale. This makes it critical that you:\n\n*   Throw detailed exceptions eagerly\n*   Log liberally\n*   Write unit tests\n\nEvery plugin template comes with a detailed logging and testing setup.\n\n## Logging[](#logging)\n\nWe recommend that you log liberally within your plugin code. Use Python’s default `logging` library.\n\n## Throwing Errors[](#throwing-errors)\n\nWhen something goes wrong in a plugin, the correct response is to throw a `SteamshipError`. This will result in an error message returned to the end-user.\n\n## Manual Testing[](#manual-testing)\n\nYour plugin template comes with a `test/` folder that stores `pytest` tests. You can run them with:\n\nMany templates additionally contain a `test_data/` folder with data that is read in as part of testing.\n\nOn your local machine, any tests will run using the run using the `STEAMSHIP_API_KEY` environment variable, if available, or using the key specified in your user-global Steamship settings (`~/.steamship.json`).\n\n## Automated testing[](#automated-testing)\n\nYour plugin template comes configured to auto-test upon pull-requests to the `main` and `staging` branches. Testing will also be performed as part of the [automated deployment](https://docs.steamship.com/developing/deploying#deploying).\n\n*   Failing tests are will block any automated deployments\n*   We recommend configuring your repository to block pull-request merges unless a passing test has been registered\n\n### Automated testing setup[](#automated-testing-setup)\n\nTesting requires that you set a GitHub secret named `steamship_key_test`. This secret will be used to set the `STEAMSHIP_API_KEY` environment variable during test running.\n\n### Modifying or removing automated testing[](#modifying-or-removing-automated-testing)\n\nAutomated tests are run from the GitHub workflow located in your plugin project at `.github/workflows/test.yml`"
},
{
  "url": "https://docs.steamship.com/developing/deploying",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/deploying",
    "loadedTime": "2023-08-17T22:13:32.114Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/deploying",
    "title": "Deploying – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Deploying\nPackages and plugins must be deployed before they can be used.\nNew versions of your project automatically become the “default” version when new instances are created. Unless an instance specifically requests a version, this new default version will be used.\nDeploying with the Steamship CLI\nYou can deploy a package or plugin with the Steamship CLI with single command from the project root (make sure your python environment is active):\nIf you don’t have a steamship.json yet, the deploy process will create one. After the command exits, wait a few minutes for your new infrastructure to be ready in the cloud. New instances of your project will then be directed to the new version.\nDeploying via GitHub Actions\nEach package and plugin project is created from a a template that has been pre-configured to auto-deploy within GitHub Actions when certain situations occur.\nBefore you deploy, make sure the handle and version fields in your steamship.json file are set:\nThe handle property of steamship.json\nThe version property of steamship.json\nProduction deployments occur upon:\nPushes to main\nPushes to SemVer-style tags, prefixed with v (vA.B.C)\nStaging deployments occur upon:\nPushes to staging\nWhen pushing to a SemVer-style tag, the tag’s version must match the version contained within steamship.json. Note that while the GitHub branch must start with v, the version identifier in steamship.json should omit it.\nWhen pushing to main or staging, the version contained in steamship.json is used.\nAutomated Deployment Setup\nAutomated deployments can only occur if you have set the following GitHub secrets:\nThe STEAMSHIP_KEY GitHub repository secret\nThe STEAMSHIP_API_BASE GitHub repository secret (optional)\nThe STEAMSHIP_KEY_STAGING GitHub repository secret\nThe STEAMSHIP_API_BASE_STAGING GitHub repository secret (optional)\nSetting the following variable will additionally trigger Slack notifications upon automated deployments:\nThe STEAMSHIP_SLACK_DEPLOYMENT_WEBHOOK Slack notification webhook URL (optional)\nModifying or disabling automated deployments\nAutomated deployment is triggered by the GitHub Actions workflow in .github/workflows/deploy.yml. This file, in turn, invokes the steamship-core/deploy-to-steamship@main action.\nTo modify or disable automated deployments, remove, comment out, or modify that file.\nTroubleshooting Deployments\nThe deployment fails because the version already exists\nThis means the version specified in steamship.json has already been registered with Steamship. Simply update the version in steamship.json to an identifier that has not yet been used.\nThe deployment fails because the tag does not match the manifest file\nThis means you have tried to push a branch with a semver-style tag (like v1.2.3), resulting in a version deployment whose name must match that tag without the v prefix (1.2.3). Make sure the version field of steamship.json matches this string.\nFor example, if you are deploying branch v6.0.0, the version field of your steamship.json file must be 6.0.0\nThe deployment fails with an authentication error\nIf you’re deploying from GitHub Actions, make sure you’re set your STEAMSHIP_KEY in your GitHub secrets. If you’re deploying from your local machine, make sure you’ve authenticated with the Steamship CLI.",
  "markdown": "## Deploying\n\nPackages and plugins must be deployed before they can be used.\n\nNew versions of your project automatically become the “default” version when new instances are created. Unless an instance specifically requests a version, this new default version will be used.\n\n## Deploying with the Steamship CLI[](#deploying-with-the-steamship-cli)\n\nYou can deploy a package or plugin with the Steamship CLI with single command from the project root (make sure your python environment is active):\n\nIf you don’t have a `steamship.json` yet, the deploy process will create one. After the command exits, wait a few minutes for your new infrastructure to be ready in the cloud. New instances of your project will then be directed to the new version.\n\n## Deploying via GitHub Actions[](#deploying-via-github-actions)\n\nEach package and plugin project is created from a a template that has been pre-configured to auto-deploy within GitHub Actions when certain situations occur.\n\nBefore you deploy, make sure the `handle` and `version` fields in your `steamship.json` file are set:\n\n*   The `handle` property of `steamship.json`\n*   The `version` property of `steamship.json`\n\nProduction deployments occur upon:\n\n*   Pushes to `main`\n*   Pushes to SemVer-style tags, prefixed with `v` (`vA.B.C`)\n\nStaging deployments occur upon:\n\n*   Pushes to `staging`\n\nWhen pushing to a SemVer-style tag, the tag’s version must match the version contained within `steamship.json`. Note that while the GitHub branch must start with `v`, the version identifier in `steamship.json` should omit it.\n\nWhen pushing to `main` or `staging`, the version contained in `steamship.json` is used.\n\n### Automated Deployment Setup[](#automated-deployment-setup)\n\nAutomated deployments can only occur if you have set the following GitHub secrets:\n\n*   The `STEAMSHIP_KEY` GitHub repository secret\n*   The `STEAMSHIP_API_BASE` GitHub repository secret (optional)\n*   The `STEAMSHIP_KEY_STAGING` GitHub repository secret\n*   The `STEAMSHIP_API_BASE_STAGING` GitHub repository secret (optional)\n\nSetting the following variable will additionally trigger Slack notifications upon automated deployments:\n\n*   The `STEAMSHIP_SLACK_DEPLOYMENT_WEBHOOK` Slack notification webhook URL (optional)\n\n### Modifying or disabling automated deployments[](#modifying-or-disabling-automated-deployments)\n\nAutomated deployment is triggered by the GitHub Actions workflow in `.github/workflows/deploy.yml`. This file, in turn, invokes the `steamship-core/deploy-to-steamship@main` action.\n\nTo modify or disable automated deployments, remove, comment out, or modify that file.\n\n## Troubleshooting Deployments[](#troubleshooting-deployments)\n\n### The deployment fails because the version already exists[](#the-deployment-fails-because-the-version-already-exists)\n\nThis means the version specified in `steamship.json` has already been registered with Steamship. Simply update the version in `steamship.json` to an identifier that has not yet been used.\n\n### The deployment fails because the tag does not match the manifest file[](#the-deployment-fails-because-the-tag-does-not-match-the-manifest-file)\n\nThis means you have tried to push a branch with a semver-style tag (like `v1.2.3`), resulting in a version deployment whose name must match that tag without the `v` prefix (`1.2.3`). Make sure the version field of `steamship.json` matches this string.\n\nFor example, if you are deploying branch `v6.0.0`, the `version` field of your `steamship.json` file must be `6.0.0`\n\n### The deployment fails with an authentication error[](#the-deployment-fails-with-an-authentication-error)\n\nIf you’re deploying from GitHub Actions, make sure you’re set your `STEAMSHIP_KEY` in your GitHub secrets. If you’re deploying from your local machine, make sure you’ve authenticated with the Steamship CLI."
},
{
  "url": "https://docs.steamship.com/developing/monitoring",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/developing/monitoring",
    "loadedTime": "2023-08-17T22:13:30.836Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/developing/monitoring",
    "title": "Monitoring – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Monitoring\nSteamship enables easy monitoring of the health and behavior of your running Packages and Plugins.\nMonitoring via Web\nSteamship’s website provides a hub for monitoring your packages and plugins. The monitoring page for an instance provides application logs, a detailed breakdown of usage, and a view of related Tasks.\nTo access the monitoring page for an instance, visit the instance page. For example, for a package instance, you will need both the workspace_handle and package_instance_handle for your instance to find the URL.\nVisit: https://www.steamship.com/workspaces/{workspace_handle}/packages/{package_instance_handle}/monitor to access the Steamship monitoring.\nLogs\nUsage\nTasks\nUsing Logging in Instances\nOur logging integration helps monitor the behavior of deployed instances, providing detailed information about critical state in your deployments. You may add your own custom logging statements to your Packages and Plugins to help in your development of new features, or to troubleshoot behavior in existing instances.\nAdd custom logs using the Python logging library:\nIt is also possible to add extra structured fields to your generated log entries to help in filtered retrieval later:\nWhen a deployed instance is running, all logs at the INFO level and above will be generated, processed by Steamship, and made available for retrieval within a few minutes.\nLogs Retrieval with ship CLI\nTo look up logs via the Steamship CLI, use the ship logs command. It will return a JSON object that contains the relevant log entries.\nHere is an example command to retrieve logs with extra fields in the example workspace steamship-example-logs-001:\nBecause ship logs returns JSON, you can use jq (opens in a new tab) to help trim the output to meet your needs:\nFor full information on how to use ship logs, run:",
  "markdown": "## Monitoring\n\nSteamship enables easy monitoring of the health and behavior of your running [Packages](https://docs.steamship.com/packages#packages) and [Plugins](https://docs.steamship.com/plugins#plugins).\n\n## Monitoring via Web[](#monitoring-via-web)\n\nSteamship’s website provides a hub for monitoring your packages and plugins. The monitoring page for an instance provides application logs, a detailed breakdown of usage, and a view of related [Tasks](https://docs.steamship.com/plugins/using/tasks#tasks).\n\nTo access the monitoring page for an instance, visit the instance page. For example, for a package instance, you will need both the `workspace_handle` and `package_instance_handle` for your instance to find the URL.\n\nVisit: `https://www.steamship.com/workspaces/{workspace_handle}/packages/{package_instance_handle}/monitor` to access the Steamship monitoring.\n\n### Logs[](#logs)\n\n![Web view of Package Instance Logs](https://docs.steamship.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogs-example.e98585a7.png&w=3840&q=75)\n\n### Usage[](#usage)\n\n![Web view of Package Instance Usage](https://docs.steamship.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fusage-example.2783ac6b.png&w=3840&q=75)\n\n### Tasks[](#tasks)\n\n![Web view of Package Instance Tasks](https://docs.steamship.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftasks-example.5ed0be28.png&w=3840&q=75)\n\n## Using Logging in Instances[](#using-logging-in-instances)\n\nOur logging integration helps monitor the behavior of deployed instances, providing detailed information about critical state in your deployments. You may add your own custom logging statements to your [Packages](https://docs.steamship.com/packages#packages) and [Plugins](https://docs.steamship.com/plugins#plugins) to help in your development of new features, or to troubleshoot behavior in existing instances.\n\nAdd custom logs using the Python `logging` library:\n\nIt is also possible to add extra structured fields to your generated log entries to help in filtered retrieval later:\n\nWhen a deployed instance is running, all logs at the `INFO` level and above will be generated, processed by Steamship, and made available for retrieval within a few minutes.\n\n## Logs Retrieval with `ship` CLI[](#logs-retrieval-with-ship-cli)\n\nTo look up logs via the Steamship CLI, use the `ship logs` command. It will return a JSON object that contains the relevant log entries.\n\nHere is an example command to retrieve logs with extra fields in the example workspace `steamship-example-logs-001`:\n\nBecause `ship logs` returns JSON, you can use [jq (opens in a new tab)](https://jqlang.github.io/jq/) to help trim the output to meet your needs:\n\nFor full information on how to use `ship logs`, run:"
},
{
  "url": "https://docs.steamship.com/data",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/data",
    "loadedTime": "2023-08-17T22:13:32.786Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/data",
    "title": "Data Model – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Data Model\nThere are only three core concepts you need to know.\nFiles are the top level object for storing data. A File can store raw data and an ordered list of Blocks.\nBlocks are chunks of content within a File. They can contain raw data and/or text, and an unordered set of Tags.\nTags are typed annotations on a Block or File.\nThe following diagram shows how data is created and used within Steamship:\nFile raw data can either be created directly or imported via a File Importer\nBlocks on Files can either be created directly or created from raw data by a Blockifier\nOnce you have blocks, you can run Generators and Taggers\nFind data that you need by querying\nIndex data for search with the embedding search index\nWorkspaces\nFiles\nBlocks\nTags\nQuerying Data",
  "markdown": "## Data Model\n\nThere are only three core concepts you need to know.\n\n1.  [Files](https://docs.steamship.com/data/files#files) are the top level object for storing data. A `File` can store raw data and an ordered list of `Blocks`.\n2.  [Blocks](https://docs.steamship.com/data/blocks#blocks) are chunks of content within a `File`. They can contain raw data and/or text, and an unordered set of `Tags`.\n3.  [Tags](https://docs.steamship.com/data/tags#tags) are typed annotations on a `Block` or `File`.\n\nThe following diagram shows how data is created and used within Steamship:\n\n![Lifecycle of a File](https://data/data/file-lifecycle.png)\n\n1.  File raw data can either be [created directly](https://docs.steamship.com/data/files#creating-files-directly) or [imported via a File Importer](https://docs.steamship.com/plugins/using/importers#file-importers)\n2.  Blocks on Files can either be [created directly](https://docs.steamship.com/data/blocks#creating-blocks) or [created from raw data by a Blockifier](https://docs.steamship.com/plugins/using/blockifiers#blockifiers)\n3.  Once you have blocks, you can run [Generators](https://docs.steamship.com/plugins/using/generators#generators) and [Taggers](https://docs.steamship.com/plugins/using/taggers#taggers)\n4.  Find data that you need by [querying](https://docs.steamship.com/data/queries#queries)\n5.  Index data for search with [the embedding search index](https://docs.steamship.com/embedding-search#embedding-search-index)\n\n*   [Workspaces](https://docs.steamship.com/data/workspaces)\n*   [Files](https://docs.steamship.com/data/files)\n*   [Blocks](https://docs.steamship.com/data/blocks)\n*   [Tags](https://docs.steamship.com/data/tags)\n*   [Querying Data](https://docs.steamship.com/data/queries)"
},
{
  "url": "https://docs.steamship.com/data/workspaces",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/data/workspaces",
    "loadedTime": "2023-08-17T22:14:08.665Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/data/workspaces",
    "title": "Workspaces – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Workspaces\nWorkspaces contain all the data and Package and Plugin instances within Steamship. It is highly recommended to create an instance of a Package in a new Workspace to avoid data conflicts.\nWorkspaces can be used in two ways:\nAs the backing store to Packages. Each Steamship Package instance is bound to a Workspace, giving it an isolated environment to store state and model parameters.\nAs a cloud environment for language AI projects. You can use Workspaces on their own from Jupyter notebooks or your own application code.\nCreating Workspaces\nWorkspaces are created (or resumed) when creating a new Steamship client. In your client’s constructor, specify the workspace you’d like. If it doesn’t exist, it will be created for you.\nEvery workspace-specific operation this client performs will now take part in that workspace. This includes file uploads, plugin training, plugin inference, queries, and any infrastructure associated.\nIf you need to switch your workspace, you can either create a new client or type:",
  "markdown": "## Workspaces\n\nWorkspaces contain all the data and Package and Plugin instances within Steamship. It is highly recommended to create an instance of a `Package` in a new `Workspace` to avoid data conflicts.\n\nWorkspaces can be used in two ways:\n\n1.  **As the backing store to Packages.** Each [Steamship Package](https://docs.steamship.com/packages#packages) instance is bound to a Workspace, giving it an isolated environment to store state and model parameters.\n2.  **As a cloud environment for language AI projects.** You can use Workspaces on their own from Jupyter notebooks or your own application code.\n\n## Creating Workspaces[](#creating-workspaces)\n\nWorkspaces are created (or resumed) when creating a new Steamship client. In your client’s constructor, specify the workspace you’d like. If it doesn’t exist, it will be created for you.\n\nEvery workspace-specific operation this client performs will now take part in that workspace. This includes file uploads, plugin training, plugin inference, queries, and any infrastructure associated.\n\nIf you need to switch your workspace, you can either create a new client or type:"
},
{
  "url": "https://docs.steamship.com/data/files",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/data/files",
    "loadedTime": "2023-08-17T22:14:19.245Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/data/files",
    "title": "Files – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Files\nFiles are the top-level object for any piece of data in a workspace.\nFiles hold bytes of raw data (with a mime_type, and processed data in Blocks. A File may also have a list of Tags (annotations).\nTo do work on a File, it needs to be saved and its content must be in Blocks.\nThere are a few ways to accomplish this:\nCreate File and Block content directly (see below)\nAdd raw data directly, then create Blocks with a blockifier plugin\nImport raw data with a File Importer, then create Blocks with a blockifier plugin\nIt’s useful to think of Steamship Files more broadly than “file on your desktop.” They are any useful object:\nA conversation between a user and an assistant\na PDF file\na YouTube video\na Podcast episode\nA Notion page\nthe JSON representation of an AirTable API response\nRead the File PyDoc spec here.\nCreating Files Directly\nThe quickest way to create data is to create Files with Block content directly:\nMaking File Data Public\nIf you want the raw data bytes of a File to be publicly accessible, you can set the parameter public_data = True when calling File.create(). This is useful if you wish to share a generated image or audio file, or must make the content viewable in a place that cannot retain your Steamship API key. You can also change the value of the public_data flag on an existing File by calling File.set_public_data.",
  "markdown": "## Files\n\nFiles are the top-level object for any piece of data in a workspace.\n\nFiles hold bytes of raw data (with a `mime_type`, and processed data in [Blocks](https://docs.steamship.com/data/blocks#blocks). A `File` may also have a list of [Tags](https://docs.steamship.com/data/tags#tags) (annotations).\n\nTo do work on a `File`, it needs to be saved and its content must be in [Blocks](https://docs.steamship.com/data/blocks#blocks).\n\nThere are a few ways to accomplish this:\n\n*   Create `File` and `Block` content directly (see below)\n*   Add raw data directly, then create `Blocks` with a [blockifier plugin](https://docs.steamship.com/plugins/using/blockifiers#blockifiers)\n*   Import raw data with a [File Importer](https://docs.steamship.com/plugins/using/importers#file-importers), then create `Blocks` with a [blockifier plugin](https://docs.steamship.com/plugins/using/blockifiers#blockifiers)\n\nIt’s useful to think of Steamship Files more broadly than “file on your desktop.” They are any useful object:\n\n*   A conversation between a user and an assistant\n*   a PDF file\n*   a YouTube video\n*   a Podcast episode\n*   A Notion page\n*   the JSON representation of an AirTable API response\n\nRead the [`File PyDoc spec here`](https://docs.steamship.com/api-reference/steamship.data#steamship.data.file.File).\n\n## Creating Files Directly[](#creating-files-directly)\n\nThe quickest way to create data is to create Files with `Block` content directly:\n\n## Making File Data Public[](#making-file-data-public)\n\nIf you want the raw data bytes of a `File` to be publicly accessible, you can set the parameter `public_data = True` when calling `File.create()`. This is useful if you wish to share a generated image or audio file, or must make the content viewable in a place that cannot retain your Steamship API key. You can also change the value of the `public_data` flag on an existing `File` by calling `File.set_public_data`."
},
{
  "url": "https://docs.steamship.com/data/tags",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/data/tags",
    "loadedTime": "2023-08-17T22:14:32.073Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/data/tags",
    "title": "Tags – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Tags\nSteamship uses Tags to represent all commentary about content.\nThe intent of a chat message\nThe embedding of a sentence\nThe sentiment of a phase\nThe markdown semantics of a region of text\nIdentified object regions of an image\nSteamship Files and Blocks contain content. Tags hold all data about the content.\nThe full Tag PyDoc spec is here, but it’s useful to look at a summarized version:\nThis design results in a flexible data storage scheme that can be adapted to a number of different scenarios. We optimize our data storage so that you can query over tags and their contents.\nWays to use Tags\nHere are a few examples to help you think of how tags are used. The start_idx and end_idx have been left out of the pseudo-code below.\nAn entity \nA part of speech \nAn embedding \nA summarization \nA dictionary lookup \nTag Schemas\nSteamship brings together many models under one roof using tags as the common representation for interoperation. But doesn’t fully solve the model interop problem: how do we make sure all models use the same tags?\nWhere possible, we use a common schema for the kind, name, and value properties of a tag. If all sentiment models produce tags with kind sentiment and a range of names [positive, neutral, negative], for example, then we can swap them in and out as needed.\nOur ongoing pursuit of this can be found in the tag_constants.py file (opens in a new tab) in Github. There you will find Python Enum classes that have common tags across our plugins.\nTagKind class contains suggested values for the kind field of a Tag.\nTagValue class contains suggested keys for the valu dictionary of a Tag.\nThe following classes contain suggested values for the name field: \nDocTag for document semantics (HTML, Markdown, OCR, etc)\nEmotionTag for emotion tagging tag\nEntityTag for entity tagging tags\nGenerationTag for models which generate new data from the covered span as input\nIntentTag for intent classification\nSentimentTag for sentiment classification\nRoleTag for role classification\nThese constants are not required, but using them increases the chance that what you build will interoperate cleanly with everyone else that uses them.\nHere is what some of the above tag examples would look like using these enum classes. Notice how it is a combination of standard constant and “magic string” depending on whether a constant exists for that concept.\nAn entity \nA part of speech \nAn embedding \nA summarization \nA dictionary lookup \nBlock and File Tags\nThe above text discusses tags upon spans of text. But Steamship actually supports two types of tags: File Tags and Block Tags.\nFile Tags annotate a File object itself:\nThey are attached to the File object (file.tags)\nTheir block_id, start_idx, and end_idx are always null.\nThey are referenced via the filetag keyword in our query system.\nBlock Tags annotate text within a Block object:\nThey are attached to the Block object (block.tags)\nTheir start_idx and end_idx fields are either both null or both non-null. If both are null, the Tag is assumed to apply to the whole ``Block. They represent offsets into the text that is spanned by that block.\nThey are referenced via the blocktag keyword in our query system.\nNotes:\nIt is impossible for a tag to cover text spanning multiple blocks.",
  "markdown": "## Tags\n\nSteamship uses Tags to represent all commentary about content.\n\n*   The intent of a chat message\n*   The embedding of a sentence\n*   The sentiment of a phase\n*   The markdown semantics of a region of text\n*   Identified object regions of an image\n\nSteamship Files and Blocks contain content. Tags hold all data **about** the content.\n\nThe full [`Tag PyDoc spec is here`](https://docs.steamship.com/api-reference/steamship.data.tags#steamship.data.tags.tag.Tag), but it’s useful to look at a summarized version:\n\nThis design results in a flexible data storage scheme that can be adapted to a number of different scenarios. We optimize our data storage so that you can query over tags and their contents.\n\n## Ways to use Tags[](#ways-to-use-tags)\n\nHere are a few examples to help you think of how tags are used. The `start_idx` and `end_idx` have been left out of the pseudo-code below.\n\n*   An entity\n*   A part of speech\n*   An embedding\n*   A summarization\n*   A dictionary lookup\n\n## Tag Schemas[](#tag-schemas)\n\nSteamship brings together many models under one roof using tags as the common representation for interoperation. But doesn’t fully solve the model interop problem: how do we make sure all models use the same tags?\n\nWhere possible, we use a common schema for the `kind`, `name`, and `value` properties of a tag. If all sentiment models produce tags with kind `sentiment` and a range of names `[positive, neutral, negative]`, for example, then we can swap them in and out as needed.\n\nOur ongoing pursuit of this can be found in the [tag\\_constants.py file (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/data/tags/tag_constants.py) in Github. There you will find Python Enum classes that have common tags across our plugins.\n\n*   [`TagKind class`](https://docs.steamship.com/api-reference/steamship.data.tags#steamship.data.tags.tag_constants.TagKind) contains suggested values for the `kind` field of a Tag.\n*   `TagValue class` contains suggested keys for the `valu` dictionary of a Tag.\n*   The following classes contain suggested values for the `name` field:\n    *   [`DocTag`](https://docs.steamship.com/api-reference/steamship.data.tags#steamship.data.tags.tag_constants.DocTag) for document semantics (HTML, Markdown, OCR, etc)\n    *   `EmotionTag` for emotion tagging tag\n    *   `EntityTag` for entity tagging tags\n    *   [`GenerationTag`](https://docs.steamship.com/api-reference/steamship.data.tags#steamship.data.tags.tag_constants.GenerationTag) for models which generate new data from the covered span as input\n    *   `IntentTag` for intent classification\n    *   `SentimentTag` for sentiment classification\n    *   [`RoleTag`](https://docs.steamship.com/api-reference/steamship.data.tags#steamship.data.tags.tag_constants.RoleTag) for role classification\n\nThese constants are not required, but using them increases the chance that what you build will interoperate cleanly with everyone else that uses them.\n\nHere is what some of the above tag examples would look like using these enum classes. Notice how it is a combination of standard constant and “magic string” depending on whether a constant exists for that concept.\n\n*   An entity\n*   A part of speech\n*   An embedding\n*   A summarization\n*   A dictionary lookup\n\n## Block and File Tags[](#block-and-file-tags)\n\nThe above text discusses tags upon spans of text. But Steamship actually supports two types of tags: **File Tags** and **Block Tags**.\n\n**File Tags** annotate a [File](https://docs.steamship.com/data/files#files) object itself:\n\n*   They are attached to the [File](https://docs.steamship.com/data/files#files) object (`file.tags`)\n*   Their `block_id`, `start_idx`, and `end_idx` are always null.\n*   They are referenced via the `filetag` keyword in our query system.\n\n**Block Tags** annotate text within a [Block](https://docs.steamship.com/data/blocks#blocks) object:\n\n*   They are attached to the [Block](https://docs.steamship.com/data/blocks#blocks) object (`block.tags`)\n*   Their `start_idx` and `end_idx` fields are either both null or both non-null. If both are null, the `Tag is assumed to apply to the whole ``Block`. They represent offsets into the text that is spanned by that block.\n*   They are referenced via the `blocktag` keyword in our [query system](https://docs.steamship.com/data/queries#queries).\n\nNotes:\n\n*   It is impossible for a tag to cover text spanning multiple blocks."
},
{
  "url": "https://docs.steamship.com/data/blocks",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/data/blocks",
    "loadedTime": "2023-08-17T22:14:31.453Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/data/blocks",
    "title": "Blocks – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Blocks\nBlocks are ordered chunks of content within a File.\nA Block may have raw data, plain text, or both. The type of content is indicated by its mime_type. Blocks can store images, videos, audio clips, or any other chunk of data.\nThis means that different packages and plugins may choose divide files into blocks using different schemes. Consider a CSV file uploaded to Steamship. The following divisions of this file into blocks are all perfectly fine:\nEach CSV row is a block of text.\nEach 10 CSV rows is a block\nThe entire CSV file is one block\nMetadata and annotations about the content of the Block added via Tags on the Block .\nCreating Blocks\nBlocks may be created when creating a File by passing them in the blocks parameter, or they can be appended to an existing file.\nPlease see Block.create() and File.append_block().\nRead the Block PyDoc spec here.\nMaking Block Data Public\nIf you want the raw data bytes of a Block to be publicly accessible, you can set the parameter public_data = True when calling Block.create(). This is useful if you wish to share a generated image or audio file, or must make the content viewable in a place that cannot retain your Steamship API key. You can also change the value of the public_data flag on an existing Block by calling Block.set_public_data.",
  "markdown": "## Blocks\n\nBlocks are ordered chunks of content within a [File](https://docs.steamship.com/data/files#files).\n\nA `Block` may have raw data, plain text, or both. The type of content is indicated by its `mime_type`. Blocks can store images, videos, audio clips, or any other chunk of data.\n\nThis means that different packages and plugins may choose divide files into blocks using different schemes. Consider a CSV file uploaded to Steamship. The following divisions of this file into blocks are all perfectly fine:\n\n*   Each CSV row is a block of text.\n*   Each 10 CSV rows is a block\n*   The entire CSV file is one block\n\nMetadata and annotations about the content of the `Block` added via [Tags](https://docs.steamship.com/data/tags#tags) on the `Block` .\n\n## Creating Blocks[](#creating-blocks)\n\nBlocks may be created when creating a `File` by passing them in the `blocks` parameter, or they can be appended to an existing file.\n\nPlease see `Block.create()` and `File.append_block()`.\n\nRead the [`Block PyDoc spec here`](https://docs.steamship.com/api-reference/steamship.data#steamship.data.block.Block).\n\n## Making Block Data Public[](#making-block-data-public)\n\nIf you want the raw data bytes of a `Block` to be publicly accessible, you can set the parameter `public_data = True` when calling `Block.create()`. This is useful if you wish to share a generated image or audio file, or must make the content viewable in a place that cannot retain your Steamship API key. You can also change the value of the `public_data` flag on an existing `Block` by calling `Block.set_public_data`."
},
{
  "url": "https://docs.steamship.com/data/queries",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/data/queries",
    "loadedTime": "2023-08-17T22:14:32.639Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/data/queries",
    "title": "Queries – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Queries\nSteamship contains a query language, ShipQL, designed to help you fetch Files, Blocks, and Tags. ShipQL enables you to query the results of multiple AI models applied to the same text, to find files or sections identified by language AI features.\nShipQL currently supports only the criteria on which objects are matched (like a SQL WHERE clause). It does not yet support projection and selection (like the SQL SELECT clause).\nUsage\nFile, Block, and Tag objects are all queryable via ShipQL. Their objects in the Python Client have a static query method which accepts a ShipQL string.\nThe object type returned from that query method depends upon the object you used to call it. However the ShipQL predicates always refer to Tags.\nFor example: executing the query name \"Dave\" on the Block.query endpoint will return Blocks which have Tags which have name=\"Dave\".\nLanguage Description\nUnary Predicates\nThese predicates filter unary properties of tags.\nblocktag - The tag is on a block\nfiletag - The tag is on a file\nBinary Predicates\nThese predicates filter valued properties of tags.\nkind \"string\" - The kind of the tag. Only equality is supported. Ex: kind \"ner\"\nname \"string\" - The name of the tag. Only equality is supported. Ex: name \"Dave\"\nfile_id \"uuid string\" - The UUID of the file to which the tag belongs.\nblock_id \"uuid string\" - The UUID of the block to which the tag belongs.\nvalue(\"pathString\") <op> <comparisonValue> - Comparison on the value (JSON content) of the tag. Path string is a dot-separated key path in the json content. Comparison value is a string, numeric, or boolean literal (lowercase). Op can be: \n= - Equals. Ex: value(\"approved\") = true\n>= - Greater than or equal to. Ex: value(\"confidence\") >= 0.5\n> - Greater than. Ex: value(\"confidence\") > 0.5\n<= - Less than or equal to. Ex: value(\"confidence\") <= 0.5\n< - Less than. Ex: value(\"confidence\") < 0.5\nexists - Exists (no comparison value required). Ex: value(\"active\") exists\nBinary Relations\nBinary relations allow filtering on the relationship of a tag to another tag. All relations require the 2nd matching tag to be distinct from the first.\nUsing them in the query language creates the context for a second tag, which may have additional predicates and relations. Ex: kind \"foo2\" and overlaps { kind \"bar2\"} means there exists a tag of kind “foo2” which overlaps a second tag of kind “bar2”.\noverlaps - The spans of the two tags overlap, and they are in the same block.\nsamespan - The spans of the two tags match exactly, and they are in the same block.\nsameblock - The two tags appear in the same block.\nsamefile - The two tags appear in the same file.\nConjunctions\nConjunctions allow combinations of predicates and relations. There is no order of operations between conjunctions; groups of unlike conjunctions must be separated with parentheses, ex: blocktag and (kind \"foo3\" or name \"Tag6\")\nand- Multiple predicates or relations can be intersected with and.\nor - Multiple predicates or relations may be disjoined with or.\nSpecial Predicates\nall - All may appear only at the top level of the query and must be the entire query. It means to return all Files, Blocks, or Tags.",
  "markdown": "## Queries\n\nSteamship contains a query language, **ShipQL**, designed to help you fetch Files, Blocks, and Tags. ShipQL enables you to query the results of multiple AI models applied to the same text, to find files or sections identified by language AI features.\n\nShipQL currently supports only the criteria on which objects are matched (like a SQL WHERE clause). It does not yet support projection and selection (like the SQL SELECT clause).\n\n## Usage[](#usage)\n\nFile, Block, and Tag objects are all queryable via ShipQL. Their objects in the Python Client have a static `query` method which accepts a ShipQL string.\n\nThe object type returned from that query method depends upon the object you used to call it. However the ShipQL predicates always refer to `Tags`.\n\nFor example: executing the query `name \"Dave\"` on the `Block.query` endpoint will return `Blocks` which have `Tags` which have `name=\"Dave\"`.\n\n## Language Description[](#language-description)\n\n### Unary Predicates[](#unary-predicates)\n\nThese predicates filter unary properties of tags.\n\n*   `blocktag` - The tag is on a block\n*   `filetag` - The tag is on a file\n\n### Binary Predicates[](#binary-predicates)\n\nThese predicates filter valued properties of tags.\n\n*   `kind \"string\"` - The kind of the tag. Only equality is supported. Ex: `kind \"ner\"`\n*   `name \"string\"` - The name of the tag. Only equality is supported. Ex: `name \"Dave\"`\n*   `file_id \"uuid string\"` - The UUID of the file to which the tag belongs.\n*   `block_id \"uuid string\"` - The UUID of the block to which the tag belongs.\n*   `value(\"pathString\") <op> <comparisonValue>` - Comparison on the value (JSON content) of the tag. Path string is a dot-separated key path in the json content. Comparison value is a string, numeric, or boolean literal (lowercase). Op can be:\n    *   `=` - Equals. Ex: `value(\"approved\") = true`\n    *   `>=` - Greater than or equal to. Ex: `value(\"confidence\") >= 0.5`\n    *   `>` - Greater than. Ex: `value(\"confidence\") > 0.5`\n    *   `<=` - Less than or equal to. Ex: `value(\"confidence\") <= 0.5`\n    *   `<` - Less than. Ex: `value(\"confidence\") < 0.5`\n    *   `exists` - Exists (no comparison value required). Ex: `value(\"active\") exists`\n\n### Binary Relations[](#binary-relations)\n\nBinary relations allow filtering on the relationship of a tag to another tag. All relations require the 2nd matching tag to be distinct from the first.\n\nUsing them in the query language creates the context for a second tag, which may have additional predicates and relations. Ex: `kind \"foo2\" and overlaps { kind \"bar2\"}` means there exists a tag of kind “foo2” which overlaps a second tag of kind “bar2”.\n\n*   `overlaps` - The spans of the two tags overlap, and they are in the same block.\n*   `samespan` - The spans of the two tags match exactly, and they are in the same block.\n*   `sameblock` - The two tags appear in the same block.\n*   `samefile` - The two tags appear in the same file.\n\n### Conjunctions[](#conjunctions)\n\nConjunctions allow combinations of predicates and relations. There is no order of operations between conjunctions; groups of unlike conjunctions must be separated with parentheses, ex: `blocktag and (kind \"foo3\" or name \"Tag6\")`\n\n*   `and`\\- Multiple predicates or relations can be intersected with and.\n*   `or` - Multiple predicates or relations may be disjoined with or.\n\n### Special Predicates[](#special-predicates)\n\n*   `all` - All may appear only at the top level of the query and must be the entire query. It means to return all `Files`, `Blocks`, or `Tags`."
},
{
  "url": "https://docs.steamship.com/react",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/react",
    "loadedTime": "2023-08-17T22:14:33.347Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/react",
    "title": "@steamship/react – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "@steamship/react\nUsing steamship in a react context is often as simple as making an API request to your agent. To interact with your agent you'll need a few environment variables that must be securely stored server side. As such, if you're working with React you'll likely be working in one of the more popular frameworks like Next.js or Remix.\nAs it stands, we have a few Next.js specific utilites that make getting started with steamship as easy as possible. We'll be adding support for other frameworks in the future.\nThis package also ships with a few React components and hooks that make it easy to get started with steamship in a React context, regardless of framework.\nInstallation\nUsage\nNext.js\n@steamship/react integrates directly with vercels ai package.\nSetup Env Vars\nYour STEAMSHIP_API_KEY can be found at https://www.steamship.com/account/api (opens in a new tab).\nYour STEAMSHIP_AGENT_URL can be found by navigating to Dashboard > Your Agent > API > POST /prompt > cURL\nYour STEAMSHIP_WORKSPACE_KEY can be found in the URL for your agent. https://www.steamship.com/dashboard/agents/workspaces/YOUR_WORKSPACE_KEY/packages/YOUR_PACKAGE_KEY/POST/prompt.\nSetup api endpoints\nIf you're using the new app directory, create a file located at app/api/steamship/[...id]/route.ts with the following contents:\nIf youre using the old pages directory, create a file located at pages/api/steamship/[...steamship].ts with the following contents:\nUse in components\nYou can refer directly to the useChat docs for the easiest way to interact with your steamship api endpoints. You'll need to set the api endpoint to match the endpoints we previous setup. In the example below we also create a dummy chat ID.\nSteamship agents often offer multi-modal support. To provide out of the box support for multi-modal responses, you can use a few utility methods.\nSteamshipMessage will take a message from useChat and support text, markdown, syntax highlighting, audio streams, and images.\nuseBlockUrl will take a blockId returned from steamship and fetch the raw data associated with it. This is used for fetching audio and image data, for example.\nAs an example, you can import or look at the SteamshipChatPrompt component. (opens in a new tab)\nLast updated on August 8, 2023",
  "markdown": "## @steamship/react\n\nUsing steamship in a react context is often as simple as making an API request to your agent. To interact with your agent you'll need a few environment variables that must be securely stored server side. As such, if you're working with React you'll likely be working in one of the more popular frameworks like Next.js or Remix.\n\nAs it stands, we have a few Next.js specific utilites that make getting started with steamship as easy as possible. We'll be adding support for other frameworks in the future.\n\nThis package also ships with a few React components and hooks that make it easy to get started with steamship in a React context, regardless of framework.\n\n## Installation[](#installation)\n\n## Usage[](#usage)\n\n### Next.js[](#nextjs)\n\n@steamship/react integrates directly with vercels `ai` package.\n\n#### Setup Env Vars[](#setup-env-vars)\n\nYour `STEAMSHIP_API_KEY` can be found at [https://www.steamship.com/account/api (opens in a new tab)](https://www.steamship.com/account/api).\n\nYour `STEAMSHIP_AGENT_URL` can be found by navigating to Dashboard > Your Agent > API > POST /prompt > cURL\n\nYour `STEAMSHIP_WORKSPACE_KEY` can be found in the URL for your agent. `https://www.steamship.com/dashboard/agents/workspaces/YOUR_WORKSPACE_KEY/packages/YOUR_PACKAGE_KEY/POST/prompt`.\n\n#### Setup api endpoints[](#setup-api-endpoints)\n\nIf you're using the new `app` directory, create a file located at `app/api/steamship/[...id]/route.ts` with the following contents:\n\nIf youre using the old `pages` directory, create a file located at `pages/api/steamship/[...steamship].ts` with the following contents:\n\n#### Use in components[](#use-in-components)\n\nYou can refer directly to the `useChat` docs for the easiest way to interact with your steamship api endpoints. You'll need to set the `api` endpoint to match the endpoints we previous setup. In the example below we also create a dummy chat ID.\n\nSteamship agents often offer multi-modal support. To provide out of the box support for multi-modal responses, you can use a few utility methods.\n\n`SteamshipMessage` will take a message from `useChat` and support text, markdown, syntax highlighting, audio streams, and images.\n\n`useBlockUrl` will take a blockId returned from steamship and fetch the raw data associated with it. This is used for fetching audio and image data, for example.\n\nAs an example, you can import or look at the [SteamshipChatPrompt component. (opens in a new tab)](https://github.com/steamship-core/steamship-frontend/blob/main/packages/react-components/src/next/components/steamship-chat-prompt.tsx)\n\nLast updated on August 8, 2023"
},
{
  "url": "https://docs.steamship.com/license",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/license",
    "loadedTime": "2023-08-17T22:14:34.520Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/license",
    "title": "License – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "License\nSteamship’s Python Client library is published under the MIT license.\nThe MIT License (MIT)\nCopyright (c) 2022 Steamship, Inc.\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "markdown": "## License\n\nSteamship’s Python Client library is published under the MIT license.\n\nThe MIT License (MIT)\n\nCopyright (c) 2022 Steamship, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
},
{
  "url": "https://docs.steamship.com/authors",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/authors",
    "loadedTime": "2023-08-17T22:14:34.914Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/authors",
    "title": "Contributors – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Contributors\nSteamship is made with love from around the world.\nTed Benson <ted@steamship.com>\nAaron Vontell <aaronvontell@gmail.com>\nDave Kolas <dave@steamship.com>\nEnias Cailliau <enias@steamship.com>\nDoug Reid <doug@steamship.com>\nMax Freundlich <max@steamship.com>",
  "markdown": "## Contributors\n\nSteamship is made with love from around the world.\n\n*   Ted Benson <[ted@steamship.com](mailto:ted@steamship.com)\\>\n*   Aaron Vontell <[aaronvontell@gmail.com](mailto:aaronvontell@gmail.com)\\>\n*   Dave Kolas <[dave@steamship.com](mailto:dave@steamship.com)\\>\n*   Enias Cailliau <[enias@steamship.com](mailto:enias@steamship.com)\\>\n*   Doug Reid <[doug@steamship.com](mailto:doug@steamship.com)\\>\n*   Max Freundlich <[max@steamship.com](mailto:max@steamship.com)\\>"
},
{
  "url": "https://docs.steamship.com/packages/cookbook/adding-configuration",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/adding-configuration",
    "loadedTime": "2023-08-17T22:14:44.356Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/adding-configuration",
    "title": "Making a package or plugin user-configurable – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "This example demonstrates how to make your package or plugin configurable by a user. To add configuration to your package or plugin, you need to do a few things.\nFirst, you need to declare a configTemplate in your steamship.json.\nWith this configTemplate in the steamship.json, Steamship users will be required to provide a configuration when instantiating this package:\nThis config will be validated at the time of instance creation for completeness and correct types.\nSince we provided a default value for name in the template, that value can be omitted and \"you\" will be used instead.\nNow, within the code, you must do a few things. First, you define the inner class that represents the configuration:\nThe names of the fields must align with the names in the configTemplate.\nNext, we tell the Steamship handler how to find our config class:\nNow when implementing a method, we can use the config fields via self.config.<field_name>!\nWhen you put it all together, it looks like this:",
  "markdown": "This example demonstrates how to make your package or plugin configurable by a user. To add configuration to your package or plugin, you need to do a few things.\n\nFirst, you need to declare a `configTemplate` in your `steamship.json`.\n\nWith this `configTemplate` in the `steamship.json`, Steamship users will be required to provide a configuration when instantiating this package:\n\nThis config will be validated at the time of instance creation for completeness and correct types.\n\nSince we provided a default value for `name` in the template, that value can be omitted and `\"you\"` will be used instead.\n\nNow, within the code, you must do a few things. First, you define the inner class that represents the configuration:\n\nThe names of the fields **must** align with the names in the `configTemplate`.\n\nNext, we tell the Steamship handler how to find our config class:\n\nNow when implementing a method, we can use the config fields via `self.config.<field_name>`!\n\nWhen you put it all together, it looks like this:"
},
{
  "url": "https://docs.steamship.com/plugins",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins",
    "loadedTime": "2023-08-17T22:14:50.454Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins",
    "title": "Plugins – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Plugins\nSteamship Plugins (opens in a new tab) perform specific tasks related to AI.\nHow to use plugins\nHow to develop plugins\nSteamship supports the following types of plugins:\nFile Importers\nImporters pull raw data from common external sources into a File.\nExamples: A YouTube video importer imports video content given a URL, A Notion importer imports a document from a Notion space.\nUsing File Importers\nDeveloping File Importers\nBlockifiers\nBlockifiers extract text and other content from raw data in a File to Blocks.\nExamples: Whisper speech to text turns an audio file into a text transcript, a PDF extractor could pull the text chunks and images from a PDF document.\nUsing Importers\nDeveloping Importers\nTaggers\nTaggers create Tags (annotations) on Files and Blocks.\nExamples: A text classifier would attach a classification Tag to a Block, an image object recognizer would add Tags to a Block that identified known objects.\nUsing Taggers\nDeveloping Taggers\nGenerators\nGenerators create new content from existing content.\nExamples: GPT4 creates more text based on the existing text in a conversation, DALL-E creates an image based on a description.\nUsing Generators\nDeveloping Taggers\nEmbedders\nEmbedders convert content into a vector representation. This is primarily used in combination with Steamship’s built in :ref:.\nExamples: Use OpenAI to embed sentences into vectors for search; embed images into vectors for search\nUsing Embedders\nDeveloping Embedders",
  "markdown": "## Plugins\n\n[Steamship Plugins (opens in a new tab)](https://www.steamship.com/plugins) perform specific tasks related to AI.\n\n*   How to [use plugins](https://docs.steamship.com/plugins/using#using-plugins)\n*   How to [develop plugins](https://docs.steamship.com/plugins/developing#developingpluginssec)\n\nSteamship supports the following types of plugins:\n\n## File Importers[](#file-importers)\n\nImporters pull raw data from common external sources into a [File](https://docs.steamship.com/data/files#files).\n\n_Examples_: A YouTube video importer imports video content given a URL, A Notion importer imports a document from a Notion space.\n\n*   [Using File Importers](https://docs.steamship.com/plugins/using/importers#file-importers)\n*   [Developing File Importers](https://docs.steamship.com/plugins/developing/importers#developingfileimporters)\n\n## Blockifiers[](#blockifiers)\n\nBlockifiers extract text and other content from raw data in a [File](https://docs.steamship.com/data/files#files) to [Blocks](https://docs.steamship.com/data/blocks#blocks).\n\n_Examples_: Whisper speech to text turns an audio file into a text transcript, a PDF extractor could pull the text chunks and images from a PDF document.\n\n*   [Using Importers](https://docs.steamship.com/plugins/using/blockifiers#blockifiers)\n*   [Developing Importers](https://docs.steamship.com/plugins/developing/blockifiers#developingblockifierssec)\n\n## Taggers[](#taggers)\n\nTaggers create [Tags](https://docs.steamship.com/data/tags#tags) (annotations) on [Files](https://docs.steamship.com/data/files#files) and [Blocks](https://docs.steamship.com/data/blocks#blocks).\n\n_Examples_: A text classifier would attach a classification `Tag` to a `Block`, an image object recognizer would add `Tags` to a `Block` that identified known objects.\n\n*   [Using Taggers](https://docs.steamship.com/plugins/using/taggers#taggers)\n*   [Developing Taggers](https://docs.steamship.com/plugins/developing/taggers#developingtaggers)\n\n## Generators[](#generators)\n\nGenerators create new content from existing content.\n\n_Examples_: GPT4 creates more text based on the existing text in a conversation, DALL-E creates an image based on a description.\n\n*   [Using Generators](https://docs.steamship.com/plugins/using/generators#generators)\n*   [Developing Taggers](https://docs.steamship.com/plugins/developing/generators#developinggenerators)\n\n## Embedders[](#embedders)\n\nEmbedders convert content into a vector representation. This is primarily used in combination with Steamship’s built in :ref:.\n\n_Examples_: Use OpenAI to embed sentences into vectors for search; embed images into vectors for search\n\n*   [Using Embedders](https://docs.steamship.com/plugins/using/embedders#embedders)\n*   [Developing Embedders](https://docs.steamship.com/plugins/developing/embedders#developingembedders)"
},
{
  "url": "https://docs.steamship.com/packages/cookbook/return-image",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/return-image",
    "loadedTime": "2023-08-17T22:14:48.356Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/return-image",
    "title": "Returning an Image from a Package Endpoint – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Package endpoints can serve images by returning a InvocableResponse[bytes] object with the proper MIME Type set.\nAPI callers will receive a binary response over HTTP with the appropriate Content-Type header, and Steamship’s auto-generated Web UI will convert the response to an image in the browser.",
  "markdown": "Package endpoints can serve images by returning a `InvocableResponse[bytes]` object with the proper MIME Type set.\n\nAPI callers will receive a binary response over HTTP with the appropriate `Content-Type` header, and Steamship’s auto-generated Web UI will convert the response to an image in the browser."
},
{
  "url": "https://docs.steamship.com/packages/cookbook/return-audio",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/return-audio",
    "loadedTime": "2023-08-17T22:14:53.712Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/return-audio",
    "title": "Returning Audio from a Package Endpoint – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Package endpoints can serve audio files by returning a InvocableResponse[bytes] object with the proper MIME Type set.\nAPI callers will receive a binary response over HTTP with the appropriate Content-Type header, and Steamship’s auto-generated Web UI will wrap the response in an audio player widget.",
  "markdown": "Package endpoints can serve audio files by returning a `InvocableResponse[bytes]` object with the proper MIME Type set.\n\nAPI callers will receive a binary response over HTTP with the appropriate `Content-Type` header, and Steamship’s auto-generated Web UI will wrap the response in an audio player widget."
},
{
  "url": "https://docs.steamship.com/packages/cookbook/return-json",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/return-json",
    "loadedTime": "2023-08-17T22:14:55.374Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/return-json",
    "title": "Returning JSON data from a Package Endpoint – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Package endpoints can serve JSON data by returning a python dict object from a method.\nAPI callers will receive a JSON response over HTTP with the appropriate Content-Type header, and Steamship’s auto-generated Web UI will convert the JSON response to a formatted web view.",
  "markdown": "Package endpoints can serve JSON data by returning a python `dict` object from a method.\n\nAPI callers will receive a JSON response over HTTP with the appropriate `Content-Type` header, and Steamship’s auto-generated Web UI will convert the JSON response to a formatted web view."
},
{
  "url": "https://docs.steamship.com/packages/cookbook/return-text",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/return-text",
    "loadedTime": "2023-08-17T22:14:58.514Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/return-text",
    "title": "Returning text data from a Package Endpoint – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Package endpoints can serve text data by returning a python str object from a method.\nAPI callers will receive plain text response over HTTP with the appropriate Content-Type header, and Steamship’s auto-generated Web UI will convert the text response to a formatted web view and interpret it as Markdown.",
  "markdown": "Package endpoints can serve text data by returning a python `str` object from a method.\n\nAPI callers will receive plain text response over HTTP with the appropriate `Content-Type` header, and Steamship’s auto-generated Web UI will convert the text response to a formatted web view and interpret it as Markdown."
},
{
  "url": "https://docs.steamship.com/packages/cookbook/receiving-webhooks",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/receiving-webhooks",
    "loadedTime": "2023-08-17T22:15:01.352Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/receiving-webhooks",
    "title": "Receiving Webhooks – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Receiving Webhooks\nYou can use your Steamship package to receive a webhooks other services:\nAccept data from Zapier\nReceive new messages from a customer service apps\nRegister as a handler for a chat bot framework\nEvery Steamship package instance provides an HTTP API, so receiving webhooks with a package is easy.\nStep 1. Write a Package Method\nHere’s an example of a package method called on_new_email. It is annotated with the @post annotation to register it as an HTTP POST endpoint, and it takes two keyword arguments.\nStep 2. Deploy your package and create an instance\nCode packages themselves don’t do anything. To create your API, you have to first:\nDeploy your package with the Steamship CLI\nCreate an instance with Python, Typescript, cURL, or the Steamship CLI\nStep 3. Determine your instance’s Webhook URL\nWhen you create an instance of your package, its API is assigned a Base URL. Determine your instance’s Base URL using the instructions on that linked page. Then add the method name to get your instance’s Webhook URL.\nFor example, if your instance’s Base URL was:\nthen the webhook URL given the on_new_email method above would be:\nStep 4. Configure your webhook provider\nThe service sending your webhook will need your Webhook URL.\nSteamship webhooks have a few additional requirements:\nThe Content-Type header should be application/json\nThe Authorization header should be Bearer {api-key}, replacing {api-key} with your API Key\nThe HTTP verb can be POST or GET depending on whether you used @post or @get to register the Steamship method\nHTTP POST bodies should be JSON-encoded",
  "markdown": "## Receiving Webhooks\n\nYou can use your Steamship package to receive a webhooks other services:\n\n*   Accept data from Zapier\n*   Receive new messages from a customer service apps\n*   Register as a handler for a chat bot framework\n\nEvery Steamship package instance [provides an HTTP API](https://docs.steamship.com/packages/using#can-i-access-my-package-over-http), so receiving webhooks with a package is easy.\n\n**Step 1. Write a Package Method**\n\nHere’s an example of a package method called `on_new_email`. It is annotated with the `@post` annotation to register it as an `HTTP POST` endpoint, and it takes two keyword arguments.\n\n**Step 2. Deploy your package and create an instance**\n\nCode packages themselves don’t do anything. To create your API, you have to first:\n\n*   [Deploy your package](https://docs.steamship.com/developing/deploying#deploying) with the Steamship CLI\n*   [Create an instance](https://docs.steamship.com/packages/using#usingpackages) with Python, Typescript, cURL, or the Steamship CLI\n\n**Step 3. Determine your instance’s Webhook URL**\n\nWhen you create an instance of your package, its API is assigned a [Base URL](https://docs.steamship.com/packages/using#can-i-access-my-package-over-http). Determine your instance’s Base URL using the instructions on that linked page. Then add the method name to get your instance’s Webhook URL.\n\nFor example, if your instance’s Base URL was:\n\nthen the webhook URL given the `on_new_email` method above would be:\n\nStep 4. Configure your webhook provider\n\nThe service sending your webhook will need your Webhook URL.\n\nSteamship webhooks have a few additional requirements:\n\n*   The `Content-Type` header should be `application/json`\n*   The `Authorization` header should be `Bearer {api-key}`, replacing `{api-key}` with your API Key\n*   The HTTP verb can be `POST` or `GET` depending on whether you used `@post` or `@get` to register the Steamship method\n*   HTTP POST bodies should be JSON-encoded"
},
{
  "url": "https://docs.steamship.com/plugins/using",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using",
    "loadedTime": "2023-08-17T22:15:10.514Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using",
    "title": "Using Plugins – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Using Plugins\nSteamship Plugins (opens in a new tab) perform specific tasks related to AI.\nThis page is about using existing plugins. If you want to develop a Plugin, see Developing Plugins\nSteamship supports the following types of plugins:\nFile Importers pull raw data from common external sources into Files.\nBlockifiers extract text and other content from raw data from Files to Blocks.\nTaggers create Tags (annotations) on Files and Blocks.\nGenerators create new Blocks (content) from existing Blocks (content).\nEmbedders convert content into a vector representation. This is primarily used in combination with Steamship’s built in Embedding Search.\nPlugin Instances\nTo use a Plugin, create an instance of it. When building into a Package, We recommend doing this in the constructor, and saving the result as a member variable.\ngpt4 is now a PluginInstance. The instance contains the plugin’s configuration and is locked to the current version of the Plugin.\nTo use a specific version of the Plugin, pass the version handle:\nTo override default configuration parameters or provide required configuration values, pass a dict of values in the config parameter:\nTo see available configuration parameters, check the documentation of the specific Plugin.\nTo use a PluginInstance, call the type-specific methods on it:\nPlugin invocations return asynchronous Tasks so that you can easily run many plugins and control when you need the results.\nSee the plugin individual plugin types for further info on how each can be called.\nPlugin FAQ\nCan I access my plugin over HTTP?\nCan I access my plugin over HTTP?\nYes. While the preferred access pattern for plugins is via our SDK, Steamship does expose an HTTP API endpoint for plugin instance invocation.\nThe HTTP endpoint for plugin instance invocation is: https://api.steamship.com/api/v1/plugin/instance/{plugin-method}.\nReplace {plugin-method} with the name of the method you wish to invoke on your instance. For instance, for Generators, use generate and for Taggers, use tag.\nYour HTTP call MUST use the following conventions:\nSet the Content-Type header to application/json\nSet the Authorization header to Bearer {api-key}, replacing {api-key} with your API Key\nSet one of the following headers: : - X-Workspace-Id (to the workspace UUID for your workspace) \nX-Workspace-Handle (to the workspace handle for your workspace)\nDefault to HTTP POST if you’re not sure which verb to use. The plugin documentation should specify.\nAdd the arguments as a JSON-encoded POST Body : - This MUST include a pluginInstance field set to the instance handle of your plugin.\nFor example, the HTTP equivalent of:\nwould be:\n{\"appendOutputToFile\": false, \"text\": \"Name three kinds of dogs\", \"pluginInstance\": \"{plugin-instance-handle}\"}\nThe HTTP call to a plugin will return JSON that includes a taskId. For example:\nTo retrieve the output, you can poll the Task via HTTP, using the Task status endpoint (https://api.steamship.com/api/v1/task/status):\n{\"taskId\": \"{task-id}\"}\nIf the task has completed successfully, you will see something like:",
  "markdown": "## Using Plugins\n\n[Steamship Plugins (opens in a new tab)](https://www.steamship.com/plugins) perform specific tasks related to AI.\n\nThis page is about using existing plugins. If you want to develop a `Plugin`, see [Developing Plugins](https://docs.steamship.com/plugins/developing#developingpluginssec)\n\nSteamship supports the following types of plugins:\n\n*   [File Importers](https://docs.steamship.com/plugins/using/importers#file-importers) pull raw data from common external sources into [Files](https://docs.steamship.com/data/files#files).\n*   [Blockifiers](https://docs.steamship.com/plugins/using/blockifiers#blockifiers) extract text and other content from raw data from [Files](https://docs.steamship.com/data/files#files) to [Blocks](https://docs.steamship.com/data/blocks#blocks).\n*   [Taggers](https://docs.steamship.com/plugins/using/taggers#taggers) create [Tags](https://docs.steamship.com/data/tags#tags) (annotations) on [Files](https://docs.steamship.com/data/files#files) and [Blocks](https://docs.steamship.com/data/blocks#blocks).\n*   [Generators](https://docs.steamship.com/plugins/using/generators#generators) create new [Blocks](https://docs.steamship.com/data/blocks#blocks) (content) from existing [Blocks](https://docs.steamship.com/data/blocks#blocks) (content).\n*   [Embedders](https://docs.steamship.com/plugins/using/embedders#embedders) convert content into a vector representation. This is primarily used in combination with Steamship’s built in Embedding Search.\n\n## Plugin Instances[](#plugin-instances)\n\nTo use a `Plugin`, create an instance of it. When building into a [Package](https://docs.steamship.com/packages#packages), We recommend doing this in the constructor, and saving the result as a member variable.\n\n`gpt4` is now a `PluginInstance`. The instance contains the plugin’s configuration and is locked to the current version of the `Plugin`.\n\nTo use a specific version of the `Plugin`, pass the version handle:\n\nTo override default configuration parameters or provide required configuration values, pass a `dict` of values in the `config` parameter:\n\nTo see available configuration parameters, check the documentation of the specific `Plugin`.\n\nTo use a `PluginInstance`, call the type-specific methods on it:\n\nPlugin invocations return asynchronous [Tasks](https://docs.steamship.com/plugins/using/tasks#tasks) so that you can easily run many plugins and control when you need the results.\n\nSee the plugin individual plugin types for further info on how each can be called.\n\n### Plugin FAQ[](#plugin-faq)\n\n*   [Can I access my plugin over HTTP?](https://docs.steamship.com/plugins/using#can-i-access-my-plugin-over-http)\n\n#### Can I access my plugin over HTTP?[](#can-i-access-my-plugin-over-http)\n\nYes. While the preferred access pattern for plugins is via our SDK, Steamship does expose an HTTP API endpoint for plugin instance invocation.\n\nThe HTTP endpoint for plugin instance invocation is: `https://api.steamship.com/api/v1/plugin/instance/{plugin-method}`.\n\nReplace `{plugin-method}` with the name of the method you wish to invoke on your instance. For instance, for [Generators](https://docs.steamship.com/plugins/using/generators#generators), use `generate` and for [Taggers](https://docs.steamship.com/plugins/using/taggers#taggers), use `tag`.\n\nYour HTTP call MUST use the following conventions:\n\n*   Set the `Content-Type` header to `application/json`\n*   Set the `Authorization` header to `Bearer {api-key}`, replacing `{api-key}` with your API Key\n*   Set one of the following headers: : - `X-Workspace-Id` (to the workspace UUID for your workspace)\n    *   `X-Workspace-Handle` (to the workspace handle for your workspace)\n*   Default to `HTTP POST` if you’re not sure which verb to use. The plugin documentation should specify.\n*   Add the arguments as a JSON-encoded POST Body : - This MUST include a `pluginInstance` field set to the instance handle of your plugin.\n\nFor example, the HTTP equivalent of:\n\nwould be:\n\n> {\"appendOutputToFile\": false, \"text\": \"Name three kinds of dogs\", \"pluginInstance\": \"{plugin-instance-handle}\"}\n\nThe HTTP call to a plugin will return JSON that includes a `taskId`. For example:\n\nTo retrieve the output, you can poll the Task via HTTP, using the Task status endpoint (`https://api.steamship.com/api/v1/task/status`):\n\n> {\"taskId\": \"{task-id}\"}\n\nIf the task has completed successfully, you will see something like:"
},
{
  "url": "https://docs.steamship.com/plugins/using/importers",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/importers",
    "loadedTime": "2023-08-17T22:15:10.858Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/importers",
    "title": "File Importers – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "File Importers\nFile Importers import raw, unprocessed data into Steamship.\nA File Importer’s input is a URL or raw bytes.\nA File Importer’s output is raw bytes plus a MIME type.\nYou can use File Importers when developing Steamship packages, in your own Python app code, or as one-off functions that import data in the cloud.\nUsing File Importers\nTo use a file importer, create an instance within your workspace and then refer to it when creating a file.\nThe documentation for the file importer you use will provide instructions about how to pass required arguments to it. Some require configuration (provided at plugin instance creation time) and others require a URL (provided at file creation time).",
  "markdown": "## File Importers\n\nFile Importers import raw, unprocessed data into Steamship.\n\n*   A File Importer’s input is a URL or raw bytes.\n*   A File Importer’s output is raw bytes plus a MIME type.\n\nYou can use File Importers when developing Steamship packages, in your own Python app code, or as one-off functions that import data in the cloud.\n\n## Using File Importers[](#using-file-importers)\n\nTo use a [file importer](https://docs.steamship.com/plugins/using/importers#file-importers), create an instance within your workspace and then refer to it when creating a file.\n\nThe documentation for the file importer you use will provide instructions about how to pass required arguments to it. Some require configuration (provided at plugin instance creation time) and others require a URL (provided at file creation time)."
},
{
  "url": "https://docs.steamship.com/plugins/using/importers/using",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/importers/using",
    "loadedTime": "2023-08-17T22:15:12.721Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/importers/using",
    "title": "Using File Importers – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Using File Importers\nTo use a file importer, create an instance within your workspace and then refer to it when creating a file.\nThe documentation for the file importer you use will provide instructions about how to pass required arguments to it. Some require configuration (provided at plugin instance creation time) and others require a URL (provided at file creation time).",
  "markdown": "## Using File Importers\n\nTo use a [file importer](https://docs.steamship.com/plugins/using/importers/index#file-importers), create an instance within your workspace and then refer to it when creating a file.\n\nThe documentation for the file importer you use will provide instructions about how to pass required arguments to it. Some require configuration (provided at plugin instance creation time) and others require a URL (provided at file creation time)."
},
{
  "url": "https://docs.steamship.com/plugins/using/blockifiers",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/blockifiers",
    "loadedTime": "2023-08-17T22:15:14.223Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/blockifiers",
    "title": "Blockifiers – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Blockifiers\nBlockifiers convert data into Steamship’s native Block format.\nA Blockifier’s input is raw bytes. Examples include a PDF, image, audio, HTML, CSV, JSON-formatted API output, or so on.\nA Blockifier’s output is an object in Steamship Block format.\nAll data imported into Steamship must be first blockified before it can be used.\nYou can use blockifiers when developing Steamship Packages, in your own Python app code, or as one-off functions that convert data in the cloud.\nUsing Blockifiers\nTo use a blockifier, create an instance with your Steamship client and apply it to a file.\nIn the above code, the two key lines are:\nIn these lines, blockifier-handle identifies which blockifier you would like to use, and instance-handle identifies your particular instance of this blockifier in a workspace. The same instance is reused, rather than created, if you load it like this again.\nCommon Blockifiers\nSteamship maintains a growing collection of official blockifiers for common scenarios. Our goal is to always map our defaults to best of breed models so that you can get work done quickly without worrying about the details of model selection and tuning.\nOur currently supported blockifiers are:\nmarkdown-default (opens in a new tab) - Converts Markdown to Steamship Blocks\nspeech-to-text-default (opens in a new tab) - Converts audio to Steamship Blocks\nwhisper-s2t-blockifier (opens in a new tab) - Converts audio to Steamship Blocks (via Whisper (opens in a new tab))\nwikipedia-blockifier (opens in a new tab) - Converts Wikipedia pages to Steamship Blocks\ncsv-blockifier (opens in a new tab) - Converts CSV to Steamship Blocks\nInput\nThe input to a blockify operation is a File with no Blocks.\nOutput\nWhen you call blockify on a file, the object that is returned is a Task. You can wait() on this task, or continue on to do other work. The output of a blockify operation is Blocks and potentially Tags on that file. However, since the operation happens asynchronously on the back-end, you will need to refresh() the file to see the output.",
  "markdown": "## Blockifiers\n\nBlockifiers convert data into Steamship’s native [Block format](https://docs.steamship.com/data#data-model).\n\n*   **A Blockifier’s input** is raw bytes. Examples include a PDF, image, audio, HTML, CSV, JSON-formatted API output, or so on.\n*   **A Blockifier’s output** is an object in [Steamship Block format](https://docs.steamship.com/data#data-model).\n\nAll data imported into Steamship must be first blockified before it can be used.\n\nYou can use blockifiers when developing Steamship [Packages](https://docs.steamship.com/packages#packages), in your own Python app code, or as one-off functions that convert data in the cloud.\n\n## Using Blockifiers[](#using-blockifiers)\n\nTo use a blockifier, create an instance with your Steamship client and apply it to a file.\n\nIn the above code, the two key lines are:\n\nIn these lines, `blockifier-handle` identifies which blockifier you would like to use, and `instance-handle` identifies your particular instance of this blockifier in a workspace. The same instance is reused, rather than created, if you load it like this again.\n\n### Common Blockifiers[](#common-blockifiers)\n\nSteamship maintains a growing collection of official blockifiers for common scenarios. Our goal is to always map our defaults to best of breed models so that you can get work done quickly without worrying about the details of model selection and tuning.\n\nOur currently supported blockifiers are:\n\n*   [markdown-default (opens in a new tab)](https://www.steamship.com/plugins/markdown-blockifier-default) - Converts Markdown to Steamship Blocks\n*   [speech-to-text-default (opens in a new tab)](https://www.steamship.com/plugins/s2t-blockifier-default) - Converts audio to Steamship Blocks\n*   [whisper-s2t-blockifier (opens in a new tab)](https://www.steamship.com/plugins/whisper-s2t-blockifier) - Converts audio to Steamship Blocks (via [Whisper (opens in a new tab)](https://openai.com/blog/whisper/))\n*   [wikipedia-blockifier (opens in a new tab)](https://www.steamship.com/plugins/wikipedia-blockifier) - Converts Wikipedia pages to Steamship Blocks\n*   [csv-blockifier (opens in a new tab)](https://www.steamship.com/plugins/csv-blockifier) - Converts CSV to Steamship Blocks\n\n## Input[](#input)\n\nThe input to a `blockify` operation is a `File` with no `Blocks`.\n\n## Output[](#output)\n\nWhen you call `blockify` on a file, the object that is returned is a `Task`. You can `wait()` on this task, or continue on to do other work. The output of a `blockify` operation is [Blocks](https://docs.steamship.com/data/blocks#blocks) and potentially [Tags](https://docs.steamship.com/data/tags#tags) on that file. However, since the operation happens asynchronously on the back-end, you will need to `refresh()` the file to see the output."
},
{
  "url": "https://docs.steamship.com/plugins/using/blockifiers/using",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/blockifiers/using",
    "loadedTime": "2023-08-17T22:15:21.613Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/blockifiers/using",
    "title": "Output – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Using Blockifiers\nTo use a blockifier, create an instance with your Steamship client and apply it to a file.\nIn the above code, the two key lines are:\nIn these lines, blockifier-handle identifies which blockifier you would like to use, and instance-handle identifies your particular instance of this blockifier in a workspace. The same instance is reused, rather than created, if you load it like this again.\nCommon Blockifiers\nSteamship maintains a growing collection of official blockifiers for common scenarios. Our goal is to always map our defaults to best of breed models so that you can get work done quickly without worrying about the details of model selection and tuning.\nOur currently supported blockifiers are:\nmarkdown-default (opens in a new tab) - Converts Markdown to Steamship Blocks\nspeech-to-text-default (opens in a new tab) - Converts audio to Steamship Blocks\nwhisper-s2t-blockifier (opens in a new tab) - Converts audio to Steamship Blocks (via Whisper (opens in a new tab))\nwikipedia-blockifier (opens in a new tab) - Converts Wikipedia pages to Steamship Blocks\ncsv-blockifier (opens in a new tab) - Converts CSV to Steamship Blocks\nInput\nThe input to a blockify operation is a File with no Blocks.\nOutput\nWhen you call blockify on a file, the object that is returned is a Task. You can wait() on this task, or continue on to do other work. The output of a blockify operation is Blocks and potentially Tags on that file. However, since the operation happens asynchronously on the back-end, you will need to refresh() the file to see the output.",
  "markdown": "## Using Blockifiers\n\nTo use a blockifier, create an instance with your Steamship client and apply it to a file.\n\nIn the above code, the two key lines are:\n\nIn these lines, `blockifier-handle` identifies which blockifier you would like to use, and `instance-handle` identifies your particular instance of this blockifier in a workspace. The same instance is reused, rather than created, if you load it like this again.\n\n## Common Blockifiers[](#common-blockifiers)\n\nSteamship maintains a growing collection of official blockifiers for common scenarios. Our goal is to always map our defaults to best of breed models so that you can get work done quickly without worrying about the details of model selection and tuning.\n\nOur currently supported blockifiers are:\n\n*   [markdown-default (opens in a new tab)](https://www.steamship.com/plugins/markdown-blockifier-default) - Converts Markdown to Steamship Blocks\n*   [speech-to-text-default (opens in a new tab)](https://www.steamship.com/plugins/s2t-blockifier-default) - Converts audio to Steamship Blocks\n*   [whisper-s2t-blockifier (opens in a new tab)](https://www.steamship.com/plugins/whisper-s2t-blockifier) - Converts audio to Steamship Blocks (via [Whisper (opens in a new tab)](https://openai.com/blog/whisper/))\n*   [wikipedia-blockifier (opens in a new tab)](https://www.steamship.com/plugins/wikipedia-blockifier) - Converts Wikipedia pages to Steamship Blocks\n*   [csv-blockifier (opens in a new tab)](https://www.steamship.com/plugins/csv-blockifier) - Converts CSV to Steamship Blocks\n\n## Input\n\nThe input to a `blockify` operation is a `File` with no `Blocks`.\n\n## Output\n\nWhen you call `blockify` on a file, the object that is returned is a `Task`. You can `wait()` on this task, or continue on to do other work. The output of a `blockify` operation is [Blocks](https://docs.steamship.com/data/blocks#blocks) and potentially [Tags](https://docs.steamship.com/data/tags#tags) on that file. However, since the operation happens asynchronously on the back-end, you will need to `refresh()` the file to see the output."
},
{
  "url": "https://docs.steamship.com/plugins/using/taggers",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/taggers",
    "loadedTime": "2023-08-17T22:15:23.841Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/taggers",
    "title": "Taggers – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Taggers\nTaggers add Tags (annotations) to Blocks (content). These tags can be queried and composed later.\nUsing Taggers\nTo use a tagger, create an instance within your workspace and then apply it to a file. Note that a file must first have Blocks, either by direct creation or using a Blockifier.\nInput\nThe input to a tag operation is a File. Most Taggers by default will tag all Blocks within that file.\nOutput\nWhen you call tag on a file or via a PluginInstance, the object that is returned is a Task. You can wait() on this task, or continue on to do other work. The output to a tag operation is more Tags on that file. However, since the tag operations happens asynchronously on the back-end, you will need to refresh() the file to see the output:",
  "markdown": "## Taggers\n\nTaggers add [Tags](https://docs.steamship.com/data/tags#tags) (annotations) to [Blocks](https://docs.steamship.com/data/blocks#blocks) (content). These tags can be [queried](https://docs.steamship.com/data/queries#queries) and composed later.\n\n## Using Taggers[](#using-taggers)\n\nTo use a tagger, create an instance within your workspace and then apply it to a file. Note that a file must first have [Blocks](https://docs.steamship.com/data/blocks#blocks), either by direct creation or using a [Blockifier](https://docs.steamship.com/plugins/using/blockifiers#blockifiers).\n\n## Input[](#input)\n\nThe input to a `tag` operation is a `File`. Most `Taggers` by default will tag all `Blocks` within that file.\n\n## Output[](#output)\n\nWhen you call `tag` on a file or via a `PluginInstance`, the object that is returned is a `Task`. You can `wait()` on this task, or continue on to do other work. The output to a `tag` operation is more [Tags](https://docs.steamship.com/data/tags#tags) on that file. However, since the tag operations happens asynchronously on the back-end, you will need to `refresh()` the file to see the output:"
},
{
  "url": "https://docs.steamship.com/plugins/using/taggers/using",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/taggers/using",
    "loadedTime": "2023-08-17T22:15:30.458Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/taggers/using",
    "title": "Output – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Using Taggers\nTo use a tagger, create an instance within your workspace and then apply it to a file. Note that a file must first have Blocks, either by direct creation or using a Blockifier.\nInput\nThe input to a tag operation is a File. Most Taggers by default will tag all Blocks within that file.\nOutput\nWhen you call tag on a file or via a PluginInstance, the object that is returned is a Task. You can wait() on this task, or continue on to do other work. The output to a tag operation is more Tags on that file. However, since the tag operations happens asynchronously on the back-end, you will need to refresh() the file to see the output:",
  "markdown": "## Using Taggers\n\nTo use a tagger, create an instance within your workspace and then apply it to a file. Note that a file must first have [Blocks](https://docs.steamship.com/data/blocks#blocks), either by direct creation or using a [Blockifier](https://docs.steamship.com/plugins/using/blockifiers#blockifiers).\n\n## Input\n\nThe input to a `tag` operation is a `File`. Most `Taggers` by default will tag all `Blocks` within that file.\n\n## Output\n\nWhen you call `tag` on a file or via a `PluginInstance`, the object that is returned is a `Task`. You can `wait()` on this task, or continue on to do other work. The output to a `tag` operation is more [Tags](https://docs.steamship.com/data/tags#tags) on that file. However, since the tag operations happens asynchronously on the back-end, you will need to `refresh()` the file to see the output:"
},
{
  "url": "https://docs.steamship.com/plugins/using/generators",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/generators",
    "loadedTime": "2023-08-17T22:15:32.228Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/generators",
    "title": "Generators – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Generators\nGenerators create more Blocks (content) on a File.\nUsing Generators\nTo use a generator, create an instance within your workspace and then invoke it.\nInput\nThere are several ways to specify input to a Generator:\nRaw Text You can pass raw text directly to a generator:\nBlocks of an existing File You can pass the generator a File id to work on, optionally passing a subset of blocks:\nA query for existing Blocks You can pass the generator a query that will produce Blocks for the Generator.\nPublic output If you wish to make the output of the generation public (for example an image or audio file), you can pass make_output_public = True to the call to generate.\nOutput\nWhen you call generate on a file or via a PluginInstance, the object that is returned is a Task. You can wait() on this task, or continue on to do other work. The output to a generate operation is Blocks. You can always get these blocks from the output of the Task:\nBy default, this output is not saved to a File. If you wish the result to be persisted, you can pass append_output_to_file=True to the call, and it will be persisted to a new File:\nIf you want the output to be appended to an existing File, just pass its id as well:\nSteamship provides several Generators:\nDALL-E\nGPT-4\nOther generators are available on the Steamship plugins page (opens in a new tab)",
  "markdown": "## Generators\n\nGenerators create more [Blocks](https://docs.steamship.com/data/blocks#blocks) (content) on a [File](https://docs.steamship.com/data/files#files).\n\n## Using Generators[](#using-generators)\n\nTo use a generator, create an instance within your workspace and then invoke it.\n\n## Input[](#input)\n\nThere are several ways to specify input to a `Generator`:\n\n**Raw Text** You can pass raw text directly to a generator:\n\n**Blocks of an existing File** You can pass the generator a `File` id to work on, optionally passing a subset of blocks:\n\n**A query for existing Blocks** You can pass the generator a [query](https://docs.steamship.com/data/queries#queries) that will produce `Blocks` for the `Generator`.\n\n**Public output** If you wish to make the output of the generation public (for example an image or audio file), you can pass `make_output_public = True` to the call to `generate`.\n\n## Output[](#output)\n\nWhen you call `generate` on a file or via a `PluginInstance`, the object that is returned is a `Task`. You can `wait()` on this task, or continue on to do other work. The output to a `generate` operation is [Blocks](https://docs.steamship.com/data/blocks#blocks). You can always get these blocks from the output of the `Task`:\n\nBy default, this output is **not** saved to a `File`. If you wish the result to be persisted, you can pass `append_output_to_file=True` to the call, and it will be persisted to a **new** `File`:\n\nIf you want the output to be appended to an existing `File`, just pass its id as well:\n\nSteamship provides several Generators:\n\n*   [DALL-E](https://docs.steamship.com/plugins/using/generators/dalle)\n*   [GPT-4](https://docs.steamship.com/plugins/using/generators/gpt4)\n\nOther generators are available on the Steamship [plugins page (opens in a new tab)](https://www.steamship.com/plugins?tab=Public)"
},
{
  "url": "https://docs.steamship.com/plugins/using/generators/dalle",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/generators/dalle",
    "loadedTime": "2023-08-17T22:15:37.937Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/generators/dalle",
    "title": "DALL-E – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "DALL-E\nThe DALL-E Generator plugin uses OpenAI’s DALL-E to generate an image from a text description.\nThe plugin will combine all text that is passed to it into a single prompt for image generation. The plugin handles retrying for rate limits and uses Steamship’s OpenAI API key by default, eliminating the need for you to have a separate OpenAI account.\nThe simplest possible example is:\nThe Generator interface supports many other ways to provide input and persist output.\nThe DALL-E plugin has a few configuration parameters:\nopenai_api_key: str, An openAI API key to use. If left default, will use Steamship’s API key.\nn: numeric, How many images to generate for each prompt. This is how many Blocks will be in the output.\nsize: str, default “1024x1024”, The size of the ouptut images. May be \"1024x1024\", \"512x512\", or \"256x256\".\nmax_retries: int, default 8, Maximum number of retries to make when generating.\nrequest_timeout: float, default 600, maximum seconds to wait on calls to OpenAI.",
  "markdown": "## DALL-E\n\nThe DALL-E `Generator` plugin uses OpenAI’s DALL-E to generate an image from a text description.\n\nThe plugin will combine all text that is passed to it into a single prompt for image generation. The plugin handles retrying for rate limits and uses Steamship’s OpenAI API key by default, eliminating the need for you to have a separate OpenAI account.\n\nThe simplest possible example is:\n\nThe [Generator](https://docs.steamship.com/plugins/using/generators/index#generators) interface supports many other ways to provide input and persist output.\n\nThe DALL-E plugin has a few [configuration parameters](https://docs.steamship.com/plugins/using#creating-plugin-instances):\n\n*   `openai_api_key`: `str`, An openAI API key to use. If left default, will use Steamship’s API key.\n*   `n`: `numeric`, How many images to generate for each prompt. This is how many `Blocks` will be in the output.\n*   `size`: `str`, default “1024x1024”, The size of the ouptut images. May be \"1024x1024\", \"512x512\", or \"256x256\".\n*   `max_retries`: `int`, default 8, Maximum number of retries to make when generating.\n*   `request_timeout`: `float`, default 600, maximum seconds to wait on calls to OpenAI."
},
{
  "url": "https://docs.steamship.com/plugins/using/generators/gpt4",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/generators/gpt4",
    "loadedTime": "2023-08-17T22:15:45.349Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/generators/gpt4",
    "title": "GPT-4 (and GPT 3.5) – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "GPT-4 (and GPT 3.5)\nThe GPT-4 Generator plugin uses OpenAI’s GPT-4 to generate text from a text prompt, or the continuation of a chat. It can also be used with GPT-3.5 by passing \"gpt-3.5-turbo\" as the model configuration parameter.\nThe plugin will treat each Block of the input as an element of a chat. If a Block has a Tag of kind “role” and name ( “system” | “user” | “assistant” ), the content will be passed to OpenAI with the corresponding role. If a Block does not have a role tag, it will be passed with the configured default role, which defaults to “user” (see config params below).\nThe plugin handles retrying for rate limits and uses Steamship’s OpenAI API key by default, eliminating the need for you to have a separate OpenAI account.\nThe simplest possible example is:\nTo build a chat interaction, you can persist the prompt components to a File object, tagging them with their conversational roles:\nIn the example above, in addition to being returned as the result of the Task, the output Block is appended to chat_file.\nAll output Blocks will be tagged with the “assistant” role to allow more content to be easily appended and generated.\nThe Generator interface supports many other ways to provide input and persist output.\nThe GPT-4 plugin has a few configuration parameters:\nopenai_api_key: str, An openAI API key to use. If left default, will use Steamship’s API key.\nmax_tokens: int, default 256, The maximum number of tokens to generate per request. Can be overridden in runtime options.\nmodel: str , default “gpt-4”, The OpenAI model to use. Can be a pre-existing fine-tuned model.\ntemperature: float , default 0.4, Controls randomness. Lower values produce higher likelihood / more predictable results; higher values produce more variety. Values between 0-1.\ntop_p: int, default 1, Controls the nucleus sampling, where the model considers the results of the tokens with top_p probability mass. Values between 0-1.\npresence_penalty: int, default 0, Control how likely the model will reuse words. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model’s likelihood to talk about new topics. Number between -2.0 and 2.0.\nfrequency_penalty: int, default 0, Control how likely the model will reuse words. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model’s likelihood to repeat the same line verbatim. Number between -2.0 and 2.0.\nmoderate_output: bool , default True, Pass the generated output back through OpenAI’s moderation endpoint and throw an exception if flagged.\nmax_retries: int , default 8, Maximum number of retries to make when generating.\nrequest_timeout: float, default 600, Timeout for requests to OpenAI completion API. Default is 600 seconds.\nn: int, default 1, How many completions to generate for each prompt.\ndefault_role: str, default RoleTag.USER, The default role to use for a block that does not have a Tag of kind=’role’\ndefault_system_prompt: str , default “”, System prompt that will be prepended before every request\nAdditionally, stopwords can be passed in the stop parameter in the options of the generate call. Other parameters may be overridden on an individual invocation by passing them in the options as well.",
  "markdown": "## GPT-4 (and GPT 3.5)\n\nThe GPT-4 `Generator` plugin uses OpenAI’s GPT-4 to generate text from a text prompt, or the continuation of a chat. It can also be used with GPT-3.5 by passing `\"gpt-3.5-turbo\"` as the `model` configuration parameter.\n\nThe plugin will treat each `Block` of the input as an element of a chat. If a `Block` has a `Tag` of kind “role” and name ( “system” | “user” | “assistant” ), the content will be passed to OpenAI with the corresponding role. If a `Block` does not have a role tag, it will be passed with the configured default role, which defaults to “user” (see config params below).\n\nThe plugin handles retrying for rate limits and uses Steamship’s OpenAI API key by default, eliminating the need for you to have a separate OpenAI account.\n\nThe simplest possible example is:\n\nTo build a chat interaction, you can persist the prompt components to a `File` object, tagging them with their conversational roles:\n\nIn the example above, in addition to being returned as the result of the `Task`, the output `Block` is appended to `chat_file`.\n\nAll output `Blocks` will be tagged with the “assistant” role to allow more content to be easily appended and generated.\n\nThe [Generator](https://docs.steamship.com/plugins/using/generators/index#generators) interface supports many other ways to provide input and persist output.\n\nThe GPT-4 plugin has a few [configuration parameters](https://docs.steamship.com/plugins/using#creating-plugin-instances):\n\n*   `openai_api_key`: `str`, An openAI API key to use. If left default, will use Steamship’s API key.\n*   `max_tokens`: `int`, default 256, The maximum number of tokens to generate per request. Can be overridden in runtime options.\n*   `model`: `str` , default “gpt-4”, The OpenAI model to use. Can be a pre-existing fine-tuned model.\n*   `temperature`: `float` , default 0.4, Controls randomness. Lower values produce higher likelihood / more predictable results; higher values produce more variety. Values between 0-1.\n*   `top_p`: `int`, default 1, Controls the nucleus sampling, where the model considers the results of the tokens with top\\_p probability mass. Values between 0-1.\n*   `presence_penalty`: `int`, default 0, Control how likely the model will reuse words. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model’s likelihood to talk about new topics. Number between -2.0 and 2.0.\n*   `frequency_penalty`: `int`, default 0, Control how likely the model will reuse words. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model’s likelihood to repeat the same line verbatim. Number between -2.0 and 2.0.\n*   `moderate_output`: `bool` , default True, Pass the generated output back through OpenAI’s moderation endpoint and throw an exception if flagged.\n*   `max_retries`: `int` , default 8, Maximum number of retries to make when generating.\n*   `request_timeout`: `float`, default 600, Timeout for requests to OpenAI completion API. Default is 600 seconds.\n*   `n`: `int`, default 1, How many completions to generate for each prompt.\n*   `default_role`: `str`, default RoleTag.USER, The default role to use for a block that does not have a Tag of kind=’role’\n*   `default_system_prompt`: `str` , default “”, System prompt that will be prepended before every request\n\nAdditionally, stopwords can be passed in the `stop` parameter in the `options` of the `generate` call. Other parameters may be overridden on an individual invocation by passing them in the `options` as well."
},
{
  "url": "https://docs.steamship.com/plugins/using/embedders",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/embedders",
    "loadedTime": "2023-08-17T22:15:50.122Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/embedders",
    "title": "Embedders – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Embedders\nEmbedders are a special case of Taggers which convert data into vector format.\nThe main reason to use an embedder is to provide data to an Embedding Search Index for search.",
  "markdown": "## Embedders\n\nEmbedders are a special case of Taggers which convert data into vector format.\n\nThe main reason to use an embedder is to provide data to an [Embedding Search Index for search](https://docs.steamship.com/embedding-search#embedding-search-index)."
},
{
  "url": "https://docs.steamship.com/plugins/using/tasks",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/tasks",
    "loadedTime": "2023-08-17T22:16:04.810Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/tasks",
    "title": "Tasks – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Tasks\nMost Plugin operations return a Task. This allows you to conveniently handle the long, asynchronous aspect of many plugin invocations.\nWaiting on Tasks\nIf your code does not need to do any other work while the Plugin is running, you may wait() on the Task:\nThis will make your code poll the Steamship service until either the Task is complete, or the wait timeout is reached.\nNOTE\nWaiting on the task may time out before the Task is complete. Don’t worry, the Task is still running on the server. You can increase the time you wait by passing the max_timeout_s parameter.\nReturning Tasks from a Package\nOne common pattern when your package does long asynchronous work is to return a Task id which can be used later to check on the status of the Task. To check the status of a Task from its id:\nOnce you have a task object again, you can wait() on it, or check its state variable.",
  "markdown": "## Tasks\n\nMost [Plugin](https://docs.steamship.com/plugins#plugins) operations return a `Task`. This allows you to conveniently handle the long, asynchronous aspect of many plugin invocations.\n\n## Waiting on Tasks[](#waiting-on-tasks)\n\nIf your code does not need to do any other work while the `Plugin` is running, you may `wait()` on the `Task`:\n\nThis will make your code poll the Steamship service until either the `Task` is complete, or the wait timeout is reached.\n\n#### NOTE[](#note)\n\nWaiting on the task may time out before the `Task` is complete. Don’t worry, the `Task` is still running on the server. You can increase the time you wait by passing the `max_timeout_s` parameter.\n\n## Returning Tasks from a Package[](#returning-tasks-from-a-package)\n\nOne common pattern when your package does long asynchronous work is to return a `Task` id which can be used later to check on the status of the `Task`. To check the status of a `Task` from its id:\n\nOnce you have a task object again, you can `wait()` on it, or check its `state` variable."
},
{
  "url": "https://docs.steamship.com/plugins/developing",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing",
    "loadedTime": "2023-08-17T22:16:05.148Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing",
    "title": "Developing Plugins – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Developing Plugins\nEach plugin is a stateless, Python-based microservice that runs in the cloud and conforms to a strict interface and data model. Plugins may do work themselves, or they may adapt work done by third-party services for use with Steamship.\nTo implement a plugin, you simply fill in the required abstract methods from the appropriate PluginService abstract class. If you’ve implemented the required abstract methods, you have successfully built a plugin!\nRead more here:\nPlugin Project Structure\nDeveloping File Importers\nDeveloping Blockifiers\nDeveloping Generators\nDeveloping Taggers\nDeveloping Embedders\nUnlike packages, plugins also offer support for asynchronous work. This is useful when writing a plugin that, itself, contacts an asynchronous third-party API. You can find the documentation for that here:\nWriting Async Plugins",
  "markdown": "## Developing Plugins\n\nEach plugin is a stateless, Python-based microservice that runs in the cloud and conforms to a strict interface and data model. Plugins may do work themselves, or they may adapt work done by third-party services for use with Steamship.\n\nTo implement a plugin, you simply fill in the required abstract methods from the appropriate `PluginService` abstract class. If you’ve implemented the required abstract methods, you have successfully built a plugin!\n\nRead more here:\n\n*   [Plugin Project Structure](https://docs.steamship.com/plugins/developing/project-structure)\n*   [Developing File Importers](https://docs.steamship.com/plugins/developing/importers)\n*   [Developing Blockifiers](https://docs.steamship.com/plugins/developing/blockifiers)\n*   [Developing Generators](https://docs.steamship.com/plugins/developing/generators)\n*   [Developing Taggers](https://docs.steamship.com/plugins/developing/taggers)\n*   [Developing Embedders](https://docs.steamship.com/plugins/developing/embedders)\n\nUnlike packages, plugins also offer support for asynchronous work. This is useful when writing a plugin that, itself, contacts an asynchronous third-party API. You can find the documentation for that here:\n\n*   [Writing Async Plugins](https://docs.steamship.com/plugins/developing/async-plugins)"
},
{
  "url": "https://docs.steamship.com/plugins/developing/project-structure",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing/project-structure",
    "loadedTime": "2023-08-17T22:16:08.060Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing/project-structure",
    "title": "Plugin Project Structure – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Plugin Project Structure\nYour main implementation lives in the src/api.py file of your project. This file will have been created for you by the template you selected when starting your project.\nInside this file, you will find a class that derives from a base class specific to the plugin type.\nFrom the implementation perspective, think of a plugin as a class that implements an Abstract Base Class that the Steamship Engine knows how to communicate with. Each plugin type implements an abstract base class with a different contract.\nConsider the following tagger plugin:\nOnce deployed to Steamship, this plugin can be applied to files in Steamship, leaving each one with a tag that can be queried later.\nYou can also define configuration parameters for your plugin.",
  "markdown": "## Plugin Project Structure\n\nYour main implementation lives in the `src/api.py` file of your project. This file will have been created for you by the template you selected when starting your project.\n\nInside this file, you will find a class that derives from a base class specific to the plugin type.\n\nFrom the implementation perspective, think of a plugin as a class that implements an Abstract Base Class that the Steamship Engine knows how to communicate with. Each plugin type implements an abstract base class with a different contract.\n\nConsider the following tagger plugin:\n\nOnce deployed to Steamship, this plugin can be applied to files in Steamship, leaving each one with a tag that can be queried later.\n\nYou can also [define configuration parameters](https://docs.steamship.com/developing/configuration#id1) for your plugin."
},
{
  "url": "https://docs.steamship.com/plugins/developing/importers",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing/importers",
    "loadedTime": "2023-08-17T22:16:15.228Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing/importers",
    "title": "Developing File Importers – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Developing File Importers\nWe’re excited for you to do this, but we haven’t documented it yet!\nCome chat with us on Discord (opens in a new tab)",
  "markdown": "## Developing File Importers\n\nWe’re excited for you to do this, but we haven’t documented it yet!\n\n[Come chat with us on Discord (opens in a new tab)](http://steamship.com/discord)"
},
{
  "url": "https://docs.steamship.com/plugins/developing/generators",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing/generators",
    "loadedTime": "2023-08-17T22:16:18.651Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing/generators",
    "title": "Developing Generators – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Developing Generators\nA Generator takes Blocks as input and creates new Blocks as output.\nTo implement a Generator, your plugin class should inherit from steamship.plugin.generator.Generator and implement the abstract run method:\nFor example, an image Generator could merge the text from the input blocks and use it to generate an image Block.\nIn addition to the input blocks and instance configuration, Generators can also receive arbitrary key/value runtime parameters. These are present in request.data.options.\nSee the DALL-E plugin (opens in a new tab) for a working example of a text to image Generator.",
  "markdown": "## Developing Generators\n\nA `Generator` takes [Blocks](https://docs.steamship.com/data/blocks#blocks) as input and creates new `Blocks` as output.\n\nTo implement a `Generator`, your plugin class should inherit from [`steamship.plugin.generator.Generator`](https://docs.steamship.com/api-reference/steamship.plugin#steamship.plugin.generator.Generator) and implement the abstract `run` method:\n\nFor example, an image `Generator` could merge the `text` from the input blocks and use it to generate an image `Block`.\n\nIn addition to the input blocks and instance configuration, Generators can also receive arbitrary key/value runtime parameters. These are present in `request.data.options`.\n\nSee [the DALL-E plugin (opens in a new tab)](https://github.com/steamship-plugins/dall-e) for a working example of a text to image `Generator`."
},
{
  "url": "https://docs.steamship.com/plugins/developing/blockifiers",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing/blockifiers",
    "loadedTime": "2023-08-17T22:16:18.610Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing/blockifiers",
    "title": "Developing Blockifiers – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Developing Blockifiers\nTo develop a blockifier, first follow the instructions in Developing Plugins to create a new plugin project. This will result in a full, working plugin scaffold that you could deploy and use immediately.\nThen, read below details about how to modify that scaffold for your own needs.\nThe Blockifier Contract\nBlockifiers are responsible for transforming raw data into Steamship Block Format. Using our SDK, that means implementing the following method:\nHow to Structure Blocks and Tags\nThe biggest design question you will face when implementing a blockifier is how to structure your blocks and tags.\nAt the platform level, we leave this open-ended on purpose, but we do encourage a few conventions of common convergence.\nSee the Data Model section for a discussion of how to think effectively about blocks and tags.\nSynchronous Example: A Pseudo-Markdown Blockifier\nA trivial implementation of this contract would be a pseudo-Markdown blockifier.\nLet’s say this blockifier assumes the input data is UTF-8, assumes that empty new lines represent paragraph breaks. You could implement such a blockifier with this following code:\nFrom the standpoint of the Steamship Engine, this PretendMarkdownBlockifier now provides a way to transform any bytes claiming to be of this pseudo-markdown type into Steamship Block Format.\nAsynchronous Blockifiers\nSome blockifiers will need to call third-party APIs that are asynchronous. Image-to-text (OCR) and speech-to-text (S2T) are two common examples. When this occurs, you should make your blockifier asynchronous as well.\nSee the Developing Asynchronous Plugins section for details.",
  "markdown": "## Developing Blockifiers\n\nTo develop a blockifier, first follow the instructions in [Developing Plugins](https://docs.steamship.com/plugins/developing/index#developingpluginssec) to create a new plugin project. This will result in a full, working plugin scaffold that you could deploy and use immediately.\n\nThen, read below details about how to modify that scaffold for your own needs.\n\n## The Blockifier Contract[](#the-blockifier-contract)\n\nBlockifiers are responsible for transforming raw data into Steamship Block Format. Using our SDK, that means implementing the following method:\n\n## How to Structure Blocks and Tags[](#how-to-structure-blocks-and-tags)\n\nThe biggest design question you will face when implementing a blockifier is how to structure your blocks and tags.\n\nAt the platform level, we leave this open-ended on purpose, but we do encourage a few conventions of common convergence.\n\nSee the [Data Model](https://docs.steamship.com/data#data-model) section for a discussion of how to think effectively about blocks and tags.\n\n## Synchronous Example: A Pseudo-Markdown Blockifier[](#synchronous-example-a-pseudo-markdown-blockifier)\n\nA trivial implementation of this contract would be a pseudo-Markdown blockifier.\n\nLet’s say this blockifier assumes the input data is UTF-8, assumes that empty new lines represent paragraph breaks. You could implement such a blockifier with this following code:\n\nFrom the standpoint of the Steamship Engine, this `PretendMarkdownBlockifier` now provides a way to transform any bytes claiming to be of this pseudo-markdown type into Steamship Block Format.\n\n## Asynchronous Blockifiers[](#asynchronous-blockifiers)\n\nSome blockifiers will need to call third-party APIs that are asynchronous. Image-to-text (OCR) and speech-to-text (S2T) are two common examples. When this occurs, you should make your blockifier asynchronous as well.\n\nSee the [Developing Asynchronous Plugins](https://docs.steamship.com/plugins/developing/async-plugins#developingasync) section for details."
},
{
  "url": "https://docs.steamship.com/plugins/developing/taggers",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing/taggers",
    "loadedTime": "2023-08-17T22:16:25.634Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing/taggers",
    "title": "Developing Taggers – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Developing Taggers\nWe’re excited for you to do this, but we haven’t documented it yet!\nCome chat with us on Discord (opens in a new tab)",
  "markdown": "## Developing Taggers\n\nWe’re excited for you to do this, but we haven’t documented it yet!\n\n[Come chat with us on Discord (opens in a new tab)](http://steamship.com/discord)"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/question-answering",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/question-answering",
    "loadedTime": "2023-08-17T22:16:33.026Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/question-answering",
    "title": "Question Answering – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Question Answering\nYou can add the ability to answer questions to your agent. Not just from its LLM's background knowledge, but from specific information that you have given the agent access to.\nThis chapter will walk you through some common ways question-answering is added to agents:\nAnswering from a Vector Database\nAnswering from a Fact List\nAnswering from a Google Search\nWhat you can build with this chapter\nTogether with the Learning Chapter, this chapter will let you build:\nAn agent that answers questions about your PDFs or Books\nAn agent that answers questions about your YouTube channel\nAn agent that answers questions about facts you've uploaded via API\nAn agent that remembers specific things for its human users and can answer questions about them later\nYou can combine these skills with personalities to:\nAdopt a socratic tone, acting as a tutor who gives some, but not all, of an answer\nActs like a character from a book, with knowledge from having learned the book\nActs like your favorite podcast host, with the ability to answer questions about specific interviews from having learned the YouTube videos\nActs as a friend who remembers your preferences and brings them up when chatting\nYou can combine these skills with image generation to:\nGenerate imagined pictures from books or PDFs\nFetch and send Google Image Search results relevant to an answer\nLast updated on August 16, 2023",
  "markdown": "## Question Answering\n\nYou can add the ability to **answer questions** to your agent. Not just from its LLM's background knowledge, but from specific information that you have given the agent access to.\n\nThis chapter will walk you through some common ways question-answering is added to agents:\n\n*   [Answering from a Vector Database](https://docs.steamship.com/agent-guidebook/question-answering/qa-from-a-vector-database)\n*   [Answering from a Fact List](https://docs.steamship.com/agent-guidebook/question-answering/qa-from-a-fact-list)\n*   [Answering from a Google Search](https://docs.steamship.com/agent-guidebook/question-answering/qa-from-google-search)\n\n## What you can build with this chapter[](#what-you-can-build-with-this-chapter)\n\nTogether with the [Learning Chapter](https://docs.steamship.com/agent-guidebook/learning), this chapter will let you build:\n\n*   An agent that answers questions about your PDFs or Books\n*   An agent that answers questions about your YouTube channel\n*   An agent that answers questions about facts you've uploaded via API\n*   An agent that remembers specific things for its human users and can answer questions about them later\n\nYou can combine these skills with [personalities](https://docs.steamship.com/agent-guidebook/personality/add-a-personality) to:\n\n*   Adopt a socratic tone, acting as a tutor who gives some, but not all, of an answer\n*   Acts like a character from a book, with knowledge from having learned the book\n*   Acts like your favorite podcast host, with the ability to answer questions about specific interviews from having learned the YouTube videos\n*   Acts as a friend who remembers your preferences and brings them up when chatting\n\nYou can combine these skills with [image generation](https://docs.steamship.com/agent-guidebook/generate-images) to:\n\n*   Generate imagined pictures from books or PDFs\n*   Fetch and send Google Image Search results relevant to an answer\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-a-vector-database",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-a-vector-database",
    "loadedTime": "2023-08-17T22:16:38.063Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-a-vector-database",
    "title": "Answering Questions with a Vector Database – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Answer natural language questions with facts pulled from a vector database\nThe VectorSearchQATool (opens in a new tab) answer questions using information stored in a Vector Database.\nVector Databases\nA Vector Database (aka Embedding Index) is just a way to store and search through natural language content.\nSteamship contains a built-in vector database that's configured to \"just work\" with Agents and Tool. By default it auto-applies OpenAI's embeddings to text ans queries.\nThis tool works out of the box with Steamship's on-demand Vector Database:\nBut you can also provide a few useful optional arguments:\nai_description - Tells your agent how and when to use the tool.\nload_docs_count - Tells your agent how many source documents to load from the Vector DB when answering the question\nFor example, if you want your agent to only use this tool to answer questions about France, you might say:\nFor more configuration options, see the source code (opens in a new tab).\nBuilding an Agent with VectorSearchQATool\nThis tool can be provided to a FunctionsBasedAgent (opens in a new tab) which will decide when to use it based on its ai_description. For example, if the tool's ai_description says the tool is \"used to answer question about historical events\", then the agent will tend to use the tool when the user asks a question that matches that use.\nIn your AgentService, here's how you can provide this tool to a FunctionsBasedAgent (opens in a new tab):\nDeploying an AgentService with VectorSearchQATool\nTo deploy an agent with this tool, just make sure it's properly wrapped in an AgentService wrapper and then follow the normal deployment instructions. You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\nCustomizing the Behavior of VectorSearchQATool\nSteamship tools are just open-source Python. The source for this tool is available here (opens in a new tab). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\nThis particular tool works by creating a prompt that:\nUses Steamship's managed Vector Index to find source documents relevant to the user question\nPlaces those source documents into a prompt that gets combined with the user question\nAsks the LLM to answer the question using the provided source documents\nIf you create an interesting customization of this tool, please consider sending us a pull request on GitHub (opens in a new tab)!\nLast updated on August 16, 2023",
  "markdown": "Answer natural language questions with facts pulled from a vector database\n\nThe [`VectorSearchQATool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/vector_search_qa_tool.py) answer questions using information stored in a Vector Database.\n\nVector Databases\n\nA Vector Database (aka Embedding Index) is just a way to store and search through natural language content.\n\nSteamship contains a built-in vector database that's configured to \"just work\" with Agents and Tool. By default it auto-applies OpenAI's embeddings to text ans queries.\n\nThis tool works out of the box with Steamship's on-demand Vector Database:\n\nBut you can also provide a few useful optional arguments:\n\n*   `ai_description` - Tells your agent how and when to use the tool.\n*   `load_docs_count` - Tells your agent how many source documents to load from the Vector DB when answering the question\n\nFor example, if you want your agent to only use this tool to answer questions about France, you might say:\n\nFor more configuration options, see the [source code (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/vector_search_qa_tool.py).\n\n## Building an Agent with `VectorSearchQATool`[](#building-an-agent-with-vectorsearchqatool)\n\nThis tool can be provided to a [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py) which will decide when to use it based on its `ai_description`. For example, if the tool's `ai_description` says the tool is \"**used to answer question about historical events**\", then the agent will tend to use the tool when the user asks a question that matches that use.\n\nIn your [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py), here's how you can provide this tool to a [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py):\n\n## Deploying an AgentService with `VectorSearchQATool`[](#deploying-an-agentservice-with-vectorsearchqatool)\n\nTo deploy an agent with this tool, just make sure it's properly wrapped in an [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py) wrapper and then follow the normal [deployment instructions](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent). You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\n\n## Customizing the Behavior of `VectorSearchQATool`[](#customizing-the-behavior-of-vectorsearchqatool)\n\nSteamship tools are just open-source Python. The source for this tool is available [here (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/vector_search_qa_tool.py). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\n\nThis particular tool works by creating a prompt that:\n\n1.  Uses Steamship's managed Vector Index to find source documents relevant to the user question\n2.  Places those source documents into a prompt that gets combined with the user question\n3.  Asks the LLM to answer the question using the provided source documents\n\nIf you create an interesting customization of this tool, please consider sending us a [pull request on GitHub (opens in a new tab)](https://github.com/steamship-core/python-client)!\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-a-fact-list",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-a-fact-list",
    "loadedTime": "2023-08-17T22:16:45.023Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-a-fact-list",
    "title": "Answering Questions from a Prompt Database – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "A simple form of question-answering that works with pre-loaded information\nYou can use the PromptDatabaseQATool (opens in a new tab) to help your agent answer questions from a fact list that you provide.\nUsing this tool only requires that you provide two arguments:\nfacts - Lists the facts that your agent will use to answer questions.\nai_description - Tells your agent how and when to use the tool.\nFor example, if you want to give your agent the ability to answer questions about how many subway stations each US city has, you might create the tool as follows:\nBuilding an Agent with PromptDatabaseQATool\nThis tool can be provided to a FunctionsBasedAgent (opens in a new tab) which will decide when to use it based on its ai_description. For example, if the tool's ai_description says the tool is \"used to answer question about the number of subway stations in US cities\", then the agent will tend to use the tool when the user asks a question that matches that use.\nIn your AgentService, here's how you can provide this tool to a FunctionsBasedAgent (opens in a new tab):\nA full, working example can be found at TODO.\nDeploying an AgentService with PromptDatabaseQATool\nTo deploy an agent with this tool, just make sure it's properly wrapped in an AgentService wrapper and then follow the normal deployment instructions. You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\nCustomizing the Behavior of PromptDatabaseQATool\nSteamship tools are just open-source Python. The source for this tool is available here (opens in a new tab). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\nThis particular tool works by creating a prompt that:\nProvides the LLM your list of facts.\nAsks it to answer the user's question by using one of those facts.\nA few ways you might customize it might be:\nAlter the prompt so that it answers questions in a particular way.\nAlter the tool to take JSON facts (such as datbase rows) instead of natural language sentences\nAlter the tool to look up the facts dynamically, e.g. from an API, and then provide them at runtime\nIf you create an interesting customization of this tool, please consider sending us a pull request on GitHub (opens in a new tab)!\nLast updated on August 16, 2023",
  "markdown": "A simple form of question-answering that works with pre-loaded information\n\nYou can use the [`PromptDatabaseQATool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/prompt_database_question_answerer.py) to help your agent answer questions from a fact list that you provide.\n\nUsing this tool only requires that you provide two arguments:\n\n*   `facts` - Lists the facts that your agent will use to answer questions.\n*   `ai_description` - Tells your agent how and when to use the tool.\n\nFor example, if you want to give your agent the ability to answer questions about how many subway stations each US city has, you might create the tool as follows:\n\n## Building an Agent with `PromptDatabaseQATool`[](#building-an-agent-with-promptdatabaseqatool)\n\nThis tool can be provided to a [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py) which will decide when to use it based on its `ai_description`. For example, if the tool's `ai_description` says the tool is \"**used to answer question about the number of subway stations in US cities**\", then the agent will tend to use the tool when the user asks a question that matches that use.\n\nIn your [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py), here's how you can provide this tool to a [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py):\n\nA full, working example can be found at TODO.\n\n## Deploying an AgentService with `PromptDatabaseQATool`[](#deploying-an-agentservice-with-promptdatabaseqatool)\n\nTo deploy an agent with this tool, just make sure it's properly wrapped in an [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py) wrapper and then follow the normal [deployment instructions](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent). You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\n\n## Customizing the Behavior of `PromptDatabaseQATool`[](#customizing-the-behavior-of-promptdatabaseqatool)\n\nSteamship tools are just open-source Python. The source for this tool is available [here (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/question_answering/prompt_database_question_answerer.py). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\n\nThis particular tool works by creating a prompt that:\n\n1.  Provides the LLM your list of facts.\n2.  Asks it to answer the user's question by using one of those facts.\n\nA few ways you might customize it might be:\n\n*   Alter the prompt so that it answers questions in a particular way.\n*   Alter the tool to take JSON facts (such as datbase rows) instead of natural language sentences\n*   Alter the tool to look up the facts dynamically, e.g. from an API, and then provide them at runtime\n\nIf you create an interesting customization of this tool, please consider sending us a [pull request on GitHub (opens in a new tab)](https://github.com/steamship-core/python-client)!\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-google-search",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-google-search",
    "loadedTime": "2023-08-17T22:16:50.755Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/question-answering/qa-from-google-search",
    "title": "Answering Questions with Google Search – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "A simple form of question-answering that works with Google Search\nYou can use the SearchTool (opens in a new tab) to help your agent answer questions from Google Search results.\nUsing this tool only requires that you provide one argument:\nai_description - Tells your agent how and when to use the tool.\nFor example, if you want to give your agent the ability to answer questions about historical events, you might say:\nBuilding an Agent with SearchTool\nThis tool can be provided to a FunctionsBasedAgent (opens in a new tab) which will decide when to use it based on its ai_description. For example, if the tool's ai_description says the tool is \"used to answer question about historical events\", then the agent will tend to use the tool when the user asks a question that matches that use.\nIn your AgentService, here's how you can provide this tool to a FunctionsBasedAgent (opens in a new tab):\nA full, working example can be found at TODO.\nDeploying an AgentService with SearchTool\nTo deploy an agent with this tool, just make sure it's properly wrapped in an AgentService wrapper and then follow the normal deployment instructions. You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\nCustomizing the Behavior of SearchTool\nSteamship tools are just open-source Python. The source for this tool is available here (opens in a new tab). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\nThis particular tool works by creating a prompt that:\nUses Steamship's managed SERP service to ask Google the input question\nReturns that input question to the end-user\nIf you create an interesting customization of this tool, please consider sending us a pull request on GitHub (opens in a new tab)!\nLast updated on August 16, 2023",
  "markdown": "A simple form of question-answering that works with Google Search\n\nYou can use the [`SearchTool` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/search/search.py) to help your agent answer questions from Google Search results.\n\nUsing this tool only requires that you provide one argument:\n\n*   `ai_description` - Tells your agent how and when to use the tool.\n\nFor example, if you want to give your agent the ability to answer questions about historical events, you might say:\n\n## Building an Agent with `SearchTool`[](#building-an-agent-with-searchtool)\n\nThis tool can be provided to a [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py) which will decide when to use it based on its `ai_description`. For example, if the tool's `ai_description` says the tool is \"**used to answer question about historical events**\", then the agent will tend to use the tool when the user asks a question that matches that use.\n\nIn your [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py), here's how you can provide this tool to a [`FunctionsBasedAgent` (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/functional/functions_based.py):\n\nA full, working example can be found at TODO.\n\n## Deploying an AgentService with `SearchTool`[](#deploying-an-agentservice-with-searchtool)\n\nTo deploy an agent with this tool, just make sure it's properly wrapped in an [`AgentService`](https://docs.steamship.com/agent-guidebook/core-concepts/api-py) wrapper and then follow the normal [deployment instructions](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent). You will get a URL that you can visit to create instances of your agent in the cloud and connect to it from the web & chat apps.\n\n## Customizing the Behavior of `SearchTool`[](#customizing-the-behavior-of-searchtool)\n\nSteamship tools are just open-source Python. The source for this tool is available [here (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/tools/search/search.py). You can customize it by copy-pasting the tool into your own project, changing the code, and then using your new version.\n\nThis particular tool works by creating a prompt that:\n\n1.  Uses Steamship's managed SERP service to ask Google the input question\n2.  Returns that input question to the end-user\n\nIf you create an interesting customization of this tool, please consider sending us a [pull request on GitHub (opens in a new tab)](https://github.com/steamship-core/python-client)!\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/add-api-endpoints",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/add-api-endpoints",
    "loadedTime": "2023-08-17T22:16:53.232Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/add-api-endpoints",
    "title": "Add APIs – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Add APIs\nGive your agent extra API endpoints\nYour AgentService can define HTTP API endpoints. These can be useful for loading information into your agent's vector stores, setting configuration dynamically, or performing other operations.\nTo do so, simply use the @post and @get decorators to define paths:\nMore information on defining your own API endpoints is available in the Steamship SDK Docs (opens in a new tab).\nLast updated on August 16, 2023",
  "markdown": "## Add APIs\n\nGive your agent extra API endpoints\n\nYour AgentService can define HTTP API endpoints. These can be useful for loading information into your agent's vector stores, setting configuration dynamically, or performing other operations.\n\nTo do so, simply use the `@post` and `@get` decorators to define paths:\n\nMore information on defining your own API endpoints is available in the [Steamship SDK Docs (opens in a new tab)](https://docs.steamship.com/packages).\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/connect/add-to-slack",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/connect/add-to-slack",
    "loadedTime": "2023-08-17T22:17:01.523Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/connect/add-to-slack",
    "title": "Add your agent to Slack – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "You can add your agent to Slack as a bot\nUse the SlackTransport Mixin (opens in a new tab) to connect your agent to a Slack Bot.\nA full working example is here (opens in a new tab). You can copy and paste this agent into your api.py file or use it as a reference.\nMixins\nA Mixin is just a way to add a bundle of functionality to your AgentService. Mixins can include new API endpoints, async processing pipelines, and webhooks.\nAdding the SlackTransport Mixin\nAdd SlackTransport to the static USED_MIXIN_CLASSES list in your AgentService\nRegister SlackTransport in your AgentService __init__ with \nConnecting your Steamship Agent to Slack\nWith your Steamship agent running in either development or production:\nVisit the /slack_install_link method of your agent instance. This will generate a URL that will initiate Slack's installation process.\nWithin the Slack admin console, complete the installation process.\nWithin the Slack admin console, fetch your Slack API Token\nInvoke the /set_slack_access_token method of your agent instance with the body {\"token\": \"YOUR TOKEN\"}.\nFrom a Slack chatroom, mention your bot by name. It should respond!\nTesting your Slack Connection\nPython SDK Version\nVersion 2.17.18 or later of the Steamship SDK is required for this feature.\nTo use this version, update your `requirements.txt` file and then run `pip install -r requirements.txt`\nYou do not need to deploy your agent to test the Slack connection -- you can test with Slack directly from your local machine.\nRun ship run local to run a local copy of your Agent with the provided configuration.\nIt will automatically create a public URL using Ngrok that enables it to receive Slack notifications. Then follow the instructions above as if it were running in production.\nNote that you will have to repeat the entire Slack installation process every time you stop your development server to update your agent's code. For this reason, we recommend testing your agent via the REPL, not Slack and then only testing against Slack just prior to final deployment. There is no need to use Slack in your Agent development loop.\nUsing your Slack Connection in Production\nAfter deploying, when you create an instance from the web just follow the instructions above.\nLast updated on August 16, 2023",
  "markdown": "You can add your agent to Slack as a bot\n\nUse the [`SlackTransport` Mixin (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/mixins/transports/slack.py) to connect your agent to a Slack Bot.\n\n**[A full working example is here (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/slack_bot.py)**. You can copy and paste this agent into your `api.py` file or use it as a reference.\n\nMixins\n\nA **Mixin** is just a way to add a bundle of functionality to your `AgentService`. Mixins can include new API endpoints, async processing pipelines, and webhooks.\n\n## Adding the `SlackTransport` Mixin[](#adding-the-slacktransport-mixin)\n\n1.  Add `SlackTransport` to the static `USED_MIXIN_CLASSES` list in your AgentService\n2.  Register `SlackTransport` in your AgentService `__init__` with\n\n## Connecting your Steamship Agent to Slack[](#connecting-your-steamship-agent-to-slack)\n\nWith your Steamship agent running in either development or production:\n\n1.  Visit the `/slack_install_link` method of your agent instance. This will generate a URL that will initiate Slack's installation process.\n2.  Within the Slack admin console, complete the installation process.\n3.  Within the Slack admin console, fetch your Slack API Token\n4.  Invoke the `/set_slack_access_token` method of your agent instance with the body `{\"token\": \"YOUR TOKEN\"}`.\n5.  From a Slack chatroom, mention your bot by name. It should respond!\n\n## Testing your Slack Connection[](#testing-your-slack-connection)\n\nPython SDK Version\n\nVersion 2.17.18 or later of the Steamship SDK is required for this feature.\n\nTo use this version, update your \\`requirements.txt\\` file and then run \\`pip install -r requirements.txt\\`\n\nYou do not need to deploy your agent to test the Slack connection -- you can test with Slack directly from your local machine.\n\nRun `ship run local` to run a local copy of your Agent with the provided configuration.\n\nIt will automatically create a public URL using Ngrok that enables it to receive Slack notifications. Then follow the instructions above as if it were running in production.\n\nNote that you will have to repeat the entire Slack installation process every time you stop your development server to update your agent's code. For this reason, we recommend **testing your agent via the REPL, not Slack** and then only testing against Slack just prior to final deployment. There is no need to use Slack in your Agent development loop.\n\n## Using your Slack Connection in Production[](#using-your-slack-connection-in-production)\n\nAfter [deploying](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent), when you [create an instance from the web](https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent) just follow the instructions above.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/connect/add-to-telegram",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/connect/add-to-telegram",
    "loadedTime": "2023-08-17T22:17:02.456Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/connect/add-to-telegram",
    "title": "Add your agent to Telegram – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "You can add your agent to Telegram as a bot\nUse the TelegramTransport Mixin (opens in a new tab) to connect your agent to a Telegram Bot.\nA full working example is here (opens in a new tab). You can copy and paste this agent into your api.py file or use it as a reference.\nMixins\nA Mixin is just a way to add a bundle of functionality to your AgentService. Mixins can include new API endpoints, async processing pipelines, and webhooks.\nAdding the TelegramTransport Mixin\nAdd TelegramTransport to the static USED_MIXIN_CLASSES list in your AgentService\nAdd a bot_token configuration parameter to your agent: \nRegister TelegramTransport in your AgentService __init__ with \nGetting a Telegram Bot Token\nTo get a Telegram Bot Token:\nContact the @BotFather (opens in a new tab) on Telegram\nRun the /newbot command\nName your bot\nCopy the bot token that you are given\nTesting your Telegram Connection\nPython SDK Version\nVersion 2.17.18 or later of the Steamship SDK is required for this feature.\nTo use this version, update your `requirements.txt` file and then run `pip install -r requirements.txt`\nYou do not need to deploy your agent to test the telegram connection -- you can test with Telegram directly from your local machine. Just follow these steps:\nCreate a config.json file that contains the configuration of your AgentService. This will now include a required bot_token field that contains your Telegram bot token.\nRun ship run local -c config.json to run a local copy of your Agent with the provided configuration.\nIt will automatically connect to Telegram using a public NGROK URL.\nUsing your Telegram Connection in Production\nAfter deploying, when you create an instance from the web just select Optional Configuration from the instance creation screen.\nThen enter the telegram_token.\nYou can find instructions for how to generate a Telegram bot key from the field in the UI.\nLast updated on August 16, 2023",
  "markdown": "You can add your agent to Telegram as a bot\n\nUse the [`TelegramTransport` Mixin (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/mixins/transports/telegram.py) to connect your agent to a Telegram Bot.\n\n**[A full working example is here (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/telegram_bot.py)**. You can copy and paste this agent into your `api.py` file or use it as a reference.\n\nMixins\n\nA **Mixin** is just a way to add a bundle of functionality to your `AgentService`. Mixins can include new API endpoints, async processing pipelines, and webhooks.\n\n## Adding the `TelegramTransport` Mixin[](#adding-the-telegramtransport-mixin)\n\n1.  Add `TelegramTransport` to the static `USED_MIXIN_CLASSES` list in your AgentService\n2.  Add a `bot_token` configuration parameter to your agent:\n3.  Register `TelegramTransport` in your AgentService `__init__` with\n\n## Getting a Telegram Bot Token[](#getting-a-telegram-bot-token)\n\nTo get a Telegram Bot Token:\n\n1.  Contact the [@BotFather (opens in a new tab)](https://t.me/botfather) on Telegram\n2.  Run the `/newbot` command\n3.  Name your bot\n4.  Copy the bot token that you are given\n\n## Testing your Telegram Connection[](#testing-your-telegram-connection)\n\nPython SDK Version\n\nVersion 2.17.18 or later of the Steamship SDK is required for this feature.\n\nTo use this version, update your \\`requirements.txt\\` file and then run \\`pip install -r requirements.txt\\`\n\nYou do not need to deploy your agent to test the telegram connection -- you can test with Telegram directly from your local machine. Just follow these steps:\n\n1.  Create a `config.json` file that contains the configuration of your AgentService. This will now include a required `bot_token` field that contains your Telegram bot token.\n2.  Run `ship run local -c config.json` to run a local copy of your Agent with the provided configuration.\n\nIt will automatically connect to Telegram using a public NGROK URL.\n\n## Using your Telegram Connection in Production[](#using-your-telegram-connection-in-production)\n\nAfter [deploying](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent), when you [create an instance from the web](https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent) just select **Optional Configuration** from the instance creation screen.\n\n![](https://docs.steamship.com/images/hackathon/package-create-optional.png)\n\nThen enter the **telegram\\_token**.\n\nYou can find instructions for how to generate a Telegram bot key from the field in the UI.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/connect/use-on-the-web",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/connect/use-on-the-web",
    "loadedTime": "2023-08-17T22:17:11.455Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/connect/use-on-the-web",
    "title": "Embed your agent on a web site – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "You can embed your agent on other sites with an IFRAME\nUse the SteamshipWidgetTransport Mixin (opens in a new tab) to give your agent a web-based widget you can interact with.\nA full working example is here (opens in a new tab). You can copy and paste this agent into your api.py file or use it as a reference.\nMixins\nA Mixin is just a way to add a bundle of functionality to your AgentService. Mixins can include new API endpoints, async processing pipelines, and webhooks.\nAdding the SteamshipWidgetTransport Mixin\nAdd SteamshipWidgetTransport to the static USED_MIXIN_CLASSES list in your AgentService\nRegister SteamshipWidgetTransport in your AgentService __init__ with \nUsing the Web Widget\nAfter deploying, just create an instance from the web.\nThat will take you to a web page that contains a chat window as well as other management tools for your agent.\nEmbedding the Web Widget\nAt the top-right, you will find an Embed widget with instructions for placing this chat window on other web pages.\nLast updated on August 16, 2023",
  "markdown": "You can embed your agent on other sites with an IFRAME\n\nUse the [`SteamshipWidgetTransport` Mixin (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/src/steamship/agents/mixins/transports/steamship_widget.py) to give your agent a web-based widget you can interact with.\n\n**[A full working example is here (opens in a new tab)](https://github.com/steamship-core/multimodal-agent-starter/blob/main/src/example_agents/annoyed_robot.py)**. You can copy and paste this agent into your `api.py` file or use it as a reference.\n\nMixins\n\nA **Mixin** is just a way to add a bundle of functionality to your `AgentService`. Mixins can include new API endpoints, async processing pipelines, and webhooks.\n\n## Adding the `SteamshipWidgetTransport` Mixin[](#adding-the-steamshipwidgettransport-mixin)\n\n1.  Add `SteamshipWidgetTransport` to the static `USED_MIXIN_CLASSES` list in your AgentService\n2.  Register `SteamshipWidgetTransport` in your AgentService `__init__` with\n\n## Using the Web Widget[](#using-the-web-widget)\n\nAfter [deploying](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent), just [create an instance from the web](https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent).\n\nThat will take you to a web page that contains a chat window as well as other management tools for your agent.\n\n## Embedding the Web Widget[](#embedding-the-web-widget)\n\nAt the top-right, you will find an **Embed** widget with instructions for placing this chat window on other web pages.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/connect/use-as-api",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/connect/use-as-api",
    "loadedTime": "2023-08-17T22:17:13.460Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/connect/use-as-api",
    "title": "Use your agent as an API – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Each agent instance provides an HTTP API\nEvery agent instance automatically provides an HTTP API.\nAfter deploying, just create an instance from the web.\nThat will take you to a web page that contains a chat window as well as other management tools for your agent.\nTo view your agents's API endpoints:\nSelect the Manage tab at the top right.\nSelect the API tab at left.\nLast updated on August 16, 2023",
  "markdown": "Each agent instance provides an HTTP API\n\nEvery agent instance automatically provides an HTTP API.\n\nAfter [deploying](https://docs.steamship.com/agent-guidebook/getting-started/deploy-your-agent), just [create an instance from the web](https://docs.steamship.com/agent-guidebook/getting-started/share-your-agent).\n\nThat will take you to a web page that contains a chat window as well as other management tools for your agent.\n\nTo view your agents's API endpoints:\n\n*   Select the **Manage** tab at the top right.\n*   Select the **API** tab at left.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/next-steps/sdk-docs",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/next-steps/sdk-docs",
    "loadedTime": "2023-08-17T22:17:15.628Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/next-steps/sdk-docs",
    "title": "SDK Documentation – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "SDK Documentation\nThis guide is just the start -- Full SDK documentation is available at https://docs.steamship.com/ (opens in a new tab)\nLast updated on August 16, 2023",
  "markdown": "## SDK Documentation\n\nThis guide is just the start -- Full SDK documentation is available at [https://docs.steamship.com/ (opens in a new tab)](https://docs.steamship.com/)\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/agent-guidebook/next-steps/community",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/next-steps/community",
    "loadedTime": "2023-08-17T22:17:17.516Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/next-steps/community",
    "title": "Community – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Community\nJoin fellow builders on Twitter and the Steamship Discord.\nWhen you build something great, we'd love to know!\nJoin our Discord (opens in a new tab), where folks hang out and hack on Agents\nShare what you build on Twitter and tag us (opens in a new tab) so we can cheer you on\nContribute agents ideas or resources to this tutorial to make it better\nLast updated on August 16, 2023",
  "markdown": "## Community\n\nJoin fellow builders on Twitter and the Steamship Discord.\n\nWhen you build something great, we'd love to know!\n\n*   [Join our Discord (opens in a new tab)](https://steamship.com/discord), where folks hang out and hack on Agents\n*   Share what you build on Twitter and [tag us (opens in a new tab)](https://twitter.com/GetSteamship) so we can cheer you on\n*   Contribute agents ideas or resources to this tutorial to make it better\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/configuration",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/configuration",
    "loadedTime": "2023-08-17T22:17:25.398Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/configuration",
    "title": "Configuration – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Configuration\nSteamship, and the packages you build with it, can be used via our HTTP API, Python Client, or CLI.\nAuthentication\nClient Libraries\nCLI\nHTTP API",
  "markdown": "## Configuration\n\nSteamship, and the packages you build with it, can be used via our HTTP API, Python Client, or CLI.\n\n*   [Authentication](https://docs.steamship.com/configuration/authentication)\n*   [Client Libraries](https://docs.steamship.com/configuration/clients)\n*   [CLI](https://docs.steamship.com/configuration/cli)\n*   [HTTP API](https://docs.steamship.com/http)"
},
{
  "url": "https://docs.steamship.com/configuration/authentication",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/configuration/authentication",
    "loadedTime": "2023-08-17T22:17:27.628Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/configuration/authentication",
    "title": "Authentication – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Authentication\nSteamship uses API Keys to authenticate our CLI and client libraries. These keys can be stored in a configuration file, in environment variables, or passed manually to our client libraries.\nSteamship Configuration File\nLogging in with the Steamship CLI creates a configuration file at ~/.steamship.json. This file contains your API Key, and our client libraries will auto-load information from this file when available.\nIt looks like this:\nUsing Multiple Profiles\nThe Steamship configuration file supports multiple profiles. To create multiple profiles, use the following structure:\nUse a profile from the command line by setting the STEAMSHIP_PROFILE environment variable.\nUse a profile from the Python Client by passing it into the Steamship constructor:\nEnvironment Variables\nIf the STEAMSHIP_KEY environment variable is set, our client libraries will prioritize it over your steamship.json file.",
  "markdown": "## Authentication\n\nSteamship uses API Keys to authenticate our CLI and client libraries. These keys can be stored in a configuration file, in environment variables, or passed manually to our client libraries.\n\n## Steamship Configuration File[](#steamship-configuration-file)\n\nLogging in with the [Steamship CLI](https://docs.steamship.com/configuration/cli#cli) creates a configuration file at `~/.steamship.json`. This file contains your API Key, and our client libraries will auto-load information from this file when available.\n\nIt looks like this:\n\n## Using Multiple Profiles[](#using-multiple-profiles)\n\nThe Steamship configuration file supports multiple profiles. To create multiple profiles, use the following structure:\n\nUse a profile from the command line by setting the `STEAMSHIP_PROFILE` environment variable.\n\nUse a profile from the Python Client by passing it into the `Steamship` constructor:\n\n## Environment Variables[](#environment-variables)\n\nIf the `STEAMSHIP_KEY` environment variable is set, our client libraries will prioritize it over your `steamship.json` file."
},
{
  "url": "https://docs.steamship.com/configuration/clients",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/configuration/clients",
    "loadedTime": "2023-08-17T22:17:34.230Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/configuration/clients",
    "title": "Steamship Client Libraries – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Steamship Client Libraries\nPython Client\nTo install the Steamship Python Client, run:\nThen, import and use Steamship with:\nMost of this documentation site is Python-centric and will assume operation via that client.\nTypescript Client\nWARNING\nThe Typescript client is alpha quality.\nTo install the Steamship Typescript Client, run:\nThen, import and use Steamship with:\nMost of this documentation site is Python-centric and will assume operation via that client.",
  "markdown": "## Steamship Client Libraries\n\n## Python Client[](#python-client)\n\nTo install the Steamship Python Client, run:\n\nThen, import and use Steamship with:\n\nMost of this documentation site is Python-centric and will assume operation via that client.\n\n## Typescript Client[](#typescript-client)\n\n#### WARNING[](#warning)\n\nThe Typescript client is alpha quality.\n\nTo install the Steamship Typescript Client, run:\n\nThen, import and use Steamship with:\n\nMost of this documentation site is Python-centric and will assume operation via that client."
},
{
  "url": "https://docs.steamship.com/configuration/cli",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/configuration/cli",
    "loadedTime": "2023-08-17T22:17:36.437Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/configuration/cli",
    "title": "Steamship CLI – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Steamship CLI\nTo install the Steamship SDK and CLI, run (preferably in a virtual environment):\nThis will provide access to the ship command in your shell. It can be used for login and deployment\nTry it out by typing ship login or see options with ship --help.",
  "markdown": "## Steamship CLI\n\nTo install the Steamship SDK and CLI, run (preferably in a virtual environment):\n\nThis will provide access to the `ship` command in your shell. It can be used for login and deployment\n\nTry it out by typing `ship login` or see options with `ship --help`."
},
{
  "url": "https://docs.steamship.com/configuration/http",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/configuration/http",
    "loadedTime": "2023-08-17T22:17:44.143Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/configuration/http",
    "title": "HTTP Operation – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "HTTP Operation\nOur client library is designed to broker all communication to Steamship, but our API supports HTTP operation if desired.\nRequests\nIn general, most API requests consist of an HTTP POST with a JSON payload. For such requests, make sure to set the Content-Type header as follows:\nAlso include your API Key as a Bearer token in the header:\nOptional Headers\nAll API requests take place within the context of a Workspace. If you do not specify the workspace, you are using your default workspace.\nTo set the workspace in an API request, use the following header:\nEngine Response Format\nAll Steamship Engine API responses use the following JSON format over the wire. Each field is optional.\nIn this response structure:\ndata contains the operation results, if available\ntask contains the operation progress, if it is still underway or if it has failed.\nCreating a Package Instance\nSteamship packages are listed in our package directory (opens in a new tab). To create one, sent an HTTP post with the following information:\nIn the above POST request, the packageHandle references the package you’d like to use. The handle creates a private stack for data and infrastructure that package depends on.\nThe result will include a JSON object containing information about your new instance.\nInvoking a Package Method\nOnce you have a package instance, you can invoke a methods on it over HTTP. Get the workspace handle and package instance handle from the response of your instance creation request.",
  "markdown": "## HTTP Operation\n\nOur client library is designed to broker all communication to Steamship, but our API supports HTTP operation if desired.\n\n## Requests[](#requests)\n\nIn general, most API requests consist of an HTTP `POST` with a JSON payload. For such requests, make sure to set the `Content-Type` header as follows:\n\nAlso include your API Key as a Bearer token in the header:\n\n### Optional Headers[](#optional-headers)\n\nAll API requests take place within the context of a [Workspace](https://docs.steamship.com/data/workspaces#workspaces). If you do not specify the workspace, you are using your `default` workspace.\n\nTo set the workspace in an API request, use the following header:\n\n### Engine Response Format[](#engine-response-format)\n\nAll Steamship Engine API responses use the following JSON format over the wire. Each field is optional.\n\nIn this response structure:\n\n*   `data` contains the operation results, if available\n*   `task` contains the operation progress, if it is still underway or if it has failed.\n\n## Creating a Package Instance[](#creating-a-package-instance)\n\nSteamship packages are listed in our [package directory (opens in a new tab)](https://www.steamship.com/packages). To create one, sent an HTTP post with the following information:\n\nIn the above POST request, the **packageHandle** references the package you’d like to use. The **handle** creates a private stack for data and infrastructure that package depends on.\n\nThe result will include a JSON object containing information about your new instance.\n\n## Invoking a Package Method[](#invoking-a-package-method)\n\nOnce you have a package instance, you can invoke a methods on it over HTTP. Get the workspace handle and package instance handle from the response of your instance creation request."
},
{
  "url": "https://docs.steamship.com/agents",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agents",
    "loadedTime": "2023-08-17T22:17:51.610Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agents",
    "title": "Agents – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Agents\nSteamship is made for building, scaling, and managing Agents in the cloud.\nA full tutorial for getting started with Agents is available here:\nAgent Guidebook (opens in a new tab)\nIf you’re new to building Agents, we highly recommend following the above tutorial.\nThe following are pointers to the key Agent classes for getting started:\nAgent\nThe basic interface for Agents is:\nsteamship.agents.schema.agent.Agent\nImplementations of this class make decisions about what Action will be taken next in an Agent workflow.\nAgentContext\nThe Agent Context contains data about the context in which the Agent is running, including its ChatHistory.\nTool\nA Tool is something that an Agent may make use of in service of achieving its goal. To support multi-modal data, Tools in Steamship take an AgentContext as input and produce Blocks as output.\nMany tools are available pre-packaged within the SDK:\nsteamship.agents.tools.search.search.SearchTool\nsteamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool (via ElevenLabs)\nsteamship.agents.tools.image_generation.dalle.DalleTool\nsteamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool\n… and more in the steamship.agents.tools package.\nAgentService\nsteamship.agents.service.agent_service.AgentService\nThe AgentService class provides a convenient way to deploy an Agent as a Steamship Package.\nAll steamship.agents.service.agent_service.AgentService instances contain a prompt(self, prompt: str, **kwargs) -> List[Block] method from thier base class. This method is the core chat loop: it accepts an inbound str in the form of a user message, and it produces a list of multimodal Block objects that contain the response.\nLast updated on August 16, 2023",
  "markdown": "## Agents\n\nSteamship is made for building, scaling, and managing Agents in the cloud.\n\nA full tutorial for getting started with Agents is available here:\n\n[Agent Guidebook (opens in a new tab)](https://docs.steamship.com/agent-guidebook)\n\nIf you’re new to building Agents, we highly recommend following the above tutorial.\n\nThe following are pointers to the key Agent classes for getting started:\n\n## Agent[](#agent)\n\nThe basic interface for Agents is:\n\n[`steamship.agents.schema.agent.Agent`](https://docs.steamship.com/api-reference/steamship.agents.schema#steamship.agents.schema.agent.Agent)\n\nImplementations of this class make decisions about what Action will be taken next in an Agent workflow.\n\n## AgentContext[](#agentcontext)\n\nThe Agent Context contains data about the context in which the Agent is running, including its ChatHistory.\n\n## Tool[](#tool)\n\nA Tool is something that an Agent may make use of in service of achieving its goal. To support multi-modal data, Tools in Steamship take an AgentContext as input and produce [Blocks](https://docs.steamship.com/data/blocks#blocks) as output.\n\nMany tools are available pre-packaged within the SDK:\n\n*   [`steamship.agents.tools.search.search.SearchTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.search#steamship.agents.tools.search.search.SearchTool)\n*   [`steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.speech_generation#steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool) (via ElevenLabs)\n*   [`steamship.agents.tools.image_generation.dalle.DalleTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.image_generation#steamship.agents.tools.image_generation.dalle.DalleTool)\n*   [`steamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.image_generation#steamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool)\n*   … and more in the `steamship.agents.tools` package.\n\n## AgentService[](#agentservice)\n\n[`steamship.agents.service.agent_service.AgentService`](https://docs.steamship.com/api-reference/steamship.agents.service#steamship.agents.service.agent_service.AgentService)\n\nThe AgentService class provides a convenient way to deploy an Agent as a Steamship [Package](https://docs.steamship.com/packages#packages).\n\nAll [`steamship.agents.service.agent_service.AgentService`](https://docs.steamship.com/api-reference/steamship.agents.service#steamship.agents.service.agent_service.AgentService) instances contain a `prompt(self, prompt: str, **kwargs) -> List[Block]` method from thier base class. This method is the core `chat` loop: it accepts an inbound `str` in the form of a user message, and it produces a list of multimodal `Block` objects that contain the response.\n\nLast updated on August 16, 2023"
},
{
  "url": "https://docs.steamship.com/packages",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages",
    "loadedTime": "2023-08-17T22:17:53.117Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages",
    "title": "Packages – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Packages\nSteamship Packages (opens in a new tab) are cloud-hosted software libraries you can use in any programming environment.\nThink of them as regular software libraries with an upgrade:\nPackages bundle a full-lifecycle AI stack. Everything necessary to go from demo to production in minutes: code, models, data, and infrastructure.\nPackages auto-manage their own infrastructure. If a package depends on an embedding index or a fine-tuned model, you don’t have to care.\nPackages are stateful. You can create as many instances as you want: one per user, one per chat room, one per document folder. They remember their context.\nThat gives you the ability to use the full breadth of modern AI with a single import statement.\nImport and use full-lifecycle language-AI packages in your Python, Javascript, and HTTP projects.\nBuild and deploy your own packages with our low-code framework. Works with your favorite AI services.\nCode snippets for converting content, tagging entities, searching content, and more.",
  "markdown": "## Packages\n\n[Steamship Packages (opens in a new tab)](https://www.steamship.com/packages) are cloud-hosted software libraries you can use in any programming environment.\n\nThink of them as regular software libraries with an upgrade:\n\n*   **Packages bundle a full-lifecycle AI stack.** Everything necessary to go from demo to production in minutes: code, models, data, and infrastructure.\n*   **Packages auto-manage their own infrastructure.** If a package depends on an embedding index or a fine-tuned model, you don’t have to care.\n*   **Packages are stateful.** You can create as many instances as you want: one per user, one per chat room, one per document folder. They remember their context.\n\nThat gives you the ability to use the full breadth of modern AI with a single `import` statement.\n\nImport and use full-lifecycle language-AI packages in your Python, Javascript, and HTTP projects.\n\nBuild and deploy your own packages with our low-code framework. Works with your favorite AI services.\n\nCode snippets for converting content, tagging entities, searching content, and more."
},
{
  "url": "https://docs.steamship.com/packages/using",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/using",
    "loadedTime": "2023-08-17T22:18:01.070Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/using",
    "title": "https://{you}.steamship.run/my-handle/my-handle/ – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Using Packages\nNOTE\nBefore you begin, make sure you’ve set up your authentication\nAnd installed a Steamship client library with:\nSteamship packages are listed in our package directory (opens in a new tab). To use one, instantiate it with Steamship.use, giving it a package handle and an instance handle.\nThe package handle references the package you’d like to use. The instance handle creates a private stack for data and infrastructure that package depends on.\nOnce you have a package instance, invoke a method by calling invoke. The method name is the first argument. All other arguments are passed as keyword args.\nThe method will run in the cloud, and you’ll get back the response as a Python object. Packages can also be used as HTTP APIs.\nPackage FAQ\nWhat is a Package Handle?\nWhat is an Instance Handle?\nDo I need an Instance Handle?\nCan I reload the same instance?\nHow do I specify a package version?\nHow do I provide package configuration?\nHow do I know what methods to call?\nCan I access my package over HTTP?\nWhat is a Package Handle?\nA Package Handle identifies a Steamship package, in the same way that NPM and PyPI packages have identifiers.\nPackage handles always composed of lowercase letters and dashes.\nWhat is an Instance Handle?\nAn Instance Handle identifies a particular instance of the package.\nSteamship packages manage their own configuration, data, endpoints, and infrastructure in the cloud. Your instance handle of a package creates a scope, private to you, to contain that.\nDo I need an Instance Handle?\nIf you do not provide an Instance Handle, the default value will be identical to the Package Handle.\nThe above code loads three copies of the same instance, bound to the same data and infrastructure. It is equivalent to having run this code:\nCan I reload the same instance?\nYou can reload a package instance by providing the same instance handle again. All of the correct configuration, data, and models will be bound to the instance.\nIn the below code,\ninstance1 and instance1_copy are operating upon the same data and infrastructure.\ninstance2 is operating upon a different set of data and infrastructure\nHow do I specify a package version?\nWhen instantiating a package, you can pin it to a particular version with the version keyword argument.\nIf you do not specify a version, the last deployed version of that package will be used.\nHow do I provide package configuration?\nWhen instantiating a package, you can provide configuration with the config keyword argument.\nTo learn what configuration is required, consult the README.md file in the package’s GitHub repository.\nHow do I know what methods to call?\nTo learn what methods are available on a package, consult the README.md file in the package’s GitHub repository.\nWe are working on a more streamlined way to generate and publish per-package documentation.\nIn the meantime, you can also explore a package’s methods from your REPL with:\nCan I access my package over HTTP?\nEvery instance of your package exposes an HTTP API that you can call. The Instance Base URL is:\nIn that URL:\n{userHandle} is your user handle (not the handle of the person who create the package)\n{workspaceHandle} is the handle of the workspace that package is running in. It is usually equal to the instanceHandle\n{instanceHandle} is the name you gave your instance\nYou can always find out your Instance Base URL via the Python Client with the PackageInstance.invocation_url property:\nPrints:\nhttps://{you}.steamship.run/my-handle/my-handle/\nCalling this URL is simple with a few conventions:\nSet the Content-Type header to application/json\nSet the Authorization header to Bearer {api-key}, replacing {api-key} with your API Key\nDefault to HTTP POST if you’re not sure which verb to use. The package documentation should specify.\nAdd the method name you wish to invoke as the path.\nAdd the arguments as a JSON-encoded POST Body\nFor example, the HTTP equivalent of:\nwould be:\n{\"name\": \"Beautiful\"}",
  "markdown": "## Using Packages\n\n#### NOTE[](#note)\n\nBefore you begin, make sure you’ve set up your authentication\n\nAnd installed a Steamship client library with:\n\nSteamship packages are listed in our [package directory (opens in a new tab)](https://www.steamship.com/packages). To use one, instantiate it with `Steamship.use`, giving it a package handle and an instance handle.\n\nThe **package handle** references the package you’d like to use. The **instance handle** creates a private stack for data and infrastructure that package depends on.\n\nOnce you have a package instance, invoke a method by calling `invoke`. The method name is the first argument. All other arguments are passed as keyword args.\n\nThe method will run in the cloud, and you’ll get back the response as a Python object. Packages can also be used as [HTTP APIs](https://docs.steamship.com/configuration/http#http).\n\n## Package FAQ[](#package-faq)\n\n*   [What is a Package Handle?](https://docs.steamship.com/packages/using#what-is-a-package-handle)\n*   [What is an Instance Handle?](https://docs.steamship.com/packages/using#what-is-an-instance-handle)\n*   [Do I need an Instance Handle?](https://docs.steamship.com/packages/using#do-i-need-an-instance-handle)\n*   [Can I reload the same instance?](https://docs.steamship.com/packages/using#can-i-reload-the-same-instance)\n*   [How do I specify a package version?](https://docs.steamship.com/packages/using#how-do-i-specify-a-package-version)\n*   [How do I provide package configuration?](https://docs.steamship.com/packages/using#how-do-i-provide-package-configuration)\n*   [How do I know what methods to call?](https://docs.steamship.com/packages/using#how-do-i-know-what-methods-to-call)\n*   [Can I access my package over HTTP?](https://docs.steamship.com/packages/using#can-i-access-my-package-over-http)\n\n### What is a Package Handle?[](#what-is-a-package-handle)\n\nA **Package Handle** identifies a Steamship package, in the same way that NPM and PyPI packages have identifiers.\n\nPackage handles always composed of lowercase letters and dashes.\n\n### What is an Instance Handle?[](#what-is-an-instance-handle)\n\nAn **Instance Handle** identifies a particular instance of the package.\n\nSteamship packages manage their own configuration, data, endpoints, and infrastructure in the cloud. Your instance handle of a package creates a scope, private to you, to contain that.\n\n### Do I need an Instance Handle?[](#do-i-need-an-instance-handle)\n\nIf you do not provide an **Instance Handle**, the default value will be identical to the **Package Handle**.\n\nThe above code loads three copies of the **same instance**, bound to the **same data and infrastructure**. It is equivalent to having run this code:\n\n### Can I reload the same instance?[](#can-i-reload-the-same-instance)\n\nYou can reload a package instance by providing the same instance handle again. All of the correct configuration, data, and models will be bound to the instance.\n\nIn the below code,\n\n*   `instance1` and `instance1_copy` are operating upon the same data and infrastructure.\n*   `instance2` is operating upon a different set of data and infrastructure\n\n### How do I specify a package version?[](#how-do-i-specify-a-package-version)\n\nWhen instantiating a package, you can pin it to a particular version with the `version` keyword argument.\n\nIf you do not specify a version, the last deployed version of that package will be used.\n\n### How do I provide package configuration?[](#how-do-i-provide-package-configuration)\n\nWhen instantiating a package, you can provide configuration with the `config` keyword argument.\n\nTo learn what configuration is required, consult the README.md file in the package’s GitHub repository.\n\n### How do I know what methods to call?[](#how-do-i-know-what-methods-to-call)\n\nTo learn what methods are available on a package, consult the README.md file in the package’s GitHub repository.\n\nWe are working on a more streamlined way to generate and publish per-package documentation.\n\nIn the meantime, you can also explore a package’s methods from your REPL with:\n\n### Can I access my package over HTTP?[](#can-i-access-my-package-over-http)\n\nEvery instance of your package exposes an HTTP API that you can call. The **Instance Base URL** is:\n\nIn that URL:\n\n*   `{userHandle}` is your user handle (not the handle of the person who create the package)\n*   `{workspaceHandle}` is the handle of the workspace that package is running in. It is usually equal to the `instanceHandle`\n*   `{instanceHandle}` is the name you gave your instance\n\nYou can always find out your **Instance Base URL** via the Python Client with the `PackageInstance.invocation_url` property:\n\n> ## Prints:\n> \n> ## https://{you}.steamship.run/my-handle/my-handle/\n\nCalling this URL is simple with a few conventions:\n\n*   Set the `Content-Type` header to `application/json`\n*   Set the `Authorization` header to `Bearer {api-key}`, replacing `{api-key}` with your API Key\n*   Default to `HTTP POST` if you’re not sure which verb to use. The package documentation should specify.\n*   Add the method name you wish to invoke as the path.\n*   Add the arguments as a JSON-encoded POST Body\n\nFor example, the HTTP equivalent of:\n\nwould be:\n\n> {\"name\": \"Beautiful\"}"
},
{
  "url": "https://docs.steamship.com/packages/developing",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/developing",
    "loadedTime": "2023-08-17T22:18:02.572Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/developing",
    "title": "Developing Packages – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Developing Packages\nSteamship is the fastest way to build and deploy a full-stack language AI package.\nHere’s how to go from zero-to-deployed in about 60 seconds. Then you can customize your new package from there.\nFirst, clone our empty package repository and install requirements.txt:\nThen deploy the package to the cloud:\nNow let’s create an instance and invoke it from Python. After running pip install steamship, run the following code, replacing your package and instance handles:\nThat’s it! You’ve just created a new package, deployed it, and invoked it from two different environments.\nNow the real fun begins…\nCustomizing your Package\nSteamship packages run on top of a cloud stack designed for Language AI. You can import files, parse and tag them, query over them, return custom results – and far more.\nUnderstand the basic project structure that defines a package and how to develop in it.\nA cookbook of common operations you may want to perform, such as parsing files, transcribing audio, and querying results.\nLower-level details on Steamship development, such as environment setup, configuration, testing, and secret management.",
  "markdown": "## Developing Packages\n\nSteamship is the fastest way to build and deploy a full-stack language AI package.\n\nHere’s how to go from zero-to-deployed in about 60 seconds. Then you can customize your new package from there.\n\nFirst, clone our empty package repository and install requirements.txt:\n\nThen deploy the package to the cloud:\n\nNow let’s create an instance and invoke it from Python. After running `pip install steamship`, run the following code, replacing your package and instance handles:\n\nThat’s it! You’ve just created a new package, deployed it, and invoked it from two different environments.\n\nNow the real fun begins…\n\n## Customizing your Package[](#customizing-your-package)\n\nSteamship packages run on top of a cloud stack designed for Language AI. You can import files, parse and tag them, query over them, return custom results – and far more.\n\nUnderstand the basic project structure that defines a package and how to develop in it.\n\nA cookbook of common operations you may want to perform, such as parsing files, transcribing audio, and querying results.\n\nLower-level details on Steamship development, such as environment setup, configuration, testing, and secret management."
},
{
  "url": "https://docs.steamship.com/api-reference/steamship.data.tags",
  "crawl": {
    "loadedUrl": "https://python-sdk.docs.steamship.com/api/steamship.data.tags#steamship.data.tags.tag.Tag",
    "loadedTime": "2023-08-17T22:19:23.222Z",
    "referrerUrl": "https://docs.steamship.com/data/tags",
    "depth": 2,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://python-sdk.docs.steamship.com/api/steamship.data.tags#steamship.data.tags.tag.Tag",
    "title": "steamship.data.tags package - Steamship Documentation",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": "en"
  },
  "screenshotUrl": null,
  "text": "steamship.data.tags package#\nSubmodules#\nsteamship.data.tags.tag module#\nclass steamship.data.tags.tag.EmbeddingTag(embedding: List[float | int] = None, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nclass steamship.data.tags.tag.EmotionTag(emotion: Emotion, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nclass Emotion(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nANGER = 'anger'# \nCONCERN = 'concern'# \nFEAR = 'fear'# \nHAPPINESS = 'happiness'# \nHUMOR = 'humor'# \nJOY = 'joy'# \nLOVE = 'love'# \nNEGATIVE = 'negative'# \nNEUTRAL = 'neutral'# \nPOSITIVE = 'positive'# \nSADNESS = 'sadness'# \nSCORE = 'score'# \nSERIOUSNESS = 'seriousness'# \nSURPRISE = 'surprise'# \nclass steamship.data.tags.tag.EntityTag(entity_name: str, entity_type: EntityType, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nclass EntityType(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nDATE = 'date'# \nFACILITY = 'facility'# \nGEO_POLITICAL_ENTITY = 'geo-political-entity'# \nLOCATION = 'location'# \nMONEY = 'money'# \nORGANIZATION = 'organization'# \nPERCENT = 'percent'# \nPERSON = 'person'# \nPRODUCT = 'product'# \nTIME = 'time'# \nclass steamship.data.tags.tag.IntentTag(intent: Intent, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nclass Intent(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nARE_YOU_THERE = 'are-you-there'# \nCOMPLAINT = 'complaint'# \nEXPLANATION = 'explanation'# \nPRAISE = 'praise'# \nQUESTION = 'question'# \nREQUEST = 'request'# \nREVISITING_TOPIC = 'revisiting-topic'# \nSALUTATION = 'salutation'# \nSCHEDULING_REQUEST = 'scheduling-request'# \nclass steamship.data.tags.tag.PromptCompletionTag(text: str = None, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nclass steamship.data.tags.tag.SentimentTag(sentiment: Sentiment, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nclass Sentiment(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nNEGATIVE = 'negative'# \nNEUTRAL = 'neutral'# \nPOSITIVE = 'positive'# \nSCORE = 'score'# \nclass steamship.data.tags.tag.SummaryTag(summary: str, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nclass steamship.data.tags.tag.Tag(*, client: Client = None, id: str = None, fileId: str = None, blockId: str | None = None, kind: TagKind | str = None, name: str | None = None, value: Dict[TagValueKey | str, Any] | None = None, startIdx: int | None = None, endIdx: int | None = None, text: str | None = None)[source]# \nBases: CamelModel\nclass DeleteRequest(*, id: str = None, fileId: str = None, blockId: str = None)[source]# \nBases: Request\nblock_id: str# \nfile_id: str# \nid: str# \nclass ListRequest(*, fileId: str = None, blockId: str = None)[source]# \nBases: Request\nblock_id: str# \nfile_id: str# \nclass ListResponse(*, tags: List[Tag] = None)[source]# \nBases: Response\ntags: List[Tag]# \nblock_id: str | None# \nclient: Client# \nstatic create(client: Client, file_id: str = None, block_id: str = None, kind: str = None, name: str = None, start_idx: int = None, end_idx: int = None, value: Dict[str, Any] = None) → Tag[source]# \ndelete() → Tag[source]# \nend_idx: int | None# \nfile_id: str# \nid: str# \nindex(plugin_instance: Any = None)[source]# \nIndex this tag.\nkind: TagKind | str# \nname: str | None# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nstatic query(client: Client, tag_filter_query: str) → TagQueryResponse[source]# \nstart_idx: int | None# \ntext: str | None# \nvalue: Dict[TagValueKey | str, Any] | None# \nclass steamship.data.tags.tag.TagQueryRequest(*, tagFilterQuery: str)[source]# \nBases: Request\ntag_filter_query: str# \nclass steamship.data.tags.tag.TagQueryResponse(*, tags: List[Tag])[source]# \nBases: Response\ntags: List[Tag]# \nclass steamship.data.tags.tag.TimestampTag(start_time_s: float, end_time_s: float, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nclass steamship.data.tags.tag.TokenizationTag(type=<enum 'Type'>, start_idx: Optional[int] = None, end_idx: Optional[int] = None, value: Optional[Dict[str, Any]] = None)[source]# \nBases: Tag\nclass Type(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nCHARACTER = 'character'# \nPARAGRAPH = 'paragraph'# \nSENTENCE = 'sentence'# \nWORD = 'word'# \nclass steamship.data.tags.tag.TopicTag(topic: str, start_idx: int | None = None, end_idx: int | None = None, value: Dict[str, Any] | None = None)[source]# \nBases: Tag\nsteamship.data.tags.tag_constants module#\nclass steamship.data.tags.tag_constants.ChatTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.CHAT.\nCHAT_ID = 'chat-id'# \nCHUNK = 'chunk'# \nCONTEXT_KEYS = 'context-keys'# \nINDEX_HANDLE = 'index-handle'# \nMESSAGE_ID = 'message-id'# \nROLE = 'role'# \nclass steamship.data.tags.tag_constants.DocTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.doc; appropriate for HTML and Markdown ideas.\nARTICLE = 'article'# \nBLOCK_CODE = 'block-code'# \nBLOCK_QUOTE = 'block-quote'# \nCAPTION = 'caption'# \nCHAPTER = 'chapter'# \nCHAT = 'chat'# \nDIV = 'div'# \nDOCUMENT = 'document'# \nEMPHASIZED = 'emphasized'# \nH1 = 'h1'# \nH2 = 'h2'# \nH3 = 'h3'# \nH4 = 'h4'# \nH5 = 'h5'# \nIMAGE = 'image'# \nLINE = 'line'# \nLINK = 'link'# \nLIST_ITEM = 'list-item'# \nMAIN = 'main'# \nMETADATA = 'metadata'# \nORDERED_LIST = 'ordered-list'# \nPAGE = 'page'# \nPARAGRAPH = 'paragraph'# \nPRE = 'pre'# \nREGION = 'region'# \nSENTENCE = 'sentence'# \nSOURCE = 'source'# \nSPAN = 'span'# \nSTRONG = 'strong'# \nSUBTITLE = 'subtitle'# \nTELETYPE = 'teletype'# \nTEXT = 'text'# \nTITLE = 'title'# \nTOKEN = 'token'# \nUNDERLINED = 'underlined'# \nUNKNOWN = 'unknown'# \nUNORDERED_LIST = 'unordered-list'# \nstatic from_html_tag(tagname: str | None) → DocTag | None[source]# \nclass steamship.data.tags.tag_constants.GenerationTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.generation.\nGIST = 'gist'# \nHEADLINE = 'headline'# \nPROMPT_COMPLETION = 'prompt-completion'# \nSUMMARY = 'summary'# \nclass steamship.data.tags.tag_constants.ProvenanceTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.provenance.\nFILE = 'file'# \nSPEAKER = 'speaker'# \nURL = 'url'# \nclass steamship.data.tags.tag_constants.RoleTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.ROLE.\nAGENT = 'agent'# \nASSISTANT = 'assistant'# \nFUNCTION = 'function'# \nSYSTEM = 'system'# \nUSER = 'user'# \nclass steamship.data.tags.tag_constants.TagKind(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of kind constants for Tags.\nThese define broad categories of tags. Suggested name values for each category are found in separate enums. For example: kind=TagKind.DOCUMENT, name=DocTag.H1\nCHAT = 'chat'# \nCHAT_HISTORY_CONTEXT = 'chat-history-context'# \nDEPENDENCY = 'dependency'# \nDOCUMENT = 'document'# \nEMBEDDING = 'embedding'# \nEMOTION = 'emotion'# \nENTITY = 'entity'# \nGENERATION = 'generation'# \nINTENT = 'intent'# \nKIND = 'summary'# \nMESSAGE_ID = 'message-id'# \nPART_OF_SPEECH = 'part-of-speech'# \nPROVENANCE = 'provenance'# \nROLE = 'role'# \nSEARCH_RESULT = 'search-result'# \nSENTIMENT = 'sentiment'# \nSUMMARY = 'summary'# \nTIMESTAMP = 'timestamp'# \nTOKEN = 'token'# \nTOKENIZATION = 'tokenization'# \nTOPIC = 'topic'# \nclass steamship.data.tags.tag_constants.TagValueKey(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of key constants for the value object within a tag.\nBOOL_VALUE = 'bool-value'# \nDIRECT = 'direct'# \nEND_TIME_S = 'end-time-s'# \nENTITY_NAME = 'entity_name'# \nNUMBER_VALUE = 'number-value'# \nSCORE = 'score'# \nSTART_TIME_S = 'start-time-s'# \nSTRING_VALUE = 'string-value'# \nTIMESTAMP_VALUE = 'timestamp-value'# \nVALUE = 'value'# \nVECTOR_VALUE = 'vector-value'# \nclass steamship.data.tags.tag_constants.TokenTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.token; appropriate for parsing-level ideas.\nENTITY_IOB = 'entity-iob'# \nENTITY_TYPE = 'entity-type'# \nHEAD = 'head'# \nIS_ALPHA = 'is-alpha'# \nIS_ASCII = 'is-ascii'# \nIS_BRACKET = 'is-bracket'# \nIS_CURRENCY = 'is-currency'# \nIS_DIGIT = 'is-digit'# \nIS_LEFT_PUNCT = 'is-left-punct'# \nIS_OUT_OF_VOCABULARY = 'is-out-of-vocabulary'# \nIS_PUNCT = 'is-punct'# \nIS_QUOTE = 'is-quote'# \nIS_RIGHT_PUNCT = 'is-right-punct'# \nIS_SPACE = 'is-space'# \nIS_STOPWORD = 'is-stopword'# \nIS_TITLE = 'is-title'# \nLANGUAGE = 'language'# \nLEFT_EDGE = 'left-edge'# \nLEMMA = 'lemma'# \nLIKE_EMAIL = 'like-email'# \nLIKE_NUM = 'like-num'# \nLIKE_URL = 'like-url'# \nNORMALIZED = 'normalized'# \nPREFIX = 'prefix'# \nRIGHT_EDGE = 'right-edge'# \nSHAPE = 'shape'# \nSUFFIX = 'suffix'# \nTEXT = 'text'# \nTEXT_WITH_WHITESPACE = 'text-with-whitespace'# \nWHITESPACE = 'whitespace'# \nModule contents#\nclass steamship.data.tags.DocTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.doc; appropriate for HTML and Markdown ideas.\nARTICLE = 'article'# \nBLOCK_CODE = 'block-code'# \nBLOCK_QUOTE = 'block-quote'# \nCAPTION = 'caption'# \nCHAPTER = 'chapter'# \nCHAT = 'chat'# \nDIV = 'div'# \nDOCUMENT = 'document'# \nEMPHASIZED = 'emphasized'# \nH1 = 'h1'# \nH2 = 'h2'# \nH3 = 'h3'# \nH4 = 'h4'# \nH5 = 'h5'# \nIMAGE = 'image'# \nLINE = 'line'# \nLINK = 'link'# \nLIST_ITEM = 'list-item'# \nMAIN = 'main'# \nMETADATA = 'metadata'# \nORDERED_LIST = 'ordered-list'# \nPAGE = 'page'# \nPARAGRAPH = 'paragraph'# \nPRE = 'pre'# \nREGION = 'region'# \nSENTENCE = 'sentence'# \nSOURCE = 'source'# \nSPAN = 'span'# \nSTRONG = 'strong'# \nSUBTITLE = 'subtitle'# \nTELETYPE = 'teletype'# \nTEXT = 'text'# \nTITLE = 'title'# \nTOKEN = 'token'# \nUNDERLINED = 'underlined'# \nUNKNOWN = 'unknown'# \nUNORDERED_LIST = 'unordered-list'# \nstatic from_html_tag(tagname: str | None) → DocTag | None[source]# \nclass steamship.data.tags.GenerationTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.generation.\nGIST = 'gist'# \nHEADLINE = 'headline'# \nPROMPT_COMPLETION = 'prompt-completion'# \nSUMMARY = 'summary'# \nclass steamship.data.tags.Tag(*, client: Client = None, id: str = None, fileId: str = None, blockId: str | None = None, kind: TagKind | str = None, name: str | None = None, value: Dict[TagValueKey | str, Any] | None = None, startIdx: int | None = None, endIdx: int | None = None, text: str | None = None)[source]# \nBases: CamelModel\nclass DeleteRequest(*, id: str = None, fileId: str = None, blockId: str = None)[source]# \nBases: Request\nblock_id: str# \nfile_id: str# \nid: str# \nclass ListRequest(*, fileId: str = None, blockId: str = None)[source]# \nBases: Request\nblock_id: str# \nfile_id: str# \nclass ListResponse(*, tags: List[Tag] = None)[source]# \nBases: Response\ntags: List[Tag]# \nblock_id: str | None# \nclient: Client# \nstatic create(client: Client, file_id: str = None, block_id: str = None, kind: str = None, name: str = None, start_idx: int = None, end_idx: int = None, value: Dict[str, Any] = None) → Tag[source]# \ndelete() → Tag[source]# \nend_idx: int | None# \nfile_id: str# \nid: str# \nindex(plugin_instance: Any = None)[source]# \nIndex this tag.\nkind: TagKind | str# \nname: str | None# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nstatic query(client: Client, tag_filter_query: str) → TagQueryResponse[source]# \nstart_idx: int | None# \ntext: str | None# \nvalue: Dict[TagValueKey | str, Any] | None# \nclass steamship.data.tags.TagKind(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of kind constants for Tags.\nThese define broad categories of tags. Suggested name values for each category are found in separate enums. For example: kind=TagKind.DOCUMENT, name=DocTag.H1\nCHAT = 'chat'# \nCHAT_HISTORY_CONTEXT = 'chat-history-context'# \nDEPENDENCY = 'dependency'# \nDOCUMENT = 'document'# \nEMBEDDING = 'embedding'# \nEMOTION = 'emotion'# \nENTITY = 'entity'# \nGENERATION = 'generation'# \nINTENT = 'intent'# \nKIND = 'summary'# \nMESSAGE_ID = 'message-id'# \nPART_OF_SPEECH = 'part-of-speech'# \nPROVENANCE = 'provenance'# \nROLE = 'role'# \nSEARCH_RESULT = 'search-result'# \nSENTIMENT = 'sentiment'# \nSUMMARY = 'summary'# \nTIMESTAMP = 'timestamp'# \nTOKEN = 'token'# \nTOKENIZATION = 'tokenization'# \nTOPIC = 'topic'# \nclass steamship.data.tags.TagValueKey(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of key constants for the value object within a tag.\nBOOL_VALUE = 'bool-value'# \nDIRECT = 'direct'# \nEND_TIME_S = 'end-time-s'# \nENTITY_NAME = 'entity_name'# \nNUMBER_VALUE = 'number-value'# \nSCORE = 'score'# \nSTART_TIME_S = 'start-time-s'# \nSTRING_VALUE = 'string-value'# \nTIMESTAMP_VALUE = 'timestamp-value'# \nVALUE = 'value'# \nVECTOR_VALUE = 'vector-value'# \nclass steamship.data.tags.TokenTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.token; appropriate for parsing-level ideas.\nENTITY_IOB = 'entity-iob'# \nENTITY_TYPE = 'entity-type'# \nHEAD = 'head'# \nIS_ALPHA = 'is-alpha'# \nIS_ASCII = 'is-ascii'# \nIS_BRACKET = 'is-bracket'# \nIS_CURRENCY = 'is-currency'# \nIS_DIGIT = 'is-digit'# \nIS_LEFT_PUNCT = 'is-left-punct'# \nIS_OUT_OF_VOCABULARY = 'is-out-of-vocabulary'# \nIS_PUNCT = 'is-punct'# \nIS_QUOTE = 'is-quote'# \nIS_RIGHT_PUNCT = 'is-right-punct'# \nIS_SPACE = 'is-space'# \nIS_STOPWORD = 'is-stopword'# \nIS_TITLE = 'is-title'# \nLANGUAGE = 'language'# \nLEFT_EDGE = 'left-edge'# \nLEMMA = 'lemma'# \nLIKE_EMAIL = 'like-email'# \nLIKE_NUM = 'like-num'# \nLIKE_URL = 'like-url'# \nNORMALIZED = 'normalized'# \nPREFIX = 'prefix'# \nRIGHT_EDGE = 'right-edge'# \nSHAPE = 'shape'# \nSUFFIX = 'suffix'# \nTEXT = 'text'# \nTEXT_WITH_WHITESPACE = 'text-with-whitespace'# \nWHITESPACE = 'whitespace'#",
  "markdown": "## steamship.data.tags package[#](#steamship-data-tags-package \"Link to this heading\")\n\n## Submodules[#](#submodules \"Link to this heading\")\n\n## steamship.data.tags.tag module[#](#steamship-data-tags-tag-module \"Link to this heading\")\n\n_class_ steamship.data.tags.tag.EmbeddingTag(_embedding: List\\[[float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")\\] \\= None_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#EmbeddingTag)[#](#steamship.data.tags.tag.EmbeddingTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ steamship.data.tags.tag.EmotionTag(_emotion: [Emotion](#steamship.data.tags.tag.EmotionTag.Emotion \"steamship.data.tags.tag.EmotionTag.Emotion\")_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#EmotionTag)[#](#steamship.data.tags.tag.EmotionTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ Emotion(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#EmotionTag.Emotion)[#](#steamship.data.tags.tag.EmotionTag.Emotion \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nANGER _\\= 'anger'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.ANGER \"Link to this definition\")\n\nCONCERN _\\= 'concern'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.CONCERN \"Link to this definition\")\n\nFEAR _\\= 'fear'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.FEAR \"Link to this definition\")\n\nHAPPINESS _\\= 'happiness'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.HAPPINESS \"Link to this definition\")\n\nHUMOR _\\= 'humor'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.HUMOR \"Link to this definition\")\n\nJOY _\\= 'joy'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.JOY \"Link to this definition\")\n\nLOVE _\\= 'love'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.LOVE \"Link to this definition\")\n\nNEGATIVE _\\= 'negative'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.NEGATIVE \"Link to this definition\")\n\nNEUTRAL _\\= 'neutral'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.NEUTRAL \"Link to this definition\")\n\nPOSITIVE _\\= 'positive'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.POSITIVE \"Link to this definition\")\n\nSADNESS _\\= 'sadness'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.SADNESS \"Link to this definition\")\n\nSCORE _\\= 'score'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.SCORE \"Link to this definition\")\n\nSERIOUSNESS _\\= 'seriousness'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.SERIOUSNESS \"Link to this definition\")\n\nSURPRISE _\\= 'surprise'_[#](#steamship.data.tags.tag.EmotionTag.Emotion.SURPRISE \"Link to this definition\")\n\n_class_ steamship.data.tags.tag.EntityTag(_entity\\_name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _entity\\_type: [EntityType](#steamship.data.tags.tag.EntityTag.EntityType \"steamship.data.tags.tag.EntityTag.EntityType\")_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#EntityTag)[#](#steamship.data.tags.tag.EntityTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ EntityType(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#EntityTag.EntityType)[#](#steamship.data.tags.tag.EntityTag.EntityType \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nDATE _\\= 'date'_[#](#steamship.data.tags.tag.EntityTag.EntityType.DATE \"Link to this definition\")\n\nFACILITY _\\= 'facility'_[#](#steamship.data.tags.tag.EntityTag.EntityType.FACILITY \"Link to this definition\")\n\nGEO\\_POLITICAL\\_ENTITY _\\= 'geo-political-entity'_[#](#steamship.data.tags.tag.EntityTag.EntityType.GEO_POLITICAL_ENTITY \"Link to this definition\")\n\nLOCATION _\\= 'location'_[#](#steamship.data.tags.tag.EntityTag.EntityType.LOCATION \"Link to this definition\")\n\nMONEY _\\= 'money'_[#](#steamship.data.tags.tag.EntityTag.EntityType.MONEY \"Link to this definition\")\n\nORGANIZATION _\\= 'organization'_[#](#steamship.data.tags.tag.EntityTag.EntityType.ORGANIZATION \"Link to this definition\")\n\nPERCENT _\\= 'percent'_[#](#steamship.data.tags.tag.EntityTag.EntityType.PERCENT \"Link to this definition\")\n\nPERSON _\\= 'person'_[#](#steamship.data.tags.tag.EntityTag.EntityType.PERSON \"Link to this definition\")\n\nPRODUCT _\\= 'product'_[#](#steamship.data.tags.tag.EntityTag.EntityType.PRODUCT \"Link to this definition\")\n\nTIME _\\= 'time'_[#](#steamship.data.tags.tag.EntityTag.EntityType.TIME \"Link to this definition\")\n\n_class_ steamship.data.tags.tag.IntentTag(_intent: [Intent](#steamship.data.tags.tag.IntentTag.Intent \"steamship.data.tags.tag.IntentTag.Intent\")_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#IntentTag)[#](#steamship.data.tags.tag.IntentTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ Intent(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#IntentTag.Intent)[#](#steamship.data.tags.tag.IntentTag.Intent \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nARE\\_YOU\\_THERE _\\= 'are-you-there'_[#](#steamship.data.tags.tag.IntentTag.Intent.ARE_YOU_THERE \"Link to this definition\")\n\nCOMPLAINT _\\= 'complaint'_[#](#steamship.data.tags.tag.IntentTag.Intent.COMPLAINT \"Link to this definition\")\n\nEXPLANATION _\\= 'explanation'_[#](#steamship.data.tags.tag.IntentTag.Intent.EXPLANATION \"Link to this definition\")\n\nPRAISE _\\= 'praise'_[#](#steamship.data.tags.tag.IntentTag.Intent.PRAISE \"Link to this definition\")\n\nQUESTION _\\= 'question'_[#](#steamship.data.tags.tag.IntentTag.Intent.QUESTION \"Link to this definition\")\n\nREQUEST _\\= 'request'_[#](#steamship.data.tags.tag.IntentTag.Intent.REQUEST \"Link to this definition\")\n\nREVISITING\\_TOPIC _\\= 'revisiting-topic'_[#](#steamship.data.tags.tag.IntentTag.Intent.REVISITING_TOPIC \"Link to this definition\")\n\nSALUTATION _\\= 'salutation'_[#](#steamship.data.tags.tag.IntentTag.Intent.SALUTATION \"Link to this definition\")\n\nSCHEDULING\\_REQUEST _\\= 'scheduling-request'_[#](#steamship.data.tags.tag.IntentTag.Intent.SCHEDULING_REQUEST \"Link to this definition\")\n\n_class_ steamship.data.tags.tag.PromptCompletionTag(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#PromptCompletionTag)[#](#steamship.data.tags.tag.PromptCompletionTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ steamship.data.tags.tag.SentimentTag(_sentiment: [Sentiment](#steamship.data.tags.tag.SentimentTag.Sentiment \"steamship.data.tags.tag.SentimentTag.Sentiment\")_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#SentimentTag)[#](#steamship.data.tags.tag.SentimentTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ Sentiment(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#SentimentTag.Sentiment)[#](#steamship.data.tags.tag.SentimentTag.Sentiment \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nNEGATIVE _\\= 'negative'_[#](#steamship.data.tags.tag.SentimentTag.Sentiment.NEGATIVE \"Link to this definition\")\n\nNEUTRAL _\\= 'neutral'_[#](#steamship.data.tags.tag.SentimentTag.Sentiment.NEUTRAL \"Link to this definition\")\n\nPOSITIVE _\\= 'positive'_[#](#steamship.data.tags.tag.SentimentTag.Sentiment.POSITIVE \"Link to this definition\")\n\nSCORE _\\= 'score'_[#](#steamship.data.tags.tag.SentimentTag.Sentiment.SCORE \"Link to this definition\")\n\n_class_ steamship.data.tags.tag.SummaryTag(_summary: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#SummaryTag)[#](#steamship.data.tags.tag.SummaryTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ steamship.data.tags.tag.Tag(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _kind: [TagKind](#steamship.data.tags.tag_constants.TagKind \"steamship.data.tags.tag_constants.TagKind\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[TagValueKey](#steamship.data.tags.tag_constants.TagValueKey \"steamship.data.tags.tag_constants.TagValueKey\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _startIdx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _endIdx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag)[#](#steamship.data.tags.tag.Tag \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\n_class_ DeleteRequest(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.DeleteRequest)[#](#steamship.data.tags.tag.Tag.DeleteRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.DeleteRequest.block_id \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.DeleteRequest.file_id \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.DeleteRequest.id \"Link to this definition\")\n\n_class_ ListRequest(_\\*_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.ListRequest)[#](#steamship.data.tags.tag.Tag.ListRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.ListRequest.block_id \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.ListRequest.file_id \"Link to this definition\")\n\n_class_ ListResponse(_\\*_, _tags: List\\[[Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.ListResponse)[#](#steamship.data.tags.tag.Tag.ListResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_[#](#steamship.data.tags.tag.Tag.ListResponse.tags \"Link to this definition\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.block_id \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.tags.tag.Tag.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _block\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _kind: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _value: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_) → [Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.create)[#](#steamship.data.tags.tag.Tag.create \"Link to this definition\")\n\ndelete() → [Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.delete)[#](#steamship.data.tags.tag.Tag.delete \"Link to this definition\")\n\nend\\_idx_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.end_idx \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.file_id \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.id \"Link to this definition\")\n\nindex(_plugin\\_instance: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.index)[#](#steamship.data.tags.tag.Tag.index \"Link to this definition\")\n\nIndex this tag.\n\nkind_: [TagKind](#steamship.data.tags.tag_constants.TagKind \"steamship.data.tags.tag_constants.TagKind\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.kind \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.name \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.parse_obj)[#](#steamship.data.tags.tag.Tag.parse_obj \"Link to this definition\")\n\n_static_ query(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _tag\\_filter\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [TagQueryResponse](#steamship.data.tags.tag.TagQueryResponse \"steamship.data.tags.tag.TagQueryResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.query)[#](#steamship.data.tags.tag.Tag.query \"Link to this definition\")\n\nstart\\_idx_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.start_idx \"Link to this definition\")\n\ntext_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.text \"Link to this definition\")\n\nvalue_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[TagValueKey](#steamship.data.tags.tag_constants.TagValueKey \"steamship.data.tags.tag_constants.TagValueKey\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.Tag.value \"Link to this definition\")\n\n_class_ steamship.data.tags.tag.TagQueryRequest(_\\*_, _tagFilterQuery: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#TagQueryRequest)[#](#steamship.data.tags.tag.TagQueryRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\ntag\\_filter\\_query_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.tag.TagQueryRequest.tag_filter_query \"Link to this definition\")\n\n_class_ steamship.data.tags.tag.TagQueryResponse(_\\*_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#TagQueryResponse)[#](#steamship.data.tags.tag.TagQueryResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_[#](#steamship.data.tags.tag.TagQueryResponse.tags \"Link to this definition\")\n\n_class_ steamship.data.tags.tag.TimestampTag(_start\\_time\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\")_, _end\\_time\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\")_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#TimestampTag)[#](#steamship.data.tags.tag.TimestampTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ steamship.data.tags.tag.TokenizationTag(_type=<enum 'Type'>_, _start\\_idx: Optional\\[int\\] \\= None_, _end\\_idx: Optional\\[int\\] \\= None_, _value: Optional\\[Dict\\[str_, _Any\\]\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#TokenizationTag)[#](#steamship.data.tags.tag.TokenizationTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n_class_ Type(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#TokenizationTag.Type)[#](#steamship.data.tags.tag.TokenizationTag.Type \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nCHARACTER _\\= 'character'_[#](#steamship.data.tags.tag.TokenizationTag.Type.CHARACTER \"Link to this definition\")\n\nPARAGRAPH _\\= 'paragraph'_[#](#steamship.data.tags.tag.TokenizationTag.Type.PARAGRAPH \"Link to this definition\")\n\nSENTENCE _\\= 'sentence'_[#](#steamship.data.tags.tag.TokenizationTag.Type.SENTENCE \"Link to this definition\")\n\nWORD _\\= 'word'_[#](#steamship.data.tags.tag.TokenizationTag.Type.WORD \"Link to this definition\")\n\n_class_ steamship.data.tags.tag.TopicTag(_topic: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: Dict\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), Any\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#TopicTag)[#](#steamship.data.tags.tag.TopicTag \"Link to this definition\")\n\nBases: [`Tag`](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\n\n## steamship.data.tags.tag\\_constants module[#](#steamship-data-tags-tag-constants-module \"Link to this heading\")\n\n_class_ steamship.data.tags.tag\\_constants.ChatTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#ChatTag)[#](#steamship.data.tags.tag_constants.ChatTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.CHAT.\n\nCHAT\\_ID _\\= 'chat-id'_[#](#steamship.data.tags.tag_constants.ChatTag.CHAT_ID \"Link to this definition\")\n\nCHUNK _\\= 'chunk'_[#](#steamship.data.tags.tag_constants.ChatTag.CHUNK \"Link to this definition\")\n\nCONTEXT\\_KEYS _\\= 'context-keys'_[#](#steamship.data.tags.tag_constants.ChatTag.CONTEXT_KEYS \"Link to this definition\")\n\nINDEX\\_HANDLE _\\= 'index-handle'_[#](#steamship.data.tags.tag_constants.ChatTag.INDEX_HANDLE \"Link to this definition\")\n\nMESSAGE\\_ID _\\= 'message-id'_[#](#steamship.data.tags.tag_constants.ChatTag.MESSAGE_ID \"Link to this definition\")\n\nROLE _\\= 'role'_[#](#steamship.data.tags.tag_constants.ChatTag.ROLE \"Link to this definition\")\n\n_class_ steamship.data.tags.tag\\_constants.DocTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#DocTag)[#](#steamship.data.tags.tag_constants.DocTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.doc; appropriate for HTML and Markdown ideas.\n\nARTICLE _\\= 'article'_[#](#steamship.data.tags.tag_constants.DocTag.ARTICLE \"Link to this definition\")\n\nBLOCK\\_CODE _\\= 'block-code'_[#](#steamship.data.tags.tag_constants.DocTag.BLOCK_CODE \"Link to this definition\")\n\nBLOCK\\_QUOTE _\\= 'block-quote'_[#](#steamship.data.tags.tag_constants.DocTag.BLOCK_QUOTE \"Link to this definition\")\n\nCAPTION _\\= 'caption'_[#](#steamship.data.tags.tag_constants.DocTag.CAPTION \"Link to this definition\")\n\nCHAPTER _\\= 'chapter'_[#](#steamship.data.tags.tag_constants.DocTag.CHAPTER \"Link to this definition\")\n\nCHAT _\\= 'chat'_[#](#steamship.data.tags.tag_constants.DocTag.CHAT \"Link to this definition\")\n\nDIV _\\= 'div'_[#](#steamship.data.tags.tag_constants.DocTag.DIV \"Link to this definition\")\n\nDOCUMENT _\\= 'document'_[#](#steamship.data.tags.tag_constants.DocTag.DOCUMENT \"Link to this definition\")\n\nEMPHASIZED _\\= 'emphasized'_[#](#steamship.data.tags.tag_constants.DocTag.EMPHASIZED \"Link to this definition\")\n\nH1 _\\= 'h1'_[#](#steamship.data.tags.tag_constants.DocTag.H1 \"Link to this definition\")\n\nH2 _\\= 'h2'_[#](#steamship.data.tags.tag_constants.DocTag.H2 \"Link to this definition\")\n\nH3 _\\= 'h3'_[#](#steamship.data.tags.tag_constants.DocTag.H3 \"Link to this definition\")\n\nH4 _\\= 'h4'_[#](#steamship.data.tags.tag_constants.DocTag.H4 \"Link to this definition\")\n\nH5 _\\= 'h5'_[#](#steamship.data.tags.tag_constants.DocTag.H5 \"Link to this definition\")\n\nIMAGE _\\= 'image'_[#](#steamship.data.tags.tag_constants.DocTag.IMAGE \"Link to this definition\")\n\nLINE _\\= 'line'_[#](#steamship.data.tags.tag_constants.DocTag.LINE \"Link to this definition\")\n\nLINK _\\= 'link'_[#](#steamship.data.tags.tag_constants.DocTag.LINK \"Link to this definition\")\n\nLIST\\_ITEM _\\= 'list-item'_[#](#steamship.data.tags.tag_constants.DocTag.LIST_ITEM \"Link to this definition\")\n\nMAIN _\\= 'main'_[#](#steamship.data.tags.tag_constants.DocTag.MAIN \"Link to this definition\")\n\nMETADATA _\\= 'metadata'_[#](#steamship.data.tags.tag_constants.DocTag.METADATA \"Link to this definition\")\n\nORDERED\\_LIST _\\= 'ordered-list'_[#](#steamship.data.tags.tag_constants.DocTag.ORDERED_LIST \"Link to this definition\")\n\nPAGE _\\= 'page'_[#](#steamship.data.tags.tag_constants.DocTag.PAGE \"Link to this definition\")\n\nPARAGRAPH _\\= 'paragraph'_[#](#steamship.data.tags.tag_constants.DocTag.PARAGRAPH \"Link to this definition\")\n\nPRE _\\= 'pre'_[#](#steamship.data.tags.tag_constants.DocTag.PRE \"Link to this definition\")\n\nREGION _\\= 'region'_[#](#steamship.data.tags.tag_constants.DocTag.REGION \"Link to this definition\")\n\nSENTENCE _\\= 'sentence'_[#](#steamship.data.tags.tag_constants.DocTag.SENTENCE \"Link to this definition\")\n\nSOURCE _\\= 'source'_[#](#steamship.data.tags.tag_constants.DocTag.SOURCE \"Link to this definition\")\n\nSPAN _\\= 'span'_[#](#steamship.data.tags.tag_constants.DocTag.SPAN \"Link to this definition\")\n\nSTRONG _\\= 'strong'_[#](#steamship.data.tags.tag_constants.DocTag.STRONG \"Link to this definition\")\n\nSUBTITLE _\\= 'subtitle'_[#](#steamship.data.tags.tag_constants.DocTag.SUBTITLE \"Link to this definition\")\n\nTELETYPE _\\= 'teletype'_[#](#steamship.data.tags.tag_constants.DocTag.TELETYPE \"Link to this definition\")\n\nTEXT _\\= 'text'_[#](#steamship.data.tags.tag_constants.DocTag.TEXT \"Link to this definition\")\n\nTITLE _\\= 'title'_[#](#steamship.data.tags.tag_constants.DocTag.TITLE \"Link to this definition\")\n\nTOKEN _\\= 'token'_[#](#steamship.data.tags.tag_constants.DocTag.TOKEN \"Link to this definition\")\n\nUNDERLINED _\\= 'underlined'_[#](#steamship.data.tags.tag_constants.DocTag.UNDERLINED \"Link to this definition\")\n\nUNKNOWN _\\= 'unknown'_[#](#steamship.data.tags.tag_constants.DocTag.UNKNOWN \"Link to this definition\")\n\nUNORDERED\\_LIST _\\= 'unordered-list'_[#](#steamship.data.tags.tag_constants.DocTag.UNORDERED_LIST \"Link to this definition\")\n\n_static_ from\\_html\\_tag(_tagname: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_) → [DocTag](#steamship.data.tags.tag_constants.DocTag \"steamship.data.tags.tag_constants.DocTag\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#DocTag.from_html_tag)[#](#steamship.data.tags.tag_constants.DocTag.from_html_tag \"Link to this definition\")\n\n_class_ steamship.data.tags.tag\\_constants.GenerationTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#GenerationTag)[#](#steamship.data.tags.tag_constants.GenerationTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.generation.\n\nGIST _\\= 'gist'_[#](#steamship.data.tags.tag_constants.GenerationTag.GIST \"Link to this definition\")\n\nHEADLINE _\\= 'headline'_[#](#steamship.data.tags.tag_constants.GenerationTag.HEADLINE \"Link to this definition\")\n\nPROMPT\\_COMPLETION _\\= 'prompt-completion'_[#](#steamship.data.tags.tag_constants.GenerationTag.PROMPT_COMPLETION \"Link to this definition\")\n\nSUMMARY _\\= 'summary'_[#](#steamship.data.tags.tag_constants.GenerationTag.SUMMARY \"Link to this definition\")\n\n_class_ steamship.data.tags.tag\\_constants.ProvenanceTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#ProvenanceTag)[#](#steamship.data.tags.tag_constants.ProvenanceTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.provenance.\n\nFILE _\\= 'file'_[#](#steamship.data.tags.tag_constants.ProvenanceTag.FILE \"Link to this definition\")\n\nSPEAKER _\\= 'speaker'_[#](#steamship.data.tags.tag_constants.ProvenanceTag.SPEAKER \"Link to this definition\")\n\nURL _\\= 'url'_[#](#steamship.data.tags.tag_constants.ProvenanceTag.URL \"Link to this definition\")\n\n_class_ steamship.data.tags.tag\\_constants.RoleTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#RoleTag)[#](#steamship.data.tags.tag_constants.RoleTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.ROLE.\n\nAGENT _\\= 'agent'_[#](#steamship.data.tags.tag_constants.RoleTag.AGENT \"Link to this definition\")\n\nASSISTANT _\\= 'assistant'_[#](#steamship.data.tags.tag_constants.RoleTag.ASSISTANT \"Link to this definition\")\n\nFUNCTION _\\= 'function'_[#](#steamship.data.tags.tag_constants.RoleTag.FUNCTION \"Link to this definition\")\n\nSYSTEM _\\= 'system'_[#](#steamship.data.tags.tag_constants.RoleTag.SYSTEM \"Link to this definition\")\n\nUSER _\\= 'user'_[#](#steamship.data.tags.tag_constants.RoleTag.USER \"Link to this definition\")\n\n_class_ steamship.data.tags.tag\\_constants.TagKind(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TagKind)[#](#steamship.data.tags.tag_constants.TagKind \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of kind constants for Tags.\n\nThese define broad categories of tags. Suggested name values for each category are found in separate enums. For example: kind=TagKind.DOCUMENT, name=DocTag.H1\n\nCHAT _\\= 'chat'_[#](#steamship.data.tags.tag_constants.TagKind.CHAT \"Link to this definition\")\n\nCHAT\\_HISTORY\\_CONTEXT _\\= 'chat-history-context'_[#](#steamship.data.tags.tag_constants.TagKind.CHAT_HISTORY_CONTEXT \"Link to this definition\")\n\nDEPENDENCY _\\= 'dependency'_[#](#steamship.data.tags.tag_constants.TagKind.DEPENDENCY \"Link to this definition\")\n\nDOCUMENT _\\= 'document'_[#](#steamship.data.tags.tag_constants.TagKind.DOCUMENT \"Link to this definition\")\n\nEMBEDDING _\\= 'embedding'_[#](#steamship.data.tags.tag_constants.TagKind.EMBEDDING \"Link to this definition\")\n\nEMOTION _\\= 'emotion'_[#](#steamship.data.tags.tag_constants.TagKind.EMOTION \"Link to this definition\")\n\nENTITY _\\= 'entity'_[#](#steamship.data.tags.tag_constants.TagKind.ENTITY \"Link to this definition\")\n\nGENERATION _\\= 'generation'_[#](#steamship.data.tags.tag_constants.TagKind.GENERATION \"Link to this definition\")\n\nINTENT _\\= 'intent'_[#](#steamship.data.tags.tag_constants.TagKind.INTENT \"Link to this definition\")\n\nKIND _\\= 'summary'_[#](#steamship.data.tags.tag_constants.TagKind.KIND \"Link to this definition\")\n\nMESSAGE\\_ID _\\= 'message-id'_[#](#steamship.data.tags.tag_constants.TagKind.MESSAGE_ID \"Link to this definition\")\n\nPART\\_OF\\_SPEECH _\\= 'part-of-speech'_[#](#steamship.data.tags.tag_constants.TagKind.PART_OF_SPEECH \"Link to this definition\")\n\nPROVENANCE _\\= 'provenance'_[#](#steamship.data.tags.tag_constants.TagKind.PROVENANCE \"Link to this definition\")\n\nROLE _\\= 'role'_[#](#steamship.data.tags.tag_constants.TagKind.ROLE \"Link to this definition\")\n\nSEARCH\\_RESULT _\\= 'search-result'_[#](#steamship.data.tags.tag_constants.TagKind.SEARCH_RESULT \"Link to this definition\")\n\nSENTIMENT _\\= 'sentiment'_[#](#steamship.data.tags.tag_constants.TagKind.SENTIMENT \"Link to this definition\")\n\nSUMMARY _\\= 'summary'_[#](#steamship.data.tags.tag_constants.TagKind.SUMMARY \"Link to this definition\")\n\nTIMESTAMP _\\= 'timestamp'_[#](#steamship.data.tags.tag_constants.TagKind.TIMESTAMP \"Link to this definition\")\n\nTOKEN _\\= 'token'_[#](#steamship.data.tags.tag_constants.TagKind.TOKEN \"Link to this definition\")\n\nTOKENIZATION _\\= 'tokenization'_[#](#steamship.data.tags.tag_constants.TagKind.TOKENIZATION \"Link to this definition\")\n\nTOPIC _\\= 'topic'_[#](#steamship.data.tags.tag_constants.TagKind.TOPIC \"Link to this definition\")\n\n_class_ steamship.data.tags.tag\\_constants.TagValueKey(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TagValueKey)[#](#steamship.data.tags.tag_constants.TagValueKey \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of key constants for the value object within a tag.\n\nBOOL\\_VALUE _\\= 'bool-value'_[#](#steamship.data.tags.tag_constants.TagValueKey.BOOL_VALUE \"Link to this definition\")\n\nDIRECT _\\= 'direct'_[#](#steamship.data.tags.tag_constants.TagValueKey.DIRECT \"Link to this definition\")\n\nEND\\_TIME\\_S _\\= 'end-time-s'_[#](#steamship.data.tags.tag_constants.TagValueKey.END_TIME_S \"Link to this definition\")\n\nENTITY\\_NAME _\\= 'entity\\_name'_[#](#steamship.data.tags.tag_constants.TagValueKey.ENTITY_NAME \"Link to this definition\")\n\nNUMBER\\_VALUE _\\= 'number-value'_[#](#steamship.data.tags.tag_constants.TagValueKey.NUMBER_VALUE \"Link to this definition\")\n\nSCORE _\\= 'score'_[#](#steamship.data.tags.tag_constants.TagValueKey.SCORE \"Link to this definition\")\n\nSTART\\_TIME\\_S _\\= 'start-time-s'_[#](#steamship.data.tags.tag_constants.TagValueKey.START_TIME_S \"Link to this definition\")\n\nSTRING\\_VALUE _\\= 'string-value'_[#](#steamship.data.tags.tag_constants.TagValueKey.STRING_VALUE \"Link to this definition\")\n\nTIMESTAMP\\_VALUE _\\= 'timestamp-value'_[#](#steamship.data.tags.tag_constants.TagValueKey.TIMESTAMP_VALUE \"Link to this definition\")\n\nVALUE _\\= 'value'_[#](#steamship.data.tags.tag_constants.TagValueKey.VALUE \"Link to this definition\")\n\nVECTOR\\_VALUE _\\= 'vector-value'_[#](#steamship.data.tags.tag_constants.TagValueKey.VECTOR_VALUE \"Link to this definition\")\n\n_class_ steamship.data.tags.tag\\_constants.TokenTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TokenTag)[#](#steamship.data.tags.tag_constants.TokenTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.token; appropriate for parsing-level ideas.\n\nENTITY\\_IOB _\\= 'entity-iob'_[#](#steamship.data.tags.tag_constants.TokenTag.ENTITY_IOB \"Link to this definition\")\n\nENTITY\\_TYPE _\\= 'entity-type'_[#](#steamship.data.tags.tag_constants.TokenTag.ENTITY_TYPE \"Link to this definition\")\n\nHEAD _\\= 'head'_[#](#steamship.data.tags.tag_constants.TokenTag.HEAD \"Link to this definition\")\n\nIS\\_ALPHA _\\= 'is-alpha'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_ALPHA \"Link to this definition\")\n\nIS\\_ASCII _\\= 'is-ascii'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_ASCII \"Link to this definition\")\n\nIS\\_BRACKET _\\= 'is-bracket'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_BRACKET \"Link to this definition\")\n\nIS\\_CURRENCY _\\= 'is-currency'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_CURRENCY \"Link to this definition\")\n\nIS\\_DIGIT _\\= 'is-digit'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_DIGIT \"Link to this definition\")\n\nIS\\_LEFT\\_PUNCT _\\= 'is-left-punct'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_LEFT_PUNCT \"Link to this definition\")\n\nIS\\_OUT\\_OF\\_VOCABULARY _\\= 'is-out-of-vocabulary'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_OUT_OF_VOCABULARY \"Link to this definition\")\n\nIS\\_PUNCT _\\= 'is-punct'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_PUNCT \"Link to this definition\")\n\nIS\\_QUOTE _\\= 'is-quote'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_QUOTE \"Link to this definition\")\n\nIS\\_RIGHT\\_PUNCT _\\= 'is-right-punct'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_RIGHT_PUNCT \"Link to this definition\")\n\nIS\\_SPACE _\\= 'is-space'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_SPACE \"Link to this definition\")\n\nIS\\_STOPWORD _\\= 'is-stopword'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_STOPWORD \"Link to this definition\")\n\nIS\\_TITLE _\\= 'is-title'_[#](#steamship.data.tags.tag_constants.TokenTag.IS_TITLE \"Link to this definition\")\n\nLANGUAGE _\\= 'language'_[#](#steamship.data.tags.tag_constants.TokenTag.LANGUAGE \"Link to this definition\")\n\nLEFT\\_EDGE _\\= 'left-edge'_[#](#steamship.data.tags.tag_constants.TokenTag.LEFT_EDGE \"Link to this definition\")\n\nLEMMA _\\= 'lemma'_[#](#steamship.data.tags.tag_constants.TokenTag.LEMMA \"Link to this definition\")\n\nLIKE\\_EMAIL _\\= 'like-email'_[#](#steamship.data.tags.tag_constants.TokenTag.LIKE_EMAIL \"Link to this definition\")\n\nLIKE\\_NUM _\\= 'like-num'_[#](#steamship.data.tags.tag_constants.TokenTag.LIKE_NUM \"Link to this definition\")\n\nLIKE\\_URL _\\= 'like-url'_[#](#steamship.data.tags.tag_constants.TokenTag.LIKE_URL \"Link to this definition\")\n\nNORMALIZED _\\= 'normalized'_[#](#steamship.data.tags.tag_constants.TokenTag.NORMALIZED \"Link to this definition\")\n\nPREFIX _\\= 'prefix'_[#](#steamship.data.tags.tag_constants.TokenTag.PREFIX \"Link to this definition\")\n\nRIGHT\\_EDGE _\\= 'right-edge'_[#](#steamship.data.tags.tag_constants.TokenTag.RIGHT_EDGE \"Link to this definition\")\n\nSHAPE _\\= 'shape'_[#](#steamship.data.tags.tag_constants.TokenTag.SHAPE \"Link to this definition\")\n\nSUFFIX _\\= 'suffix'_[#](#steamship.data.tags.tag_constants.TokenTag.SUFFIX \"Link to this definition\")\n\nTEXT _\\= 'text'_[#](#steamship.data.tags.tag_constants.TokenTag.TEXT \"Link to this definition\")\n\nTEXT\\_WITH\\_WHITESPACE _\\= 'text-with-whitespace'_[#](#steamship.data.tags.tag_constants.TokenTag.TEXT_WITH_WHITESPACE \"Link to this definition\")\n\nWHITESPACE _\\= 'whitespace'_[#](#steamship.data.tags.tag_constants.TokenTag.WHITESPACE \"Link to this definition\")\n\n## Module contents[#](#module-contents \"Link to this heading\")\n\n_class_ steamship.data.tags.DocTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#DocTag)[#](#steamship.data.tags.DocTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.doc; appropriate for HTML and Markdown ideas.\n\nARTICLE _\\= 'article'_[#](#steamship.data.tags.DocTag.ARTICLE \"Link to this definition\")\n\nBLOCK\\_CODE _\\= 'block-code'_[#](#steamship.data.tags.DocTag.BLOCK_CODE \"Link to this definition\")\n\nBLOCK\\_QUOTE _\\= 'block-quote'_[#](#steamship.data.tags.DocTag.BLOCK_QUOTE \"Link to this definition\")\n\nCAPTION _\\= 'caption'_[#](#steamship.data.tags.DocTag.CAPTION \"Link to this definition\")\n\nCHAPTER _\\= 'chapter'_[#](#steamship.data.tags.DocTag.CHAPTER \"Link to this definition\")\n\nCHAT _\\= 'chat'_[#](#steamship.data.tags.DocTag.CHAT \"Link to this definition\")\n\nDIV _\\= 'div'_[#](#steamship.data.tags.DocTag.DIV \"Link to this definition\")\n\nDOCUMENT _\\= 'document'_[#](#steamship.data.tags.DocTag.DOCUMENT \"Link to this definition\")\n\nEMPHASIZED _\\= 'emphasized'_[#](#steamship.data.tags.DocTag.EMPHASIZED \"Link to this definition\")\n\nH1 _\\= 'h1'_[#](#steamship.data.tags.DocTag.H1 \"Link to this definition\")\n\nH2 _\\= 'h2'_[#](#steamship.data.tags.DocTag.H2 \"Link to this definition\")\n\nH3 _\\= 'h3'_[#](#steamship.data.tags.DocTag.H3 \"Link to this definition\")\n\nH4 _\\= 'h4'_[#](#steamship.data.tags.DocTag.H4 \"Link to this definition\")\n\nH5 _\\= 'h5'_[#](#steamship.data.tags.DocTag.H5 \"Link to this definition\")\n\nIMAGE _\\= 'image'_[#](#steamship.data.tags.DocTag.IMAGE \"Link to this definition\")\n\nLINE _\\= 'line'_[#](#steamship.data.tags.DocTag.LINE \"Link to this definition\")\n\nLINK _\\= 'link'_[#](#steamship.data.tags.DocTag.LINK \"Link to this definition\")\n\nLIST\\_ITEM _\\= 'list-item'_[#](#steamship.data.tags.DocTag.LIST_ITEM \"Link to this definition\")\n\nMAIN _\\= 'main'_[#](#steamship.data.tags.DocTag.MAIN \"Link to this definition\")\n\nMETADATA _\\= 'metadata'_[#](#steamship.data.tags.DocTag.METADATA \"Link to this definition\")\n\nORDERED\\_LIST _\\= 'ordered-list'_[#](#steamship.data.tags.DocTag.ORDERED_LIST \"Link to this definition\")\n\nPAGE _\\= 'page'_[#](#steamship.data.tags.DocTag.PAGE \"Link to this definition\")\n\nPARAGRAPH _\\= 'paragraph'_[#](#steamship.data.tags.DocTag.PARAGRAPH \"Link to this definition\")\n\nPRE _\\= 'pre'_[#](#steamship.data.tags.DocTag.PRE \"Link to this definition\")\n\nREGION _\\= 'region'_[#](#steamship.data.tags.DocTag.REGION \"Link to this definition\")\n\nSENTENCE _\\= 'sentence'_[#](#steamship.data.tags.DocTag.SENTENCE \"Link to this definition\")\n\nSOURCE _\\= 'source'_[#](#steamship.data.tags.DocTag.SOURCE \"Link to this definition\")\n\nSPAN _\\= 'span'_[#](#steamship.data.tags.DocTag.SPAN \"Link to this definition\")\n\nSTRONG _\\= 'strong'_[#](#steamship.data.tags.DocTag.STRONG \"Link to this definition\")\n\nSUBTITLE _\\= 'subtitle'_[#](#steamship.data.tags.DocTag.SUBTITLE \"Link to this definition\")\n\nTELETYPE _\\= 'teletype'_[#](#steamship.data.tags.DocTag.TELETYPE \"Link to this definition\")\n\nTEXT _\\= 'text'_[#](#steamship.data.tags.DocTag.TEXT \"Link to this definition\")\n\nTITLE _\\= 'title'_[#](#steamship.data.tags.DocTag.TITLE \"Link to this definition\")\n\nTOKEN _\\= 'token'_[#](#steamship.data.tags.DocTag.TOKEN \"Link to this definition\")\n\nUNDERLINED _\\= 'underlined'_[#](#steamship.data.tags.DocTag.UNDERLINED \"Link to this definition\")\n\nUNKNOWN _\\= 'unknown'_[#](#steamship.data.tags.DocTag.UNKNOWN \"Link to this definition\")\n\nUNORDERED\\_LIST _\\= 'unordered-list'_[#](#steamship.data.tags.DocTag.UNORDERED_LIST \"Link to this definition\")\n\n_static_ from\\_html\\_tag(_tagname: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_) → [DocTag](#steamship.data.tags.tag_constants.DocTag \"steamship.data.tags.tag_constants.DocTag\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#DocTag.from_html_tag)[#](#steamship.data.tags.DocTag.from_html_tag \"Link to this definition\")\n\n_class_ steamship.data.tags.GenerationTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#GenerationTag)[#](#steamship.data.tags.GenerationTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.generation.\n\nGIST _\\= 'gist'_[#](#steamship.data.tags.GenerationTag.GIST \"Link to this definition\")\n\nHEADLINE _\\= 'headline'_[#](#steamship.data.tags.GenerationTag.HEADLINE \"Link to this definition\")\n\nPROMPT\\_COMPLETION _\\= 'prompt-completion'_[#](#steamship.data.tags.GenerationTag.PROMPT_COMPLETION \"Link to this definition\")\n\nSUMMARY _\\= 'summary'_[#](#steamship.data.tags.GenerationTag.SUMMARY \"Link to this definition\")\n\n_class_ steamship.data.tags.Tag(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _kind: [TagKind](#steamship.data.tags.tag_constants.TagKind \"steamship.data.tags.tag_constants.TagKind\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[TagValueKey](#steamship.data.tags.tag_constants.TagValueKey \"steamship.data.tags.tag_constants.TagValueKey\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _startIdx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _endIdx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag)[#](#steamship.data.tags.Tag \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\n_class_ DeleteRequest(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.DeleteRequest)[#](#steamship.data.tags.Tag.DeleteRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.DeleteRequest.block_id \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.DeleteRequest.file_id \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.DeleteRequest.id \"Link to this definition\")\n\n_class_ ListRequest(_\\*_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.ListRequest)[#](#steamship.data.tags.Tag.ListRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.ListRequest.block_id \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.ListRequest.file_id \"Link to this definition\")\n\n_class_ ListResponse(_\\*_, _tags: List\\[[Tag](#steamship.data.tags.Tag \"steamship.data.tags.Tag\")\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.ListResponse)[#](#steamship.data.tags.Tag.ListResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_[#](#steamship.data.tags.Tag.ListResponse.tags \"Link to this definition\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.block_id \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.tags.Tag.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _block\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _kind: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _value: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_) → [Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.create)[#](#steamship.data.tags.Tag.create \"Link to this definition\")\n\ndelete() → [Tag](#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.delete)[#](#steamship.data.tags.Tag.delete \"Link to this definition\")\n\nend\\_idx_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.end_idx \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.file_id \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.id \"Link to this definition\")\n\nindex(_plugin\\_instance: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.index)[#](#steamship.data.tags.Tag.index \"Link to this definition\")\n\nIndex this tag.\n\nkind_: [TagKind](#steamship.data.tags.tag_constants.TagKind \"steamship.data.tags.tag_constants.TagKind\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.kind \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.name \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.parse_obj)[#](#steamship.data.tags.Tag.parse_obj \"Link to this definition\")\n\n_static_ query(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _tag\\_filter\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [TagQueryResponse](#steamship.data.tags.tag.TagQueryResponse \"steamship.data.tags.tag.TagQueryResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.query)[#](#steamship.data.tags.Tag.query \"Link to this definition\")\n\nstart\\_idx_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.start_idx \"Link to this definition\")\n\ntext_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.text \"Link to this definition\")\n\nvalue_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[TagValueKey](#steamship.data.tags.tag_constants.TagValueKey \"steamship.data.tags.tag_constants.TagValueKey\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.tags.Tag.value \"Link to this definition\")\n\n_class_ steamship.data.tags.TagKind(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TagKind)[#](#steamship.data.tags.TagKind \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of kind constants for Tags.\n\nThese define broad categories of tags. Suggested name values for each category are found in separate enums. For example: kind=TagKind.DOCUMENT, name=DocTag.H1\n\nCHAT _\\= 'chat'_[#](#steamship.data.tags.TagKind.CHAT \"Link to this definition\")\n\nCHAT\\_HISTORY\\_CONTEXT _\\= 'chat-history-context'_[#](#steamship.data.tags.TagKind.CHAT_HISTORY_CONTEXT \"Link to this definition\")\n\nDEPENDENCY _\\= 'dependency'_[#](#steamship.data.tags.TagKind.DEPENDENCY \"Link to this definition\")\n\nDOCUMENT _\\= 'document'_[#](#steamship.data.tags.TagKind.DOCUMENT \"Link to this definition\")\n\nEMBEDDING _\\= 'embedding'_[#](#steamship.data.tags.TagKind.EMBEDDING \"Link to this definition\")\n\nEMOTION _\\= 'emotion'_[#](#steamship.data.tags.TagKind.EMOTION \"Link to this definition\")\n\nENTITY _\\= 'entity'_[#](#steamship.data.tags.TagKind.ENTITY \"Link to this definition\")\n\nGENERATION _\\= 'generation'_[#](#steamship.data.tags.TagKind.GENERATION \"Link to this definition\")\n\nINTENT _\\= 'intent'_[#](#steamship.data.tags.TagKind.INTENT \"Link to this definition\")\n\nKIND _\\= 'summary'_[#](#steamship.data.tags.TagKind.KIND \"Link to this definition\")\n\nMESSAGE\\_ID _\\= 'message-id'_[#](#steamship.data.tags.TagKind.MESSAGE_ID \"Link to this definition\")\n\nPART\\_OF\\_SPEECH _\\= 'part-of-speech'_[#](#steamship.data.tags.TagKind.PART_OF_SPEECH \"Link to this definition\")\n\nPROVENANCE _\\= 'provenance'_[#](#steamship.data.tags.TagKind.PROVENANCE \"Link to this definition\")\n\nROLE _\\= 'role'_[#](#steamship.data.tags.TagKind.ROLE \"Link to this definition\")\n\nSEARCH\\_RESULT _\\= 'search-result'_[#](#steamship.data.tags.TagKind.SEARCH_RESULT \"Link to this definition\")\n\nSENTIMENT _\\= 'sentiment'_[#](#steamship.data.tags.TagKind.SENTIMENT \"Link to this definition\")\n\nSUMMARY _\\= 'summary'_[#](#steamship.data.tags.TagKind.SUMMARY \"Link to this definition\")\n\nTIMESTAMP _\\= 'timestamp'_[#](#steamship.data.tags.TagKind.TIMESTAMP \"Link to this definition\")\n\nTOKEN _\\= 'token'_[#](#steamship.data.tags.TagKind.TOKEN \"Link to this definition\")\n\nTOKENIZATION _\\= 'tokenization'_[#](#steamship.data.tags.TagKind.TOKENIZATION \"Link to this definition\")\n\nTOPIC _\\= 'topic'_[#](#steamship.data.tags.TagKind.TOPIC \"Link to this definition\")\n\n_class_ steamship.data.tags.TagValueKey(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TagValueKey)[#](#steamship.data.tags.TagValueKey \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of key constants for the value object within a tag.\n\nBOOL\\_VALUE _\\= 'bool-value'_[#](#steamship.data.tags.TagValueKey.BOOL_VALUE \"Link to this definition\")\n\nDIRECT _\\= 'direct'_[#](#steamship.data.tags.TagValueKey.DIRECT \"Link to this definition\")\n\nEND\\_TIME\\_S _\\= 'end-time-s'_[#](#steamship.data.tags.TagValueKey.END_TIME_S \"Link to this definition\")\n\nENTITY\\_NAME _\\= 'entity\\_name'_[#](#steamship.data.tags.TagValueKey.ENTITY_NAME \"Link to this definition\")\n\nNUMBER\\_VALUE _\\= 'number-value'_[#](#steamship.data.tags.TagValueKey.NUMBER_VALUE \"Link to this definition\")\n\nSCORE _\\= 'score'_[#](#steamship.data.tags.TagValueKey.SCORE \"Link to this definition\")\n\nSTART\\_TIME\\_S _\\= 'start-time-s'_[#](#steamship.data.tags.TagValueKey.START_TIME_S \"Link to this definition\")\n\nSTRING\\_VALUE _\\= 'string-value'_[#](#steamship.data.tags.TagValueKey.STRING_VALUE \"Link to this definition\")\n\nTIMESTAMP\\_VALUE _\\= 'timestamp-value'_[#](#steamship.data.tags.TagValueKey.TIMESTAMP_VALUE \"Link to this definition\")\n\nVALUE _\\= 'value'_[#](#steamship.data.tags.TagValueKey.VALUE \"Link to this definition\")\n\nVECTOR\\_VALUE _\\= 'vector-value'_[#](#steamship.data.tags.TagValueKey.VECTOR_VALUE \"Link to this definition\")\n\n_class_ steamship.data.tags.TokenTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TokenTag)[#](#steamship.data.tags.TokenTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.token; appropriate for parsing-level ideas.\n\nENTITY\\_IOB _\\= 'entity-iob'_[#](#steamship.data.tags.TokenTag.ENTITY_IOB \"Link to this definition\")\n\nENTITY\\_TYPE _\\= 'entity-type'_[#](#steamship.data.tags.TokenTag.ENTITY_TYPE \"Link to this definition\")\n\nHEAD _\\= 'head'_[#](#steamship.data.tags.TokenTag.HEAD \"Link to this definition\")\n\nIS\\_ALPHA _\\= 'is-alpha'_[#](#steamship.data.tags.TokenTag.IS_ALPHA \"Link to this definition\")\n\nIS\\_ASCII _\\= 'is-ascii'_[#](#steamship.data.tags.TokenTag.IS_ASCII \"Link to this definition\")\n\nIS\\_BRACKET _\\= 'is-bracket'_[#](#steamship.data.tags.TokenTag.IS_BRACKET \"Link to this definition\")\n\nIS\\_CURRENCY _\\= 'is-currency'_[#](#steamship.data.tags.TokenTag.IS_CURRENCY \"Link to this definition\")\n\nIS\\_DIGIT _\\= 'is-digit'_[#](#steamship.data.tags.TokenTag.IS_DIGIT \"Link to this definition\")\n\nIS\\_LEFT\\_PUNCT _\\= 'is-left-punct'_[#](#steamship.data.tags.TokenTag.IS_LEFT_PUNCT \"Link to this definition\")\n\nIS\\_OUT\\_OF\\_VOCABULARY _\\= 'is-out-of-vocabulary'_[#](#steamship.data.tags.TokenTag.IS_OUT_OF_VOCABULARY \"Link to this definition\")\n\nIS\\_PUNCT _\\= 'is-punct'_[#](#steamship.data.tags.TokenTag.IS_PUNCT \"Link to this definition\")\n\nIS\\_QUOTE _\\= 'is-quote'_[#](#steamship.data.tags.TokenTag.IS_QUOTE \"Link to this definition\")\n\nIS\\_RIGHT\\_PUNCT _\\= 'is-right-punct'_[#](#steamship.data.tags.TokenTag.IS_RIGHT_PUNCT \"Link to this definition\")\n\nIS\\_SPACE _\\= 'is-space'_[#](#steamship.data.tags.TokenTag.IS_SPACE \"Link to this definition\")\n\nIS\\_STOPWORD _\\= 'is-stopword'_[#](#steamship.data.tags.TokenTag.IS_STOPWORD \"Link to this definition\")\n\nIS\\_TITLE _\\= 'is-title'_[#](#steamship.data.tags.TokenTag.IS_TITLE \"Link to this definition\")\n\nLANGUAGE _\\= 'language'_[#](#steamship.data.tags.TokenTag.LANGUAGE \"Link to this definition\")\n\nLEFT\\_EDGE _\\= 'left-edge'_[#](#steamship.data.tags.TokenTag.LEFT_EDGE \"Link to this definition\")\n\nLEMMA _\\= 'lemma'_[#](#steamship.data.tags.TokenTag.LEMMA \"Link to this definition\")\n\nLIKE\\_EMAIL _\\= 'like-email'_[#](#steamship.data.tags.TokenTag.LIKE_EMAIL \"Link to this definition\")\n\nLIKE\\_NUM _\\= 'like-num'_[#](#steamship.data.tags.TokenTag.LIKE_NUM \"Link to this definition\")\n\nLIKE\\_URL _\\= 'like-url'_[#](#steamship.data.tags.TokenTag.LIKE_URL \"Link to this definition\")\n\nNORMALIZED _\\= 'normalized'_[#](#steamship.data.tags.TokenTag.NORMALIZED \"Link to this definition\")\n\nPREFIX _\\= 'prefix'_[#](#steamship.data.tags.TokenTag.PREFIX \"Link to this definition\")\n\nRIGHT\\_EDGE _\\= 'right-edge'_[#](#steamship.data.tags.TokenTag.RIGHT_EDGE \"Link to this definition\")\n\nSHAPE _\\= 'shape'_[#](#steamship.data.tags.TokenTag.SHAPE \"Link to this definition\")\n\nSUFFIX _\\= 'suffix'_[#](#steamship.data.tags.TokenTag.SUFFIX \"Link to this definition\")\n\nTEXT _\\= 'text'_[#](#steamship.data.tags.TokenTag.TEXT \"Link to this definition\")\n\nTEXT\\_WITH\\_WHITESPACE _\\= 'text-with-whitespace'_[#](#steamship.data.tags.TokenTag.TEXT_WITH_WHITESPACE \"Link to this definition\")\n\nWHITESPACE _\\= 'whitespace'_[#](#steamship.data.tags.TokenTag.WHITESPACE \"Link to this definition\")"
},
{
  "url": "https://docs.steamship.com/api-reference/steamship.plugin",
  "crawl": {
    "loadedUrl": "https://python-sdk.docs.steamship.com/api/steamship.plugin#steamship.plugin.generator.Generator",
    "loadedTime": "2023-08-17T22:19:35.475Z",
    "referrerUrl": "https://docs.steamship.com/plugins/developing/generators",
    "depth": 2,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://python-sdk.docs.steamship.com/api/steamship.plugin#steamship.plugin.generator.Generator",
    "title": "steamship.plugin package - Steamship Documentation",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": "en"
  },
  "screenshotUrl": null,
  "text": "Toggle table of contents sidebar\nsteamship.plugin package#\nSubpackages#\nsteamship.plugin.blockifier package\nSubmodules\nsteamship.plugin.blockifier.blockifier module\nBlockifier\nBlockifier.run()\nBlockifier.run_endpoint()\nsteamship.plugin.blockifier.transcriber module\nTranscriber\nTranscriber.get_transcript()\nTranscriber.run()\nTranscriber.start_transcription()\nModule contents\nBlockifier\nBlockifier.run()\nBlockifier.run_endpoint()\nTranscriber\nTranscriber.get_transcript()\nTranscriber.run()\nTranscriber.start_transcription()\nsteamship.plugin.inputs package\nSubmodules\nsteamship.plugin.inputs.block_and_tag_plugin_input module\nBlockAndTagPluginInput\nBlockAndTagPluginInput.file\nsteamship.plugin.inputs.export_plugin_input module\nExportPluginInput\nExportPluginInput.filename\nExportPluginInput.handle\nExportPluginInput.id\nExportPluginInput.plugin_instance\nExportPluginInput.query\nExportPluginInput.type\nsteamship.plugin.inputs.file_import_plugin_input module\nFileImportPluginInput\nFileImportPluginInput.data\nFileImportPluginInput.mime_type\nFileImportPluginInput.plugin_instance\nFileImportPluginInput.url\nFileImportPluginInput.value\nsteamship.plugin.inputs.raw_block_and_tag_plugin_input module\nRawBlockAndTagPluginInput\nRawBlockAndTagPluginInput.blocks\nRawBlockAndTagPluginInput.options\nsteamship.plugin.inputs.raw_data_plugin_input module\nRawDataPluginInput\nRawDataPluginInput.data\nRawDataPluginInput.default_mime_type\nRawDataPluginInput.plugin_instance\nis_base64()\nsteamship.plugin.inputs.train_plugin_input module\nTrainPluginInput\nTrainPluginInput.inference_params\nTrainPluginInput.plugin_instance\nTrainPluginInput.test_split_seed\nTrainPluginInput.testing_holdout_percent\nTrainPluginInput.training_data_url\nTrainPluginInput.training_epochs\nTrainPluginInput.training_params\nsteamship.plugin.inputs.training_parameter_plugin_input module\nTrainingParameterPluginInput\nTrainingParameterPluginInput.export_plugin_input\nTrainingParameterPluginInput.inference_params\nTrainingParameterPluginInput.plugin_instance\nTrainingParameterPluginInput.test_split_seed\nTrainingParameterPluginInput.testing_holdout_percent\nTrainingParameterPluginInput.training_epochs\nTrainingParameterPluginInput.training_params\nModule contents\nsteamship.plugin.outputs package\nSubmodules\nsteamship.plugin.outputs.block_and_tag_plugin_output module\nBlockAndTagPluginOutput\nBlockAndTagPluginOutput.file\nsteamship.plugin.outputs.embedded_items_plugin_output module\nEmbeddedItemsPluginOutput\nEmbeddedItemsPluginOutput.embeddings\nsteamship.plugin.outputs.model_checkpoint module\nModelCheckpoint\nModelCheckpoint.DEFAULT_HANDLE\nModelCheckpoint.archive_path_in_steamship()\nModelCheckpoint.archive_path_on_disk()\nModelCheckpoint.client\nModelCheckpoint.download_model_bundle()\nModelCheckpoint.folder_path_on_disk()\nModelCheckpoint.handle\nModelCheckpoint.parent_directory\nModelCheckpoint.plugin_instance_id\nModelCheckpoint.upload_model_bundle()\nModelCheckpoint.workspace\nsteamship.plugin.outputs.plugin_output module\nOperationType\nOperationType.CREATE\nOperationType.DELETE\nOperationType.EXISTS\nOperationType.EXISTS_TRAINED\nOperationType.RUN\nOperationType.TRAIN\nOperationUnit\nOperationUnit.BYTES\nOperationUnit.CHARACTERS\nOperationUnit.MS\nOperationUnit.PROMPT_TOKENS\nOperationUnit.SAMPLED_TOKENS\nOperationUnit.TOKENS\nOperationUnit.UNITS\nPluginOutput\nPluginOutput.usage\nUsageReport\nUsageReport.audit_id\nUsageReport.audit_url\nUsageReport.operation_amount\nUsageReport.operation_type\nUsageReport.operation_unit\nUsageReport.run_characters()\nUsageReport.run_tokens()\nUsageReport.run_units()\nsteamship.plugin.outputs.raw_block_and_tag_plugin_output module\nRawBlockAndTagPluginOutput\nRawBlockAndTagPluginOutput.blocks\nsteamship.plugin.outputs.raw_data_plugin_output module\nRawDataPluginOutput\nRawDataPluginOutput.data\nRawDataPluginOutput.mime_type\nRawDataPluginOutput.parse_obj()\nRawDataPluginOutput.tags\nsteamship.plugin.outputs.train_plugin_output module\nTrainPluginOutput\nTrainPluginOutput.archive_path\nTrainPluginOutput.inference_params\nTrainPluginOutput.plugin_instance_id\nTrainPluginOutput.training_progress\nTrainPluginOutput.training_results\nsteamship.plugin.outputs.training_parameter_plugin_output module\nTrainingParameterPluginOutput\nTrainingParameterPluginOutput.export_request\nTrainingParameterPluginOutput.from_input()\nTrainingParameterPluginOutput.inference_params\nTrainingParameterPluginOutput.machine_type\nTrainingParameterPluginOutput.parse_obj()\nTrainingParameterPluginOutput.test_split_seed\nTrainingParameterPluginOutput.testing_holdout_percent\nTrainingParameterPluginOutput.training_epochs\nTrainingParameterPluginOutput.training_params\nModule contents\nSubmodules#\nsteamship.plugin.embedder module#\nclass steamship.plugin.embedder.Embedder(client: Steamship = None, config: Dict[str, Any] = None, context: InvocationContext = None)[source]# \nBases: PluginService[BlockAndTagPluginInput, EmbeddedItemsPluginOutput], ABC\nabstract run(request: PluginRequest[BlockAndTagPluginInput]) → InvocableResponse[EmbeddedItemsPluginOutput][source]# \nRuns the core operation implemented by this plugin: import, export, blockify, tag, etc.\nThis is the method that a Steamship Plugin implements to perform its main work.\nrun_endpoint(**kwargs) → InvocableResponse[EmbeddedItemsPluginOutput][source]# \nExposes the Embedder’s run operation to the Steamship Engine via the expected HTTP path POST /tag\nsteamship.plugin.file_importer module#\nclass steamship.plugin.file_importer.FileImporter(client: Steamship = None, config: Dict[str, Any] = None, context: InvocationContext = None)[source]# \nBases: PluginService[FileImportPluginInput, RawDataPluginOutput], ABC\nabstract run(request: PluginRequest[FileImportPluginInput]) → InvocableResponse[RawDataPluginOutput][source]# \nRuns the core operation implemented by this plugin: import, export, blockify, tag, etc.\nThis is the method that a Steamship Plugin implements to perform its main work.\nrun_endpoint(**kwargs) → InvocableResponse[RawDataPluginOutput][source]# \nExposes the File Importer’s run operation to the Steamship Engine via the expected HTTP path POST /import\nsteamship.plugin.generator module#\nclass steamship.plugin.generator.Generator(client: Steamship = None, config: Dict[str, Any] = None, context: InvocationContext = None)[source]# \nBases: PluginService[RawBlockAndTagPluginInput, RawBlockAndTagPluginOutput], ABC\nabstract run(request: PluginRequest[RawBlockAndTagPluginInput]) → InvocableResponse[RawBlockAndTagPluginOutput][source]# \nRuns the core operation implemented by this plugin: import, export, blockify, tag, etc.\nThis is the method that a Steamship Plugin implements to perform its main work.\nrun_endpoint(**kwargs) → InvocableResponse[RawBlockAndTagPluginOutput][source]# \nExposes the Tagger’s run operation to the Steamship Engine via the expected HTTP path POST /tag\nupload_block_content_to_signed_url(block: Block) → Block[source]# \nRecreate the block (create request) as a URL request, rather than direct content, since we can’t do a multipart file upload from here.\nclass steamship.plugin.generator.TrainableGenerator(client: Steamship = None, config: Dict[str, Any] = None, context: InvocationContext = None)[source]# \nBases: TrainablePluginService[RawBlockAndTagPluginInput, RawBlockAndTagPluginOutput], ABC\nget_training_parameters_endpoint(**kwargs) → InvocableResponse[TrainingParameterPluginOutput][source]# \nExposes the Service’s get_training_parameters operation to the Steamship Engine via the expected HTTP path POST /getTrainingParameters\nrun_endpoint(**kwargs) → InvocableResponse[RawBlockAndTagPluginOutput][source]# \nExposes the Tagger’s run operation to the Steamship Engine via the expected HTTP path POST /generate\nabstract run_with_model(request: PluginRequest[RawBlockAndTagPluginInput], model: TrainableModel) → InvocableResponse[RawBlockAndTagPluginOutput][source]# \nRather than implementing run(request), a TrainablePluginService implements run_with_model(request, model)\ntrain_endpoint(**kwargs) → InvocableResponse[TrainPluginOutput][source]# \nExposes the Service’s train operation to the Steamship Engine via the expected HTTP path POST /train\nsteamship.plugin.request module#\nclass steamship.plugin.request.PluginRequest(*, data: T | None = None, context: PluginRequestContext | None = None, status: Task | None = None, isStatusCheck: bool = False)[source]# \nBases: GenericModel, Generic[T]\nclass Config[source]# \nBases: object\nalias_generator() → str# \nallow_population_by_field_name = True# \ncontext: PluginRequestContext | None# \ndata: T | None# \nis_status_check: bool# \nstatus: Task | None# \nclass steamship.plugin.request.PluginRequestContext(*, pluginId: str = None, pluginHandle: str = None, pluginVersionId: str = None, pluginVersionHandle: str = None, pluginInstanceId: str = None, pluginInstanceHandle: str = None)[source]# \nBases: CamelModel\nContains the context in which\nplugin_handle: str# \nplugin_id: str# \nplugin_instance_handle: str# \nplugin_instance_id: str# \nplugin_version_handle: str# \nplugin_version_id: str# \nsteamship.plugin.tagger module#\nclass steamship.plugin.tagger.Tagger(client: Steamship = None, config: Dict[str, Any] = None, context: InvocationContext = None)[source]# \nBases: PluginService[BlockAndTagPluginInput, BlockAndTagPluginOutput], ABC\nabstract run(request: PluginRequest[BlockAndTagPluginInput]) → InvocableResponse[BlockAndTagPluginOutput][source]# \nRuns the core operation implemented by this plugin: import, export, blockify, tag, etc.\nThis is the method that a Steamship Plugin implements to perform its main work.\nrun_endpoint(**kwargs) → InvocableResponse[BlockAndTagPluginOutput][source]# \nExposes the Tagger’s run operation to the Steamship Engine via the expected HTTP path POST /tag\nclass steamship.plugin.tagger.TrainableTagger(client: Steamship = None, config: Dict[str, Any] = None, context: InvocationContext = None)[source]# \nBases: TrainablePluginService[BlockAndTagPluginInput, BlockAndTagPluginOutput], ABC\nget_training_parameters_endpoint(**kwargs) → InvocableResponse[TrainingParameterPluginOutput][source]# \nExposes the Service’s get_training_parameters operation to the Steamship Engine via the expected HTTP path POST /getTrainingParameters\nrun_endpoint(**kwargs) → InvocableResponse[BlockAndTagPluginOutput][source]# \nExposes the Tagger’s run operation to the Steamship Engine via the expected HTTP path POST /tag\nabstract run_with_model(request: PluginRequest[BlockAndTagPluginInput], model: TrainableModel) → InvocableResponse[BlockAndTagPluginOutput][source]# \nRather than implementing run(request), a TrainablePluginService implements run_with_model(request, model)\ntrain_endpoint(**kwargs) → InvocableResponse[TrainPluginOutput][source]# \nExposes the Service’s train operation to the Steamship Engine via the expected HTTP path POST /train\nsteamship.plugin.trainable_model module#\nclass steamship.plugin.trainable_model.TrainableModel[source]# \nBases: ABC, Generic[ConfigType]\nBase class for trainable models.\nTrainable models are not plugins. They are a thin wrapper around the state of a model designed to be used with the Steamship plugin system.\n# State Management\n100% of a TrainableModel’s state management should save to & read from a folder on disk via the methods save_to_folder and load_from_folder.\n# Remote Saving and Loading\nTrainableModel instances automatically save to a user’s Workspace on Steamship via save_remote method. They can load themselves from a user’s workspace via the load_remote method.\nWhen saving a model, the caller provides handle, such as “V1” or “epoch_23”. This allows that particular checkpoint to be re-loaded. By default, every save operation also saves the model to the “default” checkpoint, overwriting it if it already existed. When a user loads a model without specifying a checkpoint, the “default” checkpoint will be used.\n# Data Scope\nA TrainableModel’s data is saved & loaded with respect to\nThe user’s active Workspace, and\nThe provided Plugin Instance within that workspace.\nThe active workspace is read from the Steamship client context, and the plugin_instance_id is supplied as a method argument on the save_remote and load_remote methods.\nThis organization enables a user to have arbitrarily many trained model instances of the same type colocated within a Workspace.\n# Training\nA training job is fully parameterized by the TrainPluginInput object.\n# Result Reporting\nA training job’s results are reported via the TrainPluginOutput object. These results include a reference to the save_remote output, but they do not include the model parameters themselves. For example, after training, one could write:\n>>> archive_path_in_steamship = model.save_remote(..)\n>>> output = TrainPluginOutput(archive_path_in_steamship=archive_path_in_steamship,\n...\n)\nThat output is the ultimate return object of the training process, but the Plugin that owns this model need not wait for synchronous completion to update the Steamship Engine with intermediate results. It can use the Response.post_update to proactively stream results back to the server.\n# Third-party / External Models\nThis model class is a convenient wrapper for models running on third party systems (e.g. Google’s AutoML). In such a case:\nThe train method would begin the job on the 3rd party system.\nThe save_to_folder method would write the Job ID and any other useful data to the checkpoint path\nThe load_from_folder method would read this Job ID from disk and obtain an authenticated client with the third party system.\nAny run method the implementer created would ferry back results fetched from the third-party system.\nAny status reporting in TrainPluginOutput would ferry back status fetched from the third-party system.\nconfig: ConfigType = None# \nabstract load_from_folder(checkpoint_path: Path)[source]# \nLoad 100% of the state of this model to the provided path.\nclassmethod load_from_local_checkpoint(checkpoint: ModelCheckpoint, config: ConfigType)[source]# \nclassmethod load_remote(client: Client, plugin_instance_id: str, checkpoint_handle: str | None = None, use_cache: bool = True, model_parent_directory: Path = None, plugin_instance_config: ConfigType = None)[source]# \nreceive_config(config: ConfigType)[source]# \nStores config from plugin instance, so it is accessible by model on load or train.\nsave_remote(client: Client, plugin_instance_id: str, checkpoint_handle: str | None = None, model_parent_directory: Path = None, set_as_default: bool = True) → str[source]# \nabstract save_to_folder(checkpoint_path: Path)[source]# \nSaves 100% of the state of this model to the provided path.\nabstract train(input: PluginRequest[TrainPluginInput]) → InvocableResponse[TrainPluginOutput][source]# \nTrain or fine-tune the model, parameterized by the information in the TrainPluginInput object.\nabstract train_status(input: PluginRequest[TrainPluginInput]) → InvocableResponse[TrainPluginOutput][source]# \nCheck on the status of an in-process training job, if it is running externally asynchronously.\nModule contents#",
  "markdown": "Toggle table of contents sidebar\n\n## steamship.plugin package[#](#steamship-plugin-package \"Link to this heading\")\n\n## Subpackages[#](#subpackages \"Link to this heading\")\n\n*   [steamship.plugin.blockifier package](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html)\n    *   [Submodules](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#submodules)\n    *   [steamship.plugin.blockifier.blockifier module](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship-plugin-blockifier-blockifier-module)\n        *   [`Blockifier`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.blockifier.Blockifier)\n            *   [`Blockifier.run()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.blockifier.Blockifier.run)\n            *   [`Blockifier.run_endpoint()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.blockifier.Blockifier.run_endpoint)\n    *   [steamship.plugin.blockifier.transcriber module](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship-plugin-blockifier-transcriber-module)\n        *   [`Transcriber`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.transcriber.Transcriber)\n            *   [`Transcriber.get_transcript()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.transcriber.Transcriber.get_transcript)\n            *   [`Transcriber.run()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.transcriber.Transcriber.run)\n            *   [`Transcriber.start_transcription()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.transcriber.Transcriber.start_transcription)\n    *   [Module contents](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#module-contents)\n        *   [`Blockifier`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.Blockifier)\n            *   [`Blockifier.run()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.Blockifier.run)\n            *   [`Blockifier.run_endpoint()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.Blockifier.run_endpoint)\n        *   [`Transcriber`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.Transcriber)\n            *   [`Transcriber.get_transcript()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.Transcriber.get_transcript)\n            *   [`Transcriber.run()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.Transcriber.run)\n            *   [`Transcriber.start_transcription()`](https://docs.steamship.com/api-reference/steamship.plugin.blockifier.html#steamship.plugin.blockifier.Transcriber.start_transcription)\n*   [steamship.plugin.inputs package](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html)\n    *   [Submodules](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#submodules)\n    *   [steamship.plugin.inputs.block\\_and\\_tag\\_plugin\\_input module](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship-plugin-inputs-block-and-tag-plugin-input-module)\n        *   [`BlockAndTagPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput)\n            *   [`BlockAndTagPluginInput.file`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput.file)\n    *   [steamship.plugin.inputs.export\\_plugin\\_input module](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship-plugin-inputs-export-plugin-input-module)\n        *   [`ExportPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.export_plugin_input.ExportPluginInput)\n            *   [`ExportPluginInput.filename`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.export_plugin_input.ExportPluginInput.filename)\n            *   [`ExportPluginInput.handle`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.export_plugin_input.ExportPluginInput.handle)\n            *   [`ExportPluginInput.id`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.export_plugin_input.ExportPluginInput.id)\n            *   [`ExportPluginInput.plugin_instance`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.export_plugin_input.ExportPluginInput.plugin_instance)\n            *   [`ExportPluginInput.query`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.export_plugin_input.ExportPluginInput.query)\n            *   [`ExportPluginInput.type`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.export_plugin_input.ExportPluginInput.type)\n    *   [steamship.plugin.inputs.file\\_import\\_plugin\\_input module](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship-plugin-inputs-file-import-plugin-input-module)\n        *   [`FileImportPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput)\n            *   [`FileImportPluginInput.data`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput.data)\n            *   [`FileImportPluginInput.mime_type`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput.mime_type)\n            *   [`FileImportPluginInput.plugin_instance`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput.plugin_instance)\n            *   [`FileImportPluginInput.url`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput.url)\n            *   [`FileImportPluginInput.value`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput.value)\n    *   [steamship.plugin.inputs.raw\\_block\\_and\\_tag\\_plugin\\_input module](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship-plugin-inputs-raw-block-and-tag-plugin-input-module)\n        *   [`RawBlockAndTagPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput)\n            *   [`RawBlockAndTagPluginInput.blocks`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput.blocks)\n            *   [`RawBlockAndTagPluginInput.options`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput.options)\n    *   [steamship.plugin.inputs.raw\\_data\\_plugin\\_input module](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship-plugin-inputs-raw-data-plugin-input-module)\n        *   [`RawDataPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_data_plugin_input.RawDataPluginInput)\n            *   [`RawDataPluginInput.data`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_data_plugin_input.RawDataPluginInput.data)\n            *   [`RawDataPluginInput.default_mime_type`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_data_plugin_input.RawDataPluginInput.default_mime_type)\n            *   [`RawDataPluginInput.plugin_instance`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_data_plugin_input.RawDataPluginInput.plugin_instance)\n        *   [`is_base64()`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_data_plugin_input.is_base64)\n    *   [steamship.plugin.inputs.train\\_plugin\\_input module](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship-plugin-inputs-train-plugin-input-module)\n        *   [`TrainPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput)\n            *   [`TrainPluginInput.inference_params`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput.inference_params)\n            *   [`TrainPluginInput.plugin_instance`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput.plugin_instance)\n            *   [`TrainPluginInput.test_split_seed`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput.test_split_seed)\n            *   [`TrainPluginInput.testing_holdout_percent`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput.testing_holdout_percent)\n            *   [`TrainPluginInput.training_data_url`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput.training_data_url)\n            *   [`TrainPluginInput.training_epochs`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput.training_epochs)\n            *   [`TrainPluginInput.training_params`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput.training_params)\n    *   [steamship.plugin.inputs.training\\_parameter\\_plugin\\_input module](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship-plugin-inputs-training-parameter-plugin-input-module)\n        *   [`TrainingParameterPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput)\n            *   [`TrainingParameterPluginInput.export_plugin_input`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput.export_plugin_input)\n            *   [`TrainingParameterPluginInput.inference_params`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput.inference_params)\n            *   [`TrainingParameterPluginInput.plugin_instance`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput.plugin_instance)\n            *   [`TrainingParameterPluginInput.test_split_seed`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput.test_split_seed)\n            *   [`TrainingParameterPluginInput.testing_holdout_percent`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput.testing_holdout_percent)\n            *   [`TrainingParameterPluginInput.training_epochs`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput.training_epochs)\n            *   [`TrainingParameterPluginInput.training_params`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput.training_params)\n    *   [Module contents](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#module-contents)\n*   [steamship.plugin.outputs package](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html)\n    *   [Submodules](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#submodules)\n    *   [steamship.plugin.outputs.block\\_and\\_tag\\_plugin\\_output module](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship-plugin-outputs-block-and-tag-plugin-output-module)\n        *   [`BlockAndTagPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput)\n            *   [`BlockAndTagPluginOutput.file`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput.file)\n    *   [steamship.plugin.outputs.embedded\\_items\\_plugin\\_output module](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship-plugin-outputs-embedded-items-plugin-output-module)\n        *   [`EmbeddedItemsPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.embedded_items_plugin_output.EmbeddedItemsPluginOutput)\n            *   [`EmbeddedItemsPluginOutput.embeddings`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.embedded_items_plugin_output.EmbeddedItemsPluginOutput.embeddings)\n    *   [steamship.plugin.outputs.model\\_checkpoint module](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship-plugin-outputs-model-checkpoint-module)\n        *   [`ModelCheckpoint`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint)\n            *   [`ModelCheckpoint.DEFAULT_HANDLE`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.DEFAULT_HANDLE)\n            *   [`ModelCheckpoint.archive_path_in_steamship()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.archive_path_in_steamship)\n            *   [`ModelCheckpoint.archive_path_on_disk()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.archive_path_on_disk)\n            *   [`ModelCheckpoint.client`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.client)\n            *   [`ModelCheckpoint.download_model_bundle()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.download_model_bundle)\n            *   [`ModelCheckpoint.folder_path_on_disk()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.folder_path_on_disk)\n            *   [`ModelCheckpoint.handle`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.handle)\n            *   [`ModelCheckpoint.parent_directory`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.parent_directory)\n            *   [`ModelCheckpoint.plugin_instance_id`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.plugin_instance_id)\n            *   [`ModelCheckpoint.upload_model_bundle()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.upload_model_bundle)\n            *   [`ModelCheckpoint.workspace`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.workspace)\n    *   [steamship.plugin.outputs.plugin\\_output module](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship-plugin-outputs-plugin-output-module)\n        *   [`OperationType`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationType)\n            *   [`OperationType.CREATE`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationType.CREATE)\n            *   [`OperationType.DELETE`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationType.DELETE)\n            *   [`OperationType.EXISTS`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationType.EXISTS)\n            *   [`OperationType.EXISTS_TRAINED`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationType.EXISTS_TRAINED)\n            *   [`OperationType.RUN`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationType.RUN)\n            *   [`OperationType.TRAIN`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationType.TRAIN)\n        *   [`OperationUnit`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationUnit)\n            *   [`OperationUnit.BYTES`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationUnit.BYTES)\n            *   [`OperationUnit.CHARACTERS`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationUnit.CHARACTERS)\n            *   [`OperationUnit.MS`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationUnit.MS)\n            *   [`OperationUnit.PROMPT_TOKENS`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationUnit.PROMPT_TOKENS)\n            *   [`OperationUnit.SAMPLED_TOKENS`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationUnit.SAMPLED_TOKENS)\n            *   [`OperationUnit.TOKENS`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationUnit.TOKENS)\n            *   [`OperationUnit.UNITS`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.OperationUnit.UNITS)\n        *   [`PluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.PluginOutput)\n            *   [`PluginOutput.usage`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.PluginOutput.usage)\n        *   [`UsageReport`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport)\n            *   [`UsageReport.audit_id`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport.audit_id)\n            *   [`UsageReport.audit_url`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport.audit_url)\n            *   [`UsageReport.operation_amount`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport.operation_amount)\n            *   [`UsageReport.operation_type`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport.operation_type)\n            *   [`UsageReport.operation_unit`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport.operation_unit)\n            *   [`UsageReport.run_characters()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport.run_characters)\n            *   [`UsageReport.run_tokens()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport.run_tokens)\n            *   [`UsageReport.run_units()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.plugin_output.UsageReport.run_units)\n    *   [steamship.plugin.outputs.raw\\_block\\_and\\_tag\\_plugin\\_output module](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship-plugin-outputs-raw-block-and-tag-plugin-output-module)\n        *   [`RawBlockAndTagPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput)\n            *   [`RawBlockAndTagPluginOutput.blocks`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput.blocks)\n    *   [steamship.plugin.outputs.raw\\_data\\_plugin\\_output module](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship-plugin-outputs-raw-data-plugin-output-module)\n        *   [`RawDataPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput)\n            *   [`RawDataPluginOutput.data`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput.data)\n            *   [`RawDataPluginOutput.mime_type`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput.mime_type)\n            *   [`RawDataPluginOutput.parse_obj()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput.parse_obj)\n            *   [`RawDataPluginOutput.tags`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput.tags)\n    *   [steamship.plugin.outputs.train\\_plugin\\_output module](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship-plugin-outputs-train-plugin-output-module)\n        *   [`TrainPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput)\n            *   [`TrainPluginOutput.archive_path`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput.archive_path)\n            *   [`TrainPluginOutput.inference_params`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput.inference_params)\n            *   [`TrainPluginOutput.plugin_instance_id`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput.plugin_instance_id)\n            *   [`TrainPluginOutput.training_progress`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput.training_progress)\n            *   [`TrainPluginOutput.training_results`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput.training_results)\n    *   [steamship.plugin.outputs.training\\_parameter\\_plugin\\_output module](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship-plugin-outputs-training-parameter-plugin-output-module)\n        *   [`TrainingParameterPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput)\n            *   [`TrainingParameterPluginOutput.export_request`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.export_request)\n            *   [`TrainingParameterPluginOutput.from_input()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.from_input)\n            *   [`TrainingParameterPluginOutput.inference_params`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.inference_params)\n            *   [`TrainingParameterPluginOutput.machine_type`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.machine_type)\n            *   [`TrainingParameterPluginOutput.parse_obj()`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.parse_obj)\n            *   [`TrainingParameterPluginOutput.test_split_seed`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.test_split_seed)\n            *   [`TrainingParameterPluginOutput.testing_holdout_percent`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.testing_holdout_percent)\n            *   [`TrainingParameterPluginOutput.training_epochs`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.training_epochs)\n            *   [`TrainingParameterPluginOutput.training_params`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput.training_params)\n    *   [Module contents](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#module-contents)\n\n## Submodules[#](#submodules \"Link to this heading\")\n\n## steamship.plugin.embedder module[#](#steamship-plugin-embedder-module \"Link to this heading\")\n\n_class_ steamship.plugin.embedder.Embedder(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _context: [InvocationContext](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.invocable_request.InvocationContext \"steamship.invocable.invocable_request.InvocationContext\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/embedder.html#Embedder)[#](#steamship.plugin.embedder.Embedder \"Link to this definition\")\n\nBases: [`PluginService`](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.plugin_service.PluginService \"steamship.invocable.plugin_service.PluginService\")\\[[`BlockAndTagPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput \"steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput\"), [`EmbeddedItemsPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.embedded_items_plugin_output.EmbeddedItemsPluginOutput \"steamship.plugin.outputs.embedded_items_plugin_output.EmbeddedItemsPluginOutput\")\\], [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\n_abstract_ run(_request: PluginRequest\\[[BlockAndTagPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput \"steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput\")\\]_) → InvocableResponse\\[[EmbeddedItemsPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.embedded_items_plugin_output.EmbeddedItemsPluginOutput \"steamship.plugin.outputs.embedded_items_plugin_output.EmbeddedItemsPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/embedder.html#Embedder.run)[#](#steamship.plugin.embedder.Embedder.run \"Link to this definition\")\n\nRuns the core operation implemented by this plugin: import, export, blockify, tag, etc.\n\nThis is the method that a Steamship Plugin implements to perform its main work.\n\nrun\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[EmbeddedItemsPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.embedded_items_plugin_output.EmbeddedItemsPluginOutput \"steamship.plugin.outputs.embedded_items_plugin_output.EmbeddedItemsPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/embedder.html#Embedder.run_endpoint)[#](#steamship.plugin.embedder.Embedder.run_endpoint \"Link to this definition\")\n\nExposes the Embedder’s run operation to the Steamship Engine via the expected HTTP path POST /tag\n\n## steamship.plugin.file\\_importer module[#](#steamship-plugin-file-importer-module \"Link to this heading\")\n\n_class_ steamship.plugin.file\\_importer.FileImporter(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _context: [InvocationContext](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.invocable_request.InvocationContext \"steamship.invocable.invocable_request.InvocationContext\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/file_importer.html#FileImporter)[#](#steamship.plugin.file_importer.FileImporter \"Link to this definition\")\n\nBases: [`PluginService`](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.plugin_service.PluginService \"steamship.invocable.plugin_service.PluginService\")\\[[`FileImportPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput \"steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput\"), [`RawDataPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput \"steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput\")\\], [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\n_abstract_ run(_request: PluginRequest\\[[FileImportPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput \"steamship.plugin.inputs.file_import_plugin_input.FileImportPluginInput\")\\]_) → InvocableResponse\\[[RawDataPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput \"steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/file_importer.html#FileImporter.run)[#](#steamship.plugin.file_importer.FileImporter.run \"Link to this definition\")\n\nRuns the core operation implemented by this plugin: import, export, blockify, tag, etc.\n\nThis is the method that a Steamship Plugin implements to perform its main work.\n\nrun\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[RawDataPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput \"steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/file_importer.html#FileImporter.run_endpoint)[#](#steamship.plugin.file_importer.FileImporter.run_endpoint \"Link to this definition\")\n\nExposes the File Importer’s run operation to the Steamship Engine via the expected HTTP path POST /import\n\n## steamship.plugin.generator module[#](#steamship-plugin-generator-module \"Link to this heading\")\n\n_class_ steamship.plugin.generator.Generator(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _context: [InvocationContext](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.invocable_request.InvocationContext \"steamship.invocable.invocable_request.InvocationContext\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#Generator)[#](#steamship.plugin.generator.Generator \"Link to this definition\")\n\nBases: [`PluginService`](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.plugin_service.PluginService \"steamship.invocable.plugin_service.PluginService\")\\[[`RawBlockAndTagPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput \"steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput\"), [`RawBlockAndTagPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput \"steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput\")\\], [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\n_abstract_ run(_request: PluginRequest\\[[RawBlockAndTagPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput \"steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput\")\\]_) → InvocableResponse\\[[RawBlockAndTagPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput \"steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#Generator.run)[#](#steamship.plugin.generator.Generator.run \"Link to this definition\")\n\nRuns the core operation implemented by this plugin: import, export, blockify, tag, etc.\n\nThis is the method that a Steamship Plugin implements to perform its main work.\n\nrun\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[RawBlockAndTagPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput \"steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#Generator.run_endpoint)[#](#steamship.plugin.generator.Generator.run_endpoint \"Link to this definition\")\n\nExposes the Tagger’s run operation to the Steamship Engine via the expected HTTP path POST /tag\n\nupload\\_block\\_content\\_to\\_signed\\_url(_block: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#Generator.upload_block_content_to_signed_url)[#](#steamship.plugin.generator.Generator.upload_block_content_to_signed_url \"Link to this definition\")\n\nRecreate the block (create request) as a URL request, rather than direct content, since we can’t do a multipart file upload from here.\n\n_class_ steamship.plugin.generator.TrainableGenerator(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _context: [InvocationContext](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.invocable_request.InvocationContext \"steamship.invocable.invocable_request.InvocationContext\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#TrainableGenerator)[#](#steamship.plugin.generator.TrainableGenerator \"Link to this definition\")\n\nBases: [`TrainablePluginService`](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.plugin_service.TrainablePluginService \"steamship.invocable.plugin_service.TrainablePluginService\")\\[[`RawBlockAndTagPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput \"steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput\"), [`RawBlockAndTagPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput \"steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput\")\\], [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nget\\_training\\_parameters\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[TrainingParameterPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput \"steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#TrainableGenerator.get_training_parameters_endpoint)[#](#steamship.plugin.generator.TrainableGenerator.get_training_parameters_endpoint \"Link to this definition\")\n\nExposes the Service’s get\\_training\\_parameters operation to the Steamship Engine via the expected HTTP path POST /getTrainingParameters\n\nrun\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[RawBlockAndTagPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput \"steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#TrainableGenerator.run_endpoint)[#](#steamship.plugin.generator.TrainableGenerator.run_endpoint \"Link to this definition\")\n\nExposes the Tagger’s run operation to the Steamship Engine via the expected HTTP path POST /generate\n\n_abstract_ run\\_with\\_model(_request: PluginRequest\\[[RawBlockAndTagPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput \"steamship.plugin.inputs.raw_block_and_tag_plugin_input.RawBlockAndTagPluginInput\")\\]_, _model: [TrainableModel](#steamship.plugin.trainable_model.TrainableModel \"steamship.plugin.trainable_model.TrainableModel\")_) → InvocableResponse\\[[RawBlockAndTagPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput \"steamship.plugin.outputs.raw_block_and_tag_plugin_output.RawBlockAndTagPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#TrainableGenerator.run_with_model)[#](#steamship.plugin.generator.TrainableGenerator.run_with_model \"Link to this definition\")\n\nRather than implementing run(request), a TrainablePluginService implements run\\_with\\_model(request, model)\n\ntrain\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[TrainPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput \"steamship.plugin.outputs.train_plugin_output.TrainPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/generator.html#TrainableGenerator.train_endpoint)[#](#steamship.plugin.generator.TrainableGenerator.train_endpoint \"Link to this definition\")\n\nExposes the Service’s train operation to the Steamship Engine via the expected HTTP path POST /train\n\n## steamship.plugin.request module[#](#steamship-plugin-request-module \"Link to this heading\")\n\n_class_ steamship.plugin.request.PluginRequest(_\\*_, _data: T | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _context: [PluginRequestContext](#steamship.plugin.request.PluginRequestContext \"steamship.plugin.request.PluginRequestContext\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _status: [Task](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.tasks.Task \"steamship.base.tasks.Task\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _isStatusCheck: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/request.html#PluginRequest)[#](#steamship.plugin.request.PluginRequest \"Link to this definition\")\n\nBases: `GenericModel`, [`Generic`](https://docs.python.org/3.11/library/typing.html#typing.Generic \"(in Python v3.11)\")\\[`T`\\]\n\n_class_ Config[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/request.html#PluginRequest.Config)[#](#steamship.plugin.request.PluginRequest.Config \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\nalias\\_generator() → [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")[#](#steamship.plugin.request.PluginRequest.Config.alias_generator \"Link to this definition\")\n\nallow\\_population\\_by\\_field\\_name _\\= True_[#](#steamship.plugin.request.PluginRequest.Config.allow_population_by_field_name \"Link to this definition\")\n\ncontext_: [PluginRequestContext](#steamship.plugin.request.PluginRequestContext \"steamship.plugin.request.PluginRequestContext\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequest.context \"Link to this definition\")\n\ndata_: T | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequest.data \"Link to this definition\")\n\nis\\_status\\_check_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequest.is_status_check \"Link to this definition\")\n\nstatus_: [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequest.status \"Link to this definition\")\n\n_class_ steamship.plugin.request.PluginRequestContext(_\\*_, _pluginId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginVersionId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginVersionHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginInstanceId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginInstanceHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/request.html#PluginRequestContext)[#](#steamship.plugin.request.PluginRequestContext \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nContains the context in which\n\nplugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequestContext.plugin_handle \"Link to this definition\")\n\nplugin\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequestContext.plugin_id \"Link to this definition\")\n\nplugin\\_instance\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequestContext.plugin_instance_handle \"Link to this definition\")\n\nplugin\\_instance\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequestContext.plugin_instance_id \"Link to this definition\")\n\nplugin\\_version\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequestContext.plugin_version_handle \"Link to this definition\")\n\nplugin\\_version\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.plugin.request.PluginRequestContext.plugin_version_id \"Link to this definition\")\n\n## steamship.plugin.tagger module[#](#steamship-plugin-tagger-module \"Link to this heading\")\n\n_class_ steamship.plugin.tagger.Tagger(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _context: [InvocationContext](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.invocable_request.InvocationContext \"steamship.invocable.invocable_request.InvocationContext\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/tagger.html#Tagger)[#](#steamship.plugin.tagger.Tagger \"Link to this definition\")\n\nBases: [`PluginService`](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.plugin_service.PluginService \"steamship.invocable.plugin_service.PluginService\")\\[[`BlockAndTagPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput \"steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput\"), [`BlockAndTagPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput \"steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput\")\\], [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\n_abstract_ run(_request: PluginRequest\\[[BlockAndTagPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput \"steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput\")\\]_) → InvocableResponse\\[[BlockAndTagPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput \"steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/tagger.html#Tagger.run)[#](#steamship.plugin.tagger.Tagger.run \"Link to this definition\")\n\nRuns the core operation implemented by this plugin: import, export, blockify, tag, etc.\n\nThis is the method that a Steamship Plugin implements to perform its main work.\n\nrun\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[BlockAndTagPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput \"steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/tagger.html#Tagger.run_endpoint)[#](#steamship.plugin.tagger.Tagger.run_endpoint \"Link to this definition\")\n\nExposes the Tagger’s run operation to the Steamship Engine via the expected HTTP path POST /tag\n\n_class_ steamship.plugin.tagger.TrainableTagger(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _context: [InvocationContext](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.invocable_request.InvocationContext \"steamship.invocable.invocable_request.InvocationContext\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/tagger.html#TrainableTagger)[#](#steamship.plugin.tagger.TrainableTagger \"Link to this definition\")\n\nBases: [`TrainablePluginService`](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.plugin_service.TrainablePluginService \"steamship.invocable.plugin_service.TrainablePluginService\")\\[[`BlockAndTagPluginInput`](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput \"steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput\"), [`BlockAndTagPluginOutput`](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput \"steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput\")\\], [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nget\\_training\\_parameters\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[TrainingParameterPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput \"steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/tagger.html#TrainableTagger.get_training_parameters_endpoint)[#](#steamship.plugin.tagger.TrainableTagger.get_training_parameters_endpoint \"Link to this definition\")\n\nExposes the Service’s get\\_training\\_parameters operation to the Steamship Engine via the expected HTTP path POST /getTrainingParameters\n\nrun\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[BlockAndTagPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput \"steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/tagger.html#TrainableTagger.run_endpoint)[#](#steamship.plugin.tagger.TrainableTagger.run_endpoint \"Link to this definition\")\n\nExposes the Tagger’s run operation to the Steamship Engine via the expected HTTP path POST /tag\n\n_abstract_ run\\_with\\_model(_request: PluginRequest\\[[BlockAndTagPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput \"steamship.plugin.inputs.block_and_tag_plugin_input.BlockAndTagPluginInput\")\\]_, _model: [TrainableModel](#steamship.plugin.trainable_model.TrainableModel \"steamship.plugin.trainable_model.TrainableModel\")_) → InvocableResponse\\[[BlockAndTagPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput \"steamship.plugin.outputs.block_and_tag_plugin_output.BlockAndTagPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/tagger.html#TrainableTagger.run_with_model)[#](#steamship.plugin.tagger.TrainableTagger.run_with_model \"Link to this definition\")\n\nRather than implementing run(request), a TrainablePluginService implements run\\_with\\_model(request, model)\n\ntrain\\_endpoint(_\\*\\*kwargs_) → InvocableResponse\\[[TrainPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput \"steamship.plugin.outputs.train_plugin_output.TrainPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/tagger.html#TrainableTagger.train_endpoint)[#](#steamship.plugin.tagger.TrainableTagger.train_endpoint \"Link to this definition\")\n\nExposes the Service’s train operation to the Steamship Engine via the expected HTTP path POST /train\n\n## steamship.plugin.trainable\\_model module[#](#steamship-plugin-trainable-model-module \"Link to this heading\")\n\n_class_ steamship.plugin.trainable\\_model.TrainableModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel)[#](#steamship.plugin.trainable_model.TrainableModel \"Link to this definition\")\n\nBases: [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\"), [`Generic`](https://docs.python.org/3.11/library/typing.html#typing.Generic \"(in Python v3.11)\")\\[`ConfigType`\\]\n\nBase class for trainable models.\n\nTrainable models are not plugins. They are a thin wrapper around the state of a model designed to be **used with** the Steamship plugin system.\n\n\\# State Management\n\n100% of a TrainableModel’s state management should save to & read from a folder on disk via the methods save\\_to\\_folder and load\\_from\\_folder.\n\n\\# Remote Saving and Loading\n\nTrainableModel instances automatically save to a user’s Workspace on Steamship via save\\_remote method. They can load themselves from a user’s workspace via the load\\_remote method.\n\nWhen saving a model, the caller provides handle, such as “V1” or “epoch\\_23”. This allows that particular checkpoint to be re-loaded. By default, every save operation also saves the model to the “default” checkpoint, overwriting it if it already existed. When a user loads a model without specifying a checkpoint, the “default” checkpoint will be used.\n\n\\# Data Scope\n\nA TrainableModel’s data is saved & loaded with respect to\n\n1.  The user’s active Workspace, and\n    \n2.  The provided Plugin Instance within that workspace.\n    \n\nThe active workspace is read from the Steamship client context, and the plugin\\_instance\\_id is supplied as a method argument on the save\\_remote and load\\_remote methods.\n\nThis organization enables a user to have arbitrarily many trained model instances of the same type colocated within a Workspace.\n\n\\# Training\n\nA training job is fully parameterized by the TrainPluginInput object.\n\n\\# Result Reporting\n\nA training job’s results are reported via the TrainPluginOutput object. These results include a reference to the save\\_remote output, but they do not include the model parameters themselves. For example, after training, one could write:\n\n\\>>> archive\\_path\\_in\\_steamship \\= model.save\\_remote(..)\n\\>>> output \\= TrainPluginOutput(archive\\_path\\_in\\_steamship\\=archive\\_path\\_in\\_steamship,\n    ...\n    )\n\nThat output is the ultimate return object of the training process, but the Plugin that owns this model need not wait for synchronous completion to update the Steamship Engine with intermediate results. It can use the Response.post\\_update to proactively stream results back to the server.\n\n\\# Third-party / External Models\n\nThis model class is a convenient wrapper for models running on third party systems (e.g. Google’s AutoML). In such a case:\n\n*   The train method would begin the job on the 3rd party system.\n    \n*   The save\\_to\\_folder method would write the Job ID and any other useful data to the checkpoint path\n    \n*   The load\\_from\\_folder method would read this Job ID from disk and obtain an authenticated client with the third party system.\n    \n*   Any run method the implementer created would ferry back results fetched from the third-party system.\n    \n*   Any status reporting in TrainPluginOutput would ferry back status fetched from the third-party system.\n    \n\nconfig_: ConfigType_ _\\= None_[#](#steamship.plugin.trainable_model.TrainableModel.config \"Link to this definition\")\n\n_abstract_ load\\_from\\_folder(_checkpoint\\_path: [Path](https://docs.python.org/3.11/library/pathlib.html#pathlib.Path \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel.load_from_folder)[#](#steamship.plugin.trainable_model.TrainableModel.load_from_folder \"Link to this definition\")\n\nLoad 100% of the state of this model to the provided path.\n\n_classmethod_ load\\_from\\_local\\_checkpoint(_checkpoint: [ModelCheckpoint](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint \"steamship.plugin.outputs.model_checkpoint.ModelCheckpoint\")_, _config: ConfigType_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel.load_from_local_checkpoint)[#](#steamship.plugin.trainable_model.TrainableModel.load_from_local_checkpoint \"Link to this definition\")\n\n_classmethod_ load\\_remote(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _plugin\\_instance\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _checkpoint\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _use\\_cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _model\\_parent\\_directory: [Path](https://docs.python.org/3.11/library/pathlib.html#pathlib.Path \"(in Python v3.11)\") \\= None_, _plugin\\_instance\\_config: ConfigType \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel.load_remote)[#](#steamship.plugin.trainable_model.TrainableModel.load_remote \"Link to this definition\")\n\nreceive\\_config(_config: ConfigType_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel.receive_config)[#](#steamship.plugin.trainable_model.TrainableModel.receive_config \"Link to this definition\")\n\nStores config from plugin instance, so it is accessible by model on load or train.\n\nsave\\_remote(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _plugin\\_instance\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _checkpoint\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _model\\_parent\\_directory: [Path](https://docs.python.org/3.11/library/pathlib.html#pathlib.Path \"(in Python v3.11)\") \\= None_, _set\\_as\\_default: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel.save_remote)[#](#steamship.plugin.trainable_model.TrainableModel.save_remote \"Link to this definition\")\n\n_abstract_ save\\_to\\_folder(_checkpoint\\_path: [Path](https://docs.python.org/3.11/library/pathlib.html#pathlib.Path \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel.save_to_folder)[#](#steamship.plugin.trainable_model.TrainableModel.save_to_folder \"Link to this definition\")\n\nSaves 100% of the state of this model to the provided path.\n\n_abstract_ train(_input: PluginRequest\\[[TrainPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput \"steamship.plugin.inputs.train_plugin_input.TrainPluginInput\")\\]_) → InvocableResponse\\[[TrainPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput \"steamship.plugin.outputs.train_plugin_output.TrainPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel.train)[#](#steamship.plugin.trainable_model.TrainableModel.train \"Link to this definition\")\n\nTrain or fine-tune the model, parameterized by the information in the TrainPluginInput object.\n\n_abstract_ train\\_status(_input: PluginRequest\\[[TrainPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.train_plugin_input.TrainPluginInput \"steamship.plugin.inputs.train_plugin_input.TrainPluginInput\")\\]_) → InvocableResponse\\[[TrainPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput \"steamship.plugin.outputs.train_plugin_output.TrainPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/plugin/trainable_model.html#TrainableModel.train_status)[#](#steamship.plugin.trainable_model.TrainableModel.train_status \"Link to this definition\")\n\nCheck on the status of an in-process training job, if it is running externally asynchronously.\n\n## Module contents[#](#module-contents \"Link to this heading\")"
},
{
  "url": "https://docs.steamship.com/plugins/using/importers/index",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/importers/index#file-importers",
    "loadedTime": "2023-08-17T22:19:35.127Z",
    "referrerUrl": "https://docs.steamship.com/plugins/using/importers/using",
    "depth": 2,
    "httpStatusCode": 404
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/importers/index#file-importers",
    "title": "404: This page could not be found",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "404\nThis page could not be found.",
  "markdown": "## 404\n\n## This page could not be found."
},
{
  "url": "https://docs.steamship.com/plugins/using/generators/index",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/using/generators/index#generators",
    "loadedTime": "2023-08-17T22:19:35.339Z",
    "referrerUrl": "https://docs.steamship.com/plugins/using/generators/dalle",
    "depth": 2,
    "httpStatusCode": 404
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/using/generators/index#generators",
    "title": "404: This page could not be found",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "404\nThis page could not be found.",
  "markdown": "## 404\n\n## This page could not be found."
},
{
  "url": "https://docs.steamship.com/http",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/http",
    "loadedTime": "2023-08-17T22:19:47.426Z",
    "referrerUrl": "https://docs.steamship.com/configuration",
    "depth": 2,
    "httpStatusCode": 404
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/http",
    "title": "404: This page could not be found",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "404\nThis page could not be found.",
  "markdown": "## 404\n\n## This page could not be found."
},
{
  "url": "https://docs.steamship.com/api-reference/steamship.data",
  "crawl": {
    "loadedUrl": "https://python-sdk.docs.steamship.com/api/steamship.data#steamship.data.file.File",
    "loadedTime": "2023-08-17T22:19:48.348Z",
    "referrerUrl": "https://docs.steamship.com/data/files",
    "depth": 2,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://python-sdk.docs.steamship.com/api/steamship.data#steamship.data.file.File",
    "title": "steamship.data package - Steamship Documentation",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": "en"
  },
  "screenshotUrl": null,
  "text": "steamship.data package#\nSubpackages#\nsteamship.data.operations package\nSubmodules\nsteamship.data.operations.blockifier module\nBlockifyRequest\nBlockifyRequest.handle\nBlockifyRequest.id\nBlockifyRequest.name\nBlockifyRequest.plugin_instance\nBlockifyRequest.type\nsteamship.data.operations.embedder module\nEmbedRequest\nEmbedRequest.docs\nEmbedRequest.metadata\nEmbedRequest.plugin_instance\nsteamship.data.operations.generator module\nGenerateRequest\nGenerateRequest.append_output_to_file\nGenerateRequest.block_query\nGenerateRequest.input_file_block_index_list\nGenerateRequest.input_file_end_block_index\nGenerateRequest.input_file_id\nGenerateRequest.input_file_start_block_index\nGenerateRequest.make_output_public\nGenerateRequest.options\nGenerateRequest.output_file_id\nGenerateRequest.plugin_instance\nGenerateRequest.text\nGenerateResponse\nGenerateResponse.blocks\nsteamship.data.operations.tagger module\nTagRequest\nTagRequest.file\nTagRequest.handle\nTagRequest.id\nTagRequest.name\nTagRequest.plugin_instance\nTagRequest.type\nTagResponse\nTagResponse.file\nModule contents\nsteamship.data.package package\nSubmodules\nsteamship.data.package.package module\nPackage\nPackage.client\nPackage.create()\nPackage.delete()\nPackage.description\nPackage.get()\nPackage.handle\nPackage.id\nPackage.is_public\nPackage.parse_obj()\nPackage.profile\nPackage.readme\nPackage.update()\nPackage.user_id\nPackageCreateRequest\nPackageCreateRequest.is_public\nPackageCreateRequest.profile\nPackageUpdateRequest\nPackageUpdateRequest.description\nPackageUpdateRequest.handle\nPackageUpdateRequest.id\nPackageUpdateRequest.profile\nPackageUpdateRequest.readme\nsteamship.data.package.package_instance module\nCreatePackageInstanceRequest\nCreatePackageInstanceRequest.config\nCreatePackageInstanceRequest.fetch_if_exists\nCreatePackageInstanceRequest.handle\nCreatePackageInstanceRequest.id\nCreatePackageInstanceRequest.local_development_url\nCreatePackageInstanceRequest.package_handle\nCreatePackageInstanceRequest.package_id\nCreatePackageInstanceRequest.package_version_handle\nCreatePackageInstanceRequest.package_version_id\nCreatePackageInstanceRequest.workspace_id\nPackageInstance\nPackageInstance.blocks_from_invoke()\nPackageInstance.client\nPackageInstance.config\nPackageInstance.create()\nPackageInstance.create_local_development_instance()\nPackageInstance.delete()\nPackageInstance.full_url_for()\nPackageInstance.get()\nPackageInstance.handle\nPackageInstance.id\nPackageInstance.init_status\nPackageInstance.invocation_url\nPackageInstance.invoke()\nPackageInstance.load_missing_workspace_handle()\nPackageInstance.package_handle\nPackageInstance.package_id\nPackageInstance.package_version_handle\nPackageInstance.package_version_id\nPackageInstance.parse_obj()\nPackageInstance.refresh_init_status()\nPackageInstance.task_from_invoke()\nPackageInstance.user_handle\nPackageInstance.user_id\nPackageInstance.wait_for_init()\nPackageInstance.workspace_handle\nPackageInstance.workspace_id\nsteamship.data.package.package_version module\nCreatePackageVersionRequest\nCreatePackageVersionRequest.config_template\nCreatePackageVersionRequest.handle\nCreatePackageVersionRequest.hosting_handler\nCreatePackageVersionRequest.package_id\nCreatePackageVersionRequest.type\nPackageVersion\nPackageVersion.client\nPackageVersion.config_template\nPackageVersion.create()\nPackageVersion.delete()\nPackageVersion.handle\nPackageVersion.id\nPackageVersion.package_id\nPackageVersion.parse_obj()\nModule contents\nPackage\nPackage.client\nPackage.create()\nPackage.delete()\nPackage.description\nPackage.get()\nPackage.handle\nPackage.id\nPackage.is_public\nPackage.parse_obj()\nPackage.profile\nPackage.readme\nPackage.update()\nPackage.user_id\nPackageInstance\nPackageInstance.blocks_from_invoke()\nPackageInstance.client\nPackageInstance.config\nPackageInstance.create()\nPackageInstance.create_local_development_instance()\nPackageInstance.delete()\nPackageInstance.full_url_for()\nPackageInstance.get()\nPackageInstance.handle\nPackageInstance.id\nPackageInstance.init_status\nPackageInstance.invocation_url\nPackageInstance.invoke()\nPackageInstance.load_missing_workspace_handle()\nPackageInstance.package_handle\nPackageInstance.package_id\nPackageInstance.package_version_handle\nPackageInstance.package_version_id\nPackageInstance.parse_obj()\nPackageInstance.refresh_init_status()\nPackageInstance.task_from_invoke()\nPackageInstance.user_handle\nPackageInstance.user_id\nPackageInstance.wait_for_init()\nPackageInstance.workspace_handle\nPackageInstance.workspace_id\nPackageVersion\nPackageVersion.client\nPackageVersion.config_template\nPackageVersion.create()\nPackageVersion.delete()\nPackageVersion.handle\nPackageVersion.id\nPackageVersion.package_id\nPackageVersion.parse_obj()\nsteamship.data.plugin package\nSubmodules\nsteamship.data.plugin.hosting module\nHostingCpu\nHostingCpu.LG\nHostingCpu.MAX\nHostingCpu.MD\nHostingCpu.MIN\nHostingCpu.SM\nHostingCpu.XL\nHostingCpu.XS\nHostingCpu.XXL\nHostingCpu.XXS\nHostingEnvironment\nHostingEnvironment.PYTHON38\nHostingEnvironment.STEAMSHIP_PYTORCH_CPU\nHostingMemory\nHostingMemory.LG\nHostingMemory.MAX\nHostingMemory.MD\nHostingMemory.MIN\nHostingMemory.SM\nHostingMemory.XL\nHostingMemory.XS\nHostingMemory.XXL\nHostingMemory.XXS\nHostingTimeout\nHostingTimeout.LG\nHostingTimeout.MAX\nHostingTimeout.MD\nHostingTimeout.MIN\nHostingTimeout.SM\nHostingTimeout.XL\nHostingTimeout.XS\nHostingTimeout.XXL\nHostingTimeout.XXS\nHostingType\nHostingType.ECS\nHostingType.LAMBDA\nsteamship.data.plugin.index_plugin_instance module\nEmbedderInvocation\nEmbedderInvocation.config\nEmbedderInvocation.fetch_if_exists\nEmbedderInvocation.instance_handle\nEmbedderInvocation.plugin_handle\nEmbedderInvocation.version\nEmbeddingIndexPluginInstance\nEmbeddingIndexPluginInstance.create()\nEmbeddingIndexPluginInstance.delete()\nEmbeddingIndexPluginInstance.embedder\nEmbeddingIndexPluginInstance.index\nEmbeddingIndexPluginInstance.insert()\nEmbeddingIndexPluginInstance.reset()\nEmbeddingIndexPluginInstance.search()\nSearchResult\nSearchResult.from_query_result()\nSearchResult.score\nSearchResult.tag\nSearchResults\nSearchResults.from_query_results()\nSearchResults.items\nSearchResults.to_ranked_blocks()\nsteamship.data.plugin.plugin module\nCreatePluginRequest\nCreatePluginRequest.description\nCreatePluginRequest.fetch_if_exists\nCreatePluginRequest.handle\nCreatePluginRequest.id\nCreatePluginRequest.is_public\nCreatePluginRequest.metadata\nCreatePluginRequest.training_platform\nCreatePluginRequest.transport\nCreatePluginRequest.type\nListPluginsRequest\nListPluginsRequest.type\nListPluginsResponse\nListPluginsResponse.plugins\nPlugin\nPlugin.client\nPlugin.create()\nPlugin.delete()\nPlugin.description\nPlugin.get()\nPlugin.handle\nPlugin.id\nPlugin.is_public\nPlugin.list()\nPlugin.metadata\nPlugin.parse_obj()\nPlugin.profile\nPlugin.readme\nPlugin.training_platform\nPlugin.transport\nPlugin.type\nPlugin.update()\nPlugin.user_id\nPluginAdapterType\nPluginAdapterType.huggingface\nPluginAdapterType.openai\nPluginAdapterType.steamship_docker\nPluginAdapterType.steamship_sagemaker\nPluginTargetType\nPluginTargetType.FILE\nPluginTargetType.WORKSPACE\nPluginType\nPluginType.classifier\nPluginType.embedder\nPluginType.generator\nPluginType.parser\nPluginType.tagger\nPluginUpdateRequest\nPluginUpdateRequest.description\nPluginUpdateRequest.handle\nPluginUpdateRequest.id\nPluginUpdateRequest.profile\nPluginUpdateRequest.readme\nsteamship.data.plugin.plugin_instance module\nCreatePluginInstanceRequest\nCreatePluginInstanceRequest.config\nCreatePluginInstanceRequest.fetch_if_exists\nCreatePluginInstanceRequest.handle\nCreatePluginInstanceRequest.id\nCreatePluginInstanceRequest.plugin_handle\nCreatePluginInstanceRequest.plugin_id\nCreatePluginInstanceRequest.plugin_version_handle\nCreatePluginInstanceRequest.plugin_version_id\nPluginInstance\nPluginInstance.client\nPluginInstance.config\nPluginInstance.create()\nPluginInstance.delete()\nPluginInstance.generate()\nPluginInstance.get()\nPluginInstance.get_training_parameters()\nPluginInstance.handle\nPluginInstance.hosting_cpu\nPluginInstance.hosting_environment\nPluginInstance.hosting_memory\nPluginInstance.hosting_timeout\nPluginInstance.hosting_type\nPluginInstance.id\nPluginInstance.init_status\nPluginInstance.parse_obj()\nPluginInstance.plugin_handle\nPluginInstance.plugin_id\nPluginInstance.plugin_version_handle\nPluginInstance.plugin_version_id\nPluginInstance.refresh_init_status()\nPluginInstance.tag()\nPluginInstance.train()\nPluginInstance.user_id\nPluginInstance.wait_for_init()\nPluginInstance.workspace_id\nsteamship.data.plugin.plugin_version module\nCreatePluginVersionRequest\nCreatePluginVersionRequest.config_template\nCreatePluginVersionRequest.handle\nCreatePluginVersionRequest.hosting_handler\nCreatePluginVersionRequest.hosting_memory\nCreatePluginVersionRequest.hosting_timeout\nCreatePluginVersionRequest.is_default\nCreatePluginVersionRequest.is_public\nCreatePluginVersionRequest.plugin_id\nCreatePluginVersionRequest.type\nListPluginVersionsRequest\nListPluginVersionsRequest.handle\nListPluginVersionsRequest.plugin_id\nListPluginVersionsResponse\nListPluginVersionsResponse.plugins\nPluginVersion\nPluginVersion.client\nPluginVersion.config_template\nPluginVersion.create()\nPluginVersion.delete()\nPluginVersion.handle\nPluginVersion.hosting_handler\nPluginVersion.hosting_memory\nPluginVersion.hosting_timeout\nPluginVersion.id\nPluginVersion.is_default\nPluginVersion.is_public\nPluginVersion.list()\nPluginVersion.parse_obj()\nPluginVersion.plugin_id\nsteamship.data.plugin.prompt_generation_plugin_instance module\nPromptGenerationPluginInstance\nPromptGenerationPluginInstance.create()\nPromptGenerationPluginInstance.generate()\nModule contents\nHostingCpu\nHostingCpu.LG\nHostingCpu.MAX\nHostingCpu.MD\nHostingCpu.MIN\nHostingCpu.SM\nHostingCpu.XL\nHostingCpu.XS\nHostingCpu.XXL\nHostingCpu.XXS\nHostingEnvironment\nHostingEnvironment.PYTHON38\nHostingEnvironment.STEAMSHIP_PYTORCH_CPU\nHostingMemory\nHostingMemory.LG\nHostingMemory.MAX\nHostingMemory.MD\nHostingMemory.MIN\nHostingMemory.SM\nHostingMemory.XL\nHostingMemory.XS\nHostingMemory.XXL\nHostingMemory.XXS\nHostingTimeout\nHostingTimeout.LG\nHostingTimeout.MAX\nHostingTimeout.MD\nHostingTimeout.MIN\nHostingTimeout.SM\nHostingTimeout.XL\nHostingTimeout.XS\nHostingTimeout.XXL\nHostingTimeout.XXS\nHostingType\nHostingType.ECS\nHostingType.LAMBDA\nPlugin\nPlugin.client\nPlugin.create()\nPlugin.delete()\nPlugin.description\nPlugin.get()\nPlugin.handle\nPlugin.id\nPlugin.is_public\nPlugin.list()\nPlugin.metadata\nPlugin.parse_obj()\nPlugin.profile\nPlugin.readme\nPlugin.training_platform\nPlugin.transport\nPlugin.type\nPlugin.update()\nPlugin.user_id\nPluginAdapterType\nPluginAdapterType.huggingface\nPluginAdapterType.openai\nPluginAdapterType.steamship_docker\nPluginAdapterType.steamship_sagemaker\nPluginInstance\nPluginInstance.client\nPluginInstance.config\nPluginInstance.create()\nPluginInstance.delete()\nPluginInstance.generate()\nPluginInstance.get()\nPluginInstance.get_training_parameters()\nPluginInstance.handle\nPluginInstance.hosting_cpu\nPluginInstance.hosting_environment\nPluginInstance.hosting_memory\nPluginInstance.hosting_timeout\nPluginInstance.hosting_type\nPluginInstance.id\nPluginInstance.init_status\nPluginInstance.parse_obj()\nPluginInstance.plugin_handle\nPluginInstance.plugin_id\nPluginInstance.plugin_version_handle\nPluginInstance.plugin_version_id\nPluginInstance.refresh_init_status()\nPluginInstance.tag()\nPluginInstance.train()\nPluginInstance.user_id\nPluginInstance.wait_for_init()\nPluginInstance.workspace_id\nPluginTargetType\nPluginTargetType.FILE\nPluginTargetType.WORKSPACE\nPluginType\nPluginType.classifier\nPluginType.embedder\nPluginType.generator\nPluginType.parser\nPluginType.tagger\nPluginVersion\nPluginVersion.client\nPluginVersion.config_template\nPluginVersion.create()\nPluginVersion.delete()\nPluginVersion.handle\nPluginVersion.hosting_handler\nPluginVersion.hosting_memory\nPluginVersion.hosting_timeout\nPluginVersion.id\nPluginVersion.is_default\nPluginVersion.is_public\nPluginVersion.list()\nPluginVersion.parse_obj()\nPluginVersion.plugin_id\nsteamship.data.tags package\nSubmodules\nsteamship.data.tags.tag module\nEmbeddingTag\nEmotionTag\nEmotionTag.Emotion\nEntityTag\nEntityTag.EntityType\nIntentTag\nIntentTag.Intent\nPromptCompletionTag\nSentimentTag\nSentimentTag.Sentiment\nSummaryTag\nTag\nTag.DeleteRequest\nTag.ListRequest\nTag.ListResponse\nTag.block_id\nTag.client\nTag.create()\nTag.delete()\nTag.end_idx\nTag.file_id\nTag.id\nTag.index()\nTag.kind\nTag.name\nTag.parse_obj()\nTag.query()\nTag.start_idx\nTag.text\nTag.value\nTagQueryRequest\nTagQueryRequest.tag_filter_query\nTagQueryResponse\nTagQueryResponse.tags\nTimestampTag\nTokenizationTag\nTokenizationTag.Type\nTopicTag\nsteamship.data.tags.tag_constants module\nChatTag\nChatTag.CHAT_ID\nChatTag.CHUNK\nChatTag.CONTEXT_KEYS\nChatTag.INDEX_HANDLE\nChatTag.MESSAGE_ID\nChatTag.ROLE\nDocTag\nDocTag.ARTICLE\nDocTag.BLOCK_CODE\nDocTag.BLOCK_QUOTE\nDocTag.CAPTION\nDocTag.CHAPTER\nDocTag.CHAT\nDocTag.DIV\nDocTag.DOCUMENT\nDocTag.EMPHASIZED\nDocTag.FOOTER\nDocTag.H1\nDocTag.H2\nDocTag.H3\nDocTag.H4\nDocTag.H5\nDocTag.HEADER\nDocTag.IMAGE\nDocTag.LINE\nDocTag.LINK\nDocTag.LIST_ITEM\nDocTag.MAIN\nDocTag.METADATA\nDocTag.ORDERED_LIST\nDocTag.PAGE\nDocTag.PARAGRAPH\nDocTag.PRE\nDocTag.REGION\nDocTag.SENTENCE\nDocTag.SOURCE\nDocTag.SPAN\nDocTag.STRONG\nDocTag.SUBTITLE\nDocTag.TELETYPE\nDocTag.TEXT\nDocTag.TITLE\nDocTag.TOKEN\nDocTag.UNDERLINED\nDocTag.UNKNOWN\nDocTag.UNORDERED_LIST\nDocTag.from_html_tag()\nGenerationTag\nGenerationTag.GIST\nGenerationTag.HEADLINE\nGenerationTag.PROMPT_COMPLETION\nGenerationTag.SUMMARY\nProvenanceTag\nProvenanceTag.FILE\nProvenanceTag.SPEAKER\nProvenanceTag.URL\nRoleTag\nRoleTag.AGENT\nRoleTag.ASSISTANT\nRoleTag.FUNCTION\nRoleTag.SYSTEM\nRoleTag.USER\nTagKind\nTagKind.CHAT\nTagKind.CHAT_HISTORY_CONTEXT\nTagKind.DEPENDENCY\nTagKind.DOCUMENT\nTagKind.EMBEDDING\nTagKind.EMOTION\nTagKind.ENTITY\nTagKind.GENERATION\nTagKind.INTENT\nTagKind.KIND\nTagKind.MESSAGE_ID\nTagKind.PART_OF_SPEECH\nTagKind.PROVENANCE\nTagKind.ROLE\nTagKind.SEARCH_RESULT\nTagKind.SENTIMENT\nTagKind.SUMMARY\nTagKind.TIMESTAMP\nTagKind.TOKEN\nTagKind.TOKENIZATION\nTagKind.TOPIC\nTagValueKey\nTagValueKey.BOOL_VALUE\nTagValueKey.DIRECT\nTagValueKey.END_TIME_S\nTagValueKey.ENTITY_NAME\nTagValueKey.NUMBER_VALUE\nTagValueKey.SCORE\nTagValueKey.START_TIME_S\nTagValueKey.STRING_VALUE\nTagValueKey.TIMESTAMP_VALUE\nTagValueKey.VALUE\nTagValueKey.VECTOR_VALUE\nTokenTag\nTokenTag.ENTITY_IOB\nTokenTag.ENTITY_TYPE\nTokenTag.HEAD\nTokenTag.IS_ALPHA\nTokenTag.IS_ASCII\nTokenTag.IS_BRACKET\nTokenTag.IS_CURRENCY\nTokenTag.IS_DIGIT\nTokenTag.IS_LEFT_PUNCT\nTokenTag.IS_OUT_OF_VOCABULARY\nTokenTag.IS_PUNCT\nTokenTag.IS_QUOTE\nTokenTag.IS_RIGHT_PUNCT\nTokenTag.IS_SPACE\nTokenTag.IS_STOPWORD\nTokenTag.IS_TITLE\nTokenTag.LANGUAGE\nTokenTag.LEFT_EDGE\nTokenTag.LEMMA\nTokenTag.LIKE_EMAIL\nTokenTag.LIKE_NUM\nTokenTag.LIKE_URL\nTokenTag.NORMALIZED\nTokenTag.PREFIX\nTokenTag.RIGHT_EDGE\nTokenTag.SHAPE\nTokenTag.SUFFIX\nTokenTag.TEXT\nTokenTag.TEXT_WITH_WHITESPACE\nTokenTag.WHITESPACE\nModule contents\nDocTag\nDocTag.ARTICLE\nDocTag.BLOCK_CODE\nDocTag.BLOCK_QUOTE\nDocTag.CAPTION\nDocTag.CHAPTER\nDocTag.CHAT\nDocTag.DIV\nDocTag.DOCUMENT\nDocTag.EMPHASIZED\nDocTag.FOOTER\nDocTag.H1\nDocTag.H2\nDocTag.H3\nDocTag.H4\nDocTag.H5\nDocTag.HEADER\nDocTag.IMAGE\nDocTag.LINE\nDocTag.LINK\nDocTag.LIST_ITEM\nDocTag.MAIN\nDocTag.METADATA\nDocTag.ORDERED_LIST\nDocTag.PAGE\nDocTag.PARAGRAPH\nDocTag.PRE\nDocTag.REGION\nDocTag.SENTENCE\nDocTag.SOURCE\nDocTag.SPAN\nDocTag.STRONG\nDocTag.SUBTITLE\nDocTag.TELETYPE\nDocTag.TEXT\nDocTag.TITLE\nDocTag.TOKEN\nDocTag.UNDERLINED\nDocTag.UNKNOWN\nDocTag.UNORDERED_LIST\nDocTag.from_html_tag()\nGenerationTag\nGenerationTag.GIST\nGenerationTag.HEADLINE\nGenerationTag.PROMPT_COMPLETION\nGenerationTag.SUMMARY\nTag\nTag.DeleteRequest\nTag.ListRequest\nTag.ListResponse\nTag.block_id\nTag.client\nTag.create()\nTag.delete()\nTag.end_idx\nTag.file_id\nTag.id\nTag.index()\nTag.kind\nTag.name\nTag.parse_obj()\nTag.query()\nTag.start_idx\nTag.text\nTag.value\nTagKind\nTagKind.CHAT\nTagKind.CHAT_HISTORY_CONTEXT\nTagKind.DEPENDENCY\nTagKind.DOCUMENT\nTagKind.EMBEDDING\nTagKind.EMOTION\nTagKind.ENTITY\nTagKind.GENERATION\nTagKind.INTENT\nTagKind.KIND\nTagKind.MESSAGE_ID\nTagKind.PART_OF_SPEECH\nTagKind.PROVENANCE\nTagKind.ROLE\nTagKind.SEARCH_RESULT\nTagKind.SENTIMENT\nTagKind.SUMMARY\nTagKind.TIMESTAMP\nTagKind.TOKEN\nTagKind.TOKENIZATION\nTagKind.TOPIC\nTagValueKey\nTagValueKey.BOOL_VALUE\nTagValueKey.DIRECT\nTagValueKey.END_TIME_S\nTagValueKey.ENTITY_NAME\nTagValueKey.NUMBER_VALUE\nTagValueKey.SCORE\nTagValueKey.START_TIME_S\nTagValueKey.STRING_VALUE\nTagValueKey.TIMESTAMP_VALUE\nTagValueKey.VALUE\nTagValueKey.VECTOR_VALUE\nTokenTag\nTokenTag.ENTITY_IOB\nTokenTag.ENTITY_TYPE\nTokenTag.HEAD\nTokenTag.IS_ALPHA\nTokenTag.IS_ASCII\nTokenTag.IS_BRACKET\nTokenTag.IS_CURRENCY\nTokenTag.IS_DIGIT\nTokenTag.IS_LEFT_PUNCT\nTokenTag.IS_OUT_OF_VOCABULARY\nTokenTag.IS_PUNCT\nTokenTag.IS_QUOTE\nTokenTag.IS_RIGHT_PUNCT\nTokenTag.IS_SPACE\nTokenTag.IS_STOPWORD\nTokenTag.IS_TITLE\nTokenTag.LANGUAGE\nTokenTag.LEFT_EDGE\nTokenTag.LEMMA\nTokenTag.LIKE_EMAIL\nTokenTag.LIKE_NUM\nTokenTag.LIKE_URL\nTokenTag.NORMALIZED\nTokenTag.PREFIX\nTokenTag.RIGHT_EDGE\nTokenTag.SHAPE\nTokenTag.SUFFIX\nTokenTag.TEXT\nTokenTag.TEXT_WITH_WHITESPACE\nTokenTag.WHITESPACE\nSubmodules#\nsteamship.data.block module#\nclass steamship.data.block.Block(*, client: Client = None, id: str = None, fileId: str = None, text: str = None, tags: List[Tag] | None = [], index: int | None = None, mimeType: MimeTypes | None = None, publicData: bool = False, url: str | None = None, contentURL: str | None = None, uploadType: BlockUploadType | None = None, uploadBytes: bytes | None = None)[source]# \nBases: CamelModel\nA Block is a chunk of content within a File. It can be plain text content, image content, video content, etc. If the content is not text, the text value may be the empty string for backwards compatibility.\nclass ListRequest(*, fileId: str = None)[source]# \nBases: Request\nfile_id: str# \nclass ListResponse(*, blocks: List[Block] = [])[source]# \nBases: Response\nblocks: List[Block]# \nas_llm_input(exclude_block_wrapper: bool | None = False) → str[source]# \nproperty chat_id: str# \nproperty chat_role: RoleTag | None# \nclient: Client# \ncontent_url: str | None# \nstatic create(client: Client, file_id: str, text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None, public_data: bool = False) → Block[source]# \nCreate a new Block within a File specified by file_id.\nYou can create a Block in several ways: - Providing raw text as the text parameter; - Providing the content of the block as string or bytes; - Providing a publicly accessible URL where the content is stored.\ndelete() → Block[source]# \nfile_id: str# \nstatic get(client: Client, _id: str = None) → Block[source]# \nid: str# \nindex(embedding_plugin_instance: Any = None)[source]# \nIndex this block.\nindex_in_file: int | None# \nis_audio()[source]# \nReturn whether this is an audio Block.\nis_image()[source]# \nReturn whether this is an image Block.\nis_text() → bool[source]# \nReturn whether this is a text Block.\nis_video()[source]# \nReturn whether this is a video Block.\nproperty message_id: str# \nmime_type: MimeTypes | None# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \npublic_data: bool# \nstatic query(client: Client, tag_filter_query: str) → BlockQueryResponse[source]# \nraw()[source]# \nproperty raw_data_url: str | None# \nReturn a URL at which the data content of this Block can be accessed. If public_data is True, this content can be accessed without an API key.\nset_chat_id(chat_id: str)[source]# \nset_chat_role(role: RoleTag)[source]# \nset_message_id(message_id: str)[source]# \nset_public_data(public_data: bool)[source]# \nSet the public_data flag on this Block. If this object already exists server-side, update the flag.\ntags: List[Tag] | None# \ntext: str# \nto_public_url() → str[source]# \nReturn a public URL to access the Block’s data.\nupload_bytes: bytes | None# \nupload_type: BlockUploadType | None# \nurl: str | None# \nclass steamship.data.block.BlockQueryRequest(*, tagFilterQuery: str)[source]# \nBases: Request\ntag_filter_query: str# \nclass steamship.data.block.BlockQueryResponse(*, blocks: List[Block])[source]# \nBases: Response\nblocks: List[Block]# \nclass steamship.data.block.BlockUploadType(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nBLOCKS = 'blocks'# \nFILE = 'file'# \nNONE = 'none'# \nURL = 'url'# \nsteamship.data.block.get_tag_value_key(tags: List[Tag] | None, key: str, kind: str | None = None, name: str | None = None) → any | None[source]# \nIterates through a list of tags and returns the first that contains the provided Kind/Name/ValueKey.\nsteamship.data.embeddings module#\nclass steamship.data.embeddings.EmbedAndSearchRequest(*, query: str, docs: List[str], pluginInstance: str, k: int = 1)[source]# \nBases: Request\ndocs: List[str]# \nk: int# \nplugin_instance: str# \nquery: str# \nclass steamship.data.embeddings.EmbeddedItem(*, id: str = None, indexId: str = None, fileId: str = None, blockId: str = None, tagId: str = None, value: str = None, externalId: str = None, externalType: str = None, metadata: Any = None, embedding: List[float] = None)[source]# \nBases: CamelModel\nblock_id: str# \nclone_for_insert() → EmbeddedItem[source]# \nProduces a clone with a string representation of the metadata\nembedding: List[float]# \nexternal_id: str# \nexternal_type: str# \nfile_id: str# \nid: str# \nindex_id: str# \nmetadata: Any# \ntag_id: str# \nvalue: str# \nclass steamship.data.embeddings.EmbeddingIndex(*, client: Client = None, id: str = None, handle: str = None, name: str = None, plugin: str = None, externalId: str = None, externalType: str = None, metadata: str = None)[source]# \nBases: CamelModel\nA persistent, read-optimized index over embeddings.\nclient: Client# \nstatic create(client: Client, handle: str = None, name: str = None, embedder_plugin_instance_handle: str = None, fetch_if_exists: bool = True, external_id: str = None, external_type: str = None, metadata: Any = None) → EmbeddingIndex[source]# \ndelete() → EmbeddingIndex[source]# \nembed() → Task[IndexEmbedResponse][source]# \nexternal_id: str# \nexternal_type: str# \nhandle: str# \nid: str# \ninsert(value: str, external_id: str = None, external_type: str = None, metadata: int | float | bool | str | List | Dict = None, reindex: bool = True, allow_long_records=False) → IndexInsertResponse[source]# \ninsert_file(file_id: str, block_type: str = None, external_id: str = None, external_type: str = None, metadata: int | float | bool | str | List | Dict = None, reindex: bool = True) → IndexInsertResponse[source]# \ninsert_many(items: List[EmbeddedItem | str], reindex: bool = True, allow_long_records=False) → IndexInsertResponse[source]# \nlist_items(file_id: str = None, block_id: str = None, span_id: str = None, page_size: int | None = None, page_token: str | None = None, sort_order: SortOrder | None = SortOrder.DESC) → ListItemsResponse[source]# \nmetadata: str# \nname: str# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nplugin: str# \nsearch(query: str | List[str], k: int = 1, include_metadata: bool = False) → Task[QueryResults][source]# \nclass steamship.data.embeddings.IndexCreateRequest(*, handle: str = None, name: str = None, pluginInstance: str = None, fetchIfExists: bool = True, externalId: str = None, externalType: str = None, metadata: Any = None)[source]# \nBases: Request\nexternal_id: str# \nexternal_type: str# \nfetch_if_exists: bool# \nhandle: str# \nmetadata: Any# \nname: str# \nplugin_instance: str# \nclass steamship.data.embeddings.IndexEmbedRequest(*, id: str)[source]# \nBases: Request\nid: str# \nclass steamship.data.embeddings.IndexEmbedResponse(*, id: str | None = None)[source]# \nBases: Response\nid: str | None# \nclass steamship.data.embeddings.IndexInsertRequest(*, indexId: str, items: List[EmbeddedItem] = None, value: str = None, fileId: str = None, blockType: str = None, externalId: str = None, externalType: str = None, metadata: Any = None, reindex: bool = True)[source]# \nBases: Request\nblock_type: str# \nexternal_id: str# \nexternal_type: str# \nfile_id: str# \nindex_id: str# \nitems: List[EmbeddedItem]# \nmetadata: Any# \nreindex: bool# \nvalue: str# \nclass steamship.data.embeddings.IndexInsertResponse(*, itemIds: List[IndexItemId] = None)[source]# \nBases: Response\nitem_ids: List[IndexItemId]# \nclass steamship.data.embeddings.IndexItemId(*, indexId: str = None, id: str = None)[source]# \nBases: CamelModel\nid: str# \nindex_id: str# \nclass steamship.data.embeddings.IndexSearchRequest(*, id: str, query: str = None, queries: List[str] = None, k: int = 1, includeMetadata: bool = False)[source]# \nBases: Request\nid: str# \ninclude_metadata: bool# \nk: int# \nqueries: List[str]# \nquery: str# \nclass steamship.data.embeddings.ListItemsRequest(*, pageSize: int | None = None, pageToken: str | None = None, sortOrder: SortOrder | None = SortOrder.DESC, id: str = None, fileId: str = None, blockId: str = None, spanId: str = None)[source]# \nBases: ListRequest\nblock_id: str# \nfile_id: str# \nid: str# \nspan_id: str# \nclass steamship.data.embeddings.ListItemsResponse(*, nextPageToken: str | None = None, items: List[EmbeddedItem])[source]# \nBases: ListResponse\nitems: List[EmbeddedItem]# \nclass steamship.data.embeddings.QueryResult(*, value: Hit | None = None, score: float | None = None, index: int | None = None, id: str | None = None)[source]# \nBases: CamelModel\nid: str | None# \nindex: int | None# \nscore: float | None# \nvalue: Hit | None# \nclass steamship.data.embeddings.QueryResults(*, items: List[QueryResult] = None)[source]# \nBases: Request\nitems: List[QueryResult]# \nsteamship.data.file module#\nclass steamship.data.file.File(*, client: Client = None, id: str = None, handle: str = None, mimeType: MimeTypes = None, workspaceId: str = None, blocks: List[Block] = [], tags: List[Tag] = [], filename: str = None, publicData: bool = False)[source]# \nBases: CamelModel\nA file.\nclass CreateResponse(data: Any = None, string: str = None, _bytes: bytes | io.BytesIO = None, json: io.BytesIO = None, mime_type: str = None)[source]# \nBases: Response\ndata_: Any# \nmime_type: str# \nclassmethod parse_obj(obj: Any) → Response[source]# \nappend_block(text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None, public_data: bool = False) → Block[source]# \nAppend a new block to this File. This is a convenience wrapper around Block.create(). You should provide only one of text, content, or url.\nThis is a server-side operation, saving the new Block to the file. The new block is appended to this client-side File as well for convenience.\nblockify(plugin_instance: str = None, wait_on_tasks: List[Task] = None) → Task[source]# \nblocks: List[Block]# \nclient: Client# \nstatic create(client: Client, content: str | bytes = None, mime_type: MimeTypes = None, handle: str = None, blocks: List[Block] = None, tags: List[Tag] = None, public_data: bool = False) → Any[source]# \nstatic create_with_plugin(client: Client, plugin_instance: str, url: str = None, mime_type: str = None) → Task[File][source]# \ndelete() → File[source]# \nfilename: str# \nstatic from_local(client: Client, file_path: str, mime_type: MimeTypes = None, handle: str = None, tags: List[Tag] = None, public_data: bool = False) → Any[source]# \nLoads a local file into a Steamship File.\nNOTE: the file_path should be relative to where the call to from_local is happening.\nLoaded files will automatically be tagged with a provenance tag.\nParameters: \nclient – Steamship client for the workspace\nfile_path – Location of the file to upload relative to the current directory of the client\nmime_type – Optional specification of a particular mime type. If not provided, a guess will be made.\nhandle – Intended handle (for lookups, etc.) for Steamship File\ntags – Metadata to add to the Steamship File\npublic_data – Whether to make the Steamship File publicly-accessible\ngenerate(plugin_instance_handle: str, start_block_index: int = None, end_block_index: int | None = None, block_index_list: List[int] | None = None, append_output_to_file: bool = True, options: dict | None = None, wait_on_tasks: List[Task] = None, make_output_public: bool = False) → Task[GenerateResponse][source]# \nGenerate new content from this file. Assumes this file as context for input and output. May specify start and end blocks.\nstatic get(client: Client, _id: str = None, handle: str = None) → File[source]# \nhandle: str# \nid: str# \nimport_with_plugin(plugin_instance: str, url: str = None, mime_type: str = None) → Task[File][source]# \nRun an import operation on an (empty) file object that has already been created.\nindex(plugin_instance: Any = None) → EmbeddingIndex[source]# \nIndex every block in the file.\nTODO(ted): Enable indexing the results of a tag query. TODO(ted): It’s hard to load the EmbeddingIndexPluginInstance with just a handle because of the chain of things that need to be created to it to function.\nstatic list(client: Client, page_size: int | None = None, page_token: str | None = None, sort_order: SortOrder | None = SortOrder.DESC) → ListFileResponse[source]# \nmime_type: MimeTypes# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \npublic_data: bool# \nstatic query(client: Client, tag_filter_query: str) → FileQueryResponse[source]# \nraw()[source]# \nproperty raw_data_url: str | None# \nReturn a URL at which the data content of this File can be accessed. If public_data is True, this content can be accessed without an API key.\nrefresh() → File[source]# \nset_public_data(public_data: bool)[source]# \nSet the public_data flag on this File. If this object already exists server-side, update the flag.\ntag(plugin_instance: str = None, wait_on_tasks: List[Task] = None) → Task[TagResponse][source]# \ntags: List[Tag]# \nworkspace_id: str# \nclass steamship.data.file.FileClearResponse(*, id: str)[source]# \nBases: Response\nid: str# \nclass steamship.data.file.FileQueryRequest(*, tagFilterQuery: str)[source]# \nBases: Request\ntag_filter_query: str# \nclass steamship.data.file.FileQueryResponse(*, files: List[File])[source]# \nBases: Response\nfiles: List[File]# \nclass steamship.data.file.FileUploadType(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nBLOCKS = 'blocks'# \nFILE = 'file'# \nFILE_IMPORTER = 'fileImporter'# \nNONE = 'none'# \nclass steamship.data.file.ListFileRequest(*, pageSize: int | None = None, pageToken: str | None = None, sortOrder: SortOrder | None = SortOrder.DESC)[source]# \nBases: ListRequest\nclass steamship.data.file.ListFileResponse(*, nextPageToken: str | None = None, files: List[File])[source]# \nBases: ListResponse\nfiles: List[File]# \nsteamship.data.invocable_init_status module#\nclass steamship.data.invocable_init_status.InvocableInitStatus(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nCOMPLETE = 'complete'# \nFAILED = 'failed'# \nINITIALIZING = 'initializing'# \nNOT_NEEDED = 'notNeeded'# \nsteamship.data.manifest module#\nclass steamship.data.manifest.ConfigParameter(*, type: ConfigParameterType, description: str | None = None, default: StrictStr | StrictBool | StrictFloat | StrictInt | None = None)[source]# \nBases: BaseModel\ndefault: StrictStr | StrictBool | StrictFloat | StrictInt | None# \ndescription: str | None# \ntype: ConfigParameterType# \nclass steamship.data.manifest.ConfigParameterType(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nBOOLEAN = 'boolean'# \nNUMBER = 'number'# \nSTRING = 'string'# \nstatic from_python_type(t: Type)[source]# \nclass steamship.data.manifest.DeployableType(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nPACKAGE = 'package'# \nPLUGIN = 'plugin'# \nclass steamship.data.manifest.Manifest(*, type: DeployableType, handle: str, version: str, description: str | None = None, author: str | None = None, entrypoint: str = 'Unused', public: bool, plugin: PluginConfig | None = None, build_config: Dict[str, List[str]] = {'ignore': []}, configTemplate: Dict[str, ConfigParameter] | None = None, steamshipRegistry: SteamshipRegistry)[source]# \nBases: BaseModel\nbuild_config: Dict[str, List[str]]# \nconfigTemplate: Dict[str, ConfigParameter] | None# \nconfig_template_as_dict()[source]# \ndescription: str | None# \nentrypoint: str# \nhandle: str# \nstatic load_manifest() → Manifest[source]# \nplugin: PluginConfig | None# \npublic: bool# \nsave()[source]# \nsteamshipRegistry: SteamshipRegistry# \ntype: DeployableType# \nversion: str# \nclass steamship.data.manifest.PluginConfig(*, isTrainable: bool | None = False, transport: str = 'jsonOverHttp', type: str)[source]# \nBases: BaseModel\nisTrainable: bool | None# \ntransport: str# \ntype: str# \nclass steamship.data.manifest.SteamshipRegistry(*, tagline: str | None = None, tagline2: str | None = None, usefulFor: str | None = None, videoUrl: str | None = None, githubUrl: str | None = None, demoUrl: str | None = None, blogUrl: str | None = None, jupyterUrl: str | None = None, authorGithub: str | None = None, authorName: str | None = None, authorEmail: str | None = None, authorTwitter: str | None = None, authorUrl: str | None = None, tags: List[str])[source]# \nBases: BaseModel\nauthorEmail: str | None# \nauthorGithub: str | None# \nauthorName: str | None# \nauthorTwitter: str | None# \nauthorUrl: str | None# \nblogUrl: str | None# \ndemoUrl: str | None# \ngithubUrl: str | None# \njupyterUrl: str | None# \ntagline: str | None# \ntagline2: str | None# \ntags: List[str]# \nusefulFor: str | None# \nvideoUrl: str | None# \nsteamship.data.search module#\nclass steamship.data.search.Hit(*, id: str = None, index: int = None, indexSource: str = None, value: str = None, score: float = None, externalId: str = None, externalType: str = None, metadata: Any = None, query: str = None)[source]# \nBases: CamelModel\nexternal_id: str# \nexternal_type: str# \nid: str# \nindex: int# \nindex_source: str# \nmetadata: Any# \nquery: str# \nscore: float# \nvalue: str# \nsteamship.data.user module#\nclass steamship.data.user.User(*, client: Client = None, id: str = None, handle: str = None)[source]# \nBases: CamelModel\nclient: Client# \nstatic current(client: Client) → User[source]# \nhandle: str# \nid: str# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nsteamship.data.workspace module#\nclass steamship.data.workspace.ListWorkspacesRequest(*, pageSize: int | None = None, pageToken: str | None = None, sortOrder: SortOrder | None = SortOrder.DESC)[source]# \nBases: ListRequest\nclass steamship.data.workspace.ListWorkspacesResponse(*, nextPageToken: str | None = None, workspaces: List[Workspace])[source]# \nBases: ListResponse\nworkspaces: List[Workspace]# \nclass steamship.data.workspace.SignedUrl[source]# \nBases: object\nclass Bucket(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nAPP_DATA = 'appData'# \nEXPORTS = 'exports'# \nIMPORTS = 'imports'# \nPLUGIN_DATA = 'pluginData'# \nUSER_DATA = 'userData'# \nclass Operation(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nREAD = 'Read'# \nWRITE = 'Write'# \nclass Request(*, bucket: SignedUrl.Bucket, filepath: str, operation: SignedUrl.Operation, expiresInMinutes: int = None)[source]# \nBases: Request\nbucket: Bucket# \nexpires_in_minutes: int# \nfilepath: str# \noperation: Operation# \nclass Response(*, bucket: str = None, filepath: str = None, operation: str = None, expiresInMinutes: int = None, signedUrl: str = None)[source]# \nBases: Response\nbucket: str# \nexpires_in_minutes: int# \nfilepath: str# \noperation: str# \nsigned_url: str# \nclass steamship.data.workspace.Workspace(*, client: Client = None, id: str = None, handle: str = None)[source]# \nBases: CamelModel\nclass CreateRequest(*, id: str | None = None, handle: str | None = None, fetchIfExists: bool | None = None, externalId: str | None = None, externalType: str | None = None, metadata: str | None = None)[source]# \nBases: Request\nexternal_id: str | None# \nexternal_type: str | None# \nfetch_if_exists: bool | None# \nhandle: str | None# \nid: str | None# \nmetadata: str | None# \nclient: Client# \nstatic create(client: Client, handle: str | None = None, external_id: str | None = None, external_type: str | None = None, metadata: Any = None, fetch_if_exists: bool = True) → Workspace[source]# \ncreate_signed_url(request: Request) → Response[source]# \ndelete() → Workspace[source]# \nstatic get(client: Client, id_: str = None, handle: str = None, fetch_if_exists: bool = None) → Workspace[source]# \nhandle: str# \nid: str# \nstatic list(client: Client, t: str = None, page_size: int | None = None, page_token: str | None = None, sort_order: SortOrder | None = SortOrder.DESC) → ListWorkspacesResponse[source]# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nModule contents#\nclass steamship.data.Block(*, client: Client = None, id: str = None, fileId: str = None, text: str = None, tags: List[Tag] | None = [], index: int | None = None, mimeType: MimeTypes | None = None, publicData: bool = False, url: str | None = None, contentURL: str | None = None, uploadType: BlockUploadType | None = None, uploadBytes: bytes | None = None)[source]# \nBases: CamelModel\nA Block is a chunk of content within a File. It can be plain text content, image content, video content, etc. If the content is not text, the text value may be the empty string for backwards compatibility.\nclass ListRequest(*, fileId: str = None)[source]# \nBases: Request\nfile_id: str# \nclass ListResponse(*, blocks: List[Block] = [])[source]# \nBases: Response\nblocks: List[Block]# \nas_llm_input(exclude_block_wrapper: bool | None = False) → str[source]# \nproperty chat_id: str# \nproperty chat_role: RoleTag | None# \nclient: Client# \ncontent_url: str | None# \nstatic create(client: Client, file_id: str, text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None, public_data: bool = False) → Block[source]# \nCreate a new Block within a File specified by file_id.\nYou can create a Block in several ways: - Providing raw text as the text parameter; - Providing the content of the block as string or bytes; - Providing a publicly accessible URL where the content is stored.\ndelete() → Block[source]# \nfile_id: str# \nstatic get(client: Client, _id: str = None) → Block[source]# \nid: str# \nindex(embedding_plugin_instance: Any = None)[source]# \nIndex this block.\nindex_in_file: int | None# \nis_audio()[source]# \nReturn whether this is an audio Block.\nis_image()[source]# \nReturn whether this is an image Block.\nis_text() → bool[source]# \nReturn whether this is a text Block.\nis_video()[source]# \nReturn whether this is a video Block.\nproperty message_id: str# \nmime_type: MimeTypes | None# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \npublic_data: bool# \nstatic query(client: Client, tag_filter_query: str) → BlockQueryResponse[source]# \nraw()[source]# \nproperty raw_data_url: str | None# \nReturn a URL at which the data content of this Block can be accessed. If public_data is True, this content can be accessed without an API key.\nset_chat_id(chat_id: str)[source]# \nset_chat_role(role: RoleTag)[source]# \nset_message_id(message_id: str)[source]# \nset_public_data(public_data: bool)[source]# \nSet the public_data flag on this Block. If this object already exists server-side, update the flag.\ntags: List[Tag] | None# \ntext: str# \nto_public_url() → str[source]# \nReturn a public URL to access the Block’s data.\nupload_bytes: bytes | None# \nupload_type: BlockUploadType | None# \nurl: str | None# \nclass steamship.data.DocTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.doc; appropriate for HTML and Markdown ideas.\nARTICLE = 'article'# \nBLOCK_CODE = 'block-code'# \nBLOCK_QUOTE = 'block-quote'# \nCAPTION = 'caption'# \nCHAPTER = 'chapter'# \nCHAT = 'chat'# \nDIV = 'div'# \nDOCUMENT = 'document'# \nEMPHASIZED = 'emphasized'# \nH1 = 'h1'# \nH2 = 'h2'# \nH3 = 'h3'# \nH4 = 'h4'# \nH5 = 'h5'# \nIMAGE = 'image'# \nLINE = 'line'# \nLINK = 'link'# \nLIST_ITEM = 'list-item'# \nMAIN = 'main'# \nMETADATA = 'metadata'# \nORDERED_LIST = 'ordered-list'# \nPAGE = 'page'# \nPARAGRAPH = 'paragraph'# \nPRE = 'pre'# \nREGION = 'region'# \nSENTENCE = 'sentence'# \nSOURCE = 'source'# \nSPAN = 'span'# \nSTRONG = 'strong'# \nSUBTITLE = 'subtitle'# \nTELETYPE = 'teletype'# \nTEXT = 'text'# \nTITLE = 'title'# \nTOKEN = 'token'# \nUNDERLINED = 'underlined'# \nUNKNOWN = 'unknown'# \nUNORDERED_LIST = 'unordered-list'# \nstatic from_html_tag(tagname: str | None) → DocTag | None[source]# \nclass steamship.data.EmbeddingIndex(*, client: Client = None, id: str = None, handle: str = None, name: str = None, plugin: str = None, externalId: str = None, externalType: str = None, metadata: str = None)[source]# \nBases: CamelModel\nA persistent, read-optimized index over embeddings.\nclient: Client# \nstatic create(client: Client, handle: str = None, name: str = None, embedder_plugin_instance_handle: str = None, fetch_if_exists: bool = True, external_id: str = None, external_type: str = None, metadata: Any = None) → EmbeddingIndex[source]# \ndelete() → EmbeddingIndex[source]# \nembed() → Task[IndexEmbedResponse][source]# \nexternal_id: str# \nexternal_type: str# \nhandle: str# \nid: str# \ninsert(value: str, external_id: str = None, external_type: str = None, metadata: int | float | bool | str | List | Dict = None, reindex: bool = True, allow_long_records=False) → IndexInsertResponse[source]# \ninsert_file(file_id: str, block_type: str = None, external_id: str = None, external_type: str = None, metadata: int | float | bool | str | List | Dict = None, reindex: bool = True) → IndexInsertResponse[source]# \ninsert_many(items: List[EmbeddedItem | str], reindex: bool = True, allow_long_records=False) → IndexInsertResponse[source]# \nlist_items(file_id: str = None, block_id: str = None, span_id: str = None, page_size: int | None = None, page_token: str | None = None, sort_order: SortOrder | None = SortOrder.DESC) → ListItemsResponse[source]# \nmetadata: str# \nname: str# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nplugin: str# \nsearch(query: str | List[str], k: int = 1, include_metadata: bool = False) → Task[QueryResults][source]# \nclass steamship.data.File(*, client: Client = None, id: str = None, handle: str = None, mimeType: MimeTypes = None, workspaceId: str = None, blocks: List[Block] = [], tags: List[Tag] = [], filename: str = None, publicData: bool = False)[source]# \nBases: CamelModel\nA file.\nclass CreateResponse(data: Any = None, string: str = None, _bytes: bytes | io.BytesIO = None, json: io.BytesIO = None, mime_type: str = None)[source]# \nBases: Response\ndata_: Any# \nmime_type: str# \nclassmethod parse_obj(obj: Any) → Response[source]# \nappend_block(text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None, public_data: bool = False) → Block[source]# \nAppend a new block to this File. This is a convenience wrapper around Block.create(). You should provide only one of text, content, or url.\nThis is a server-side operation, saving the new Block to the file. The new block is appended to this client-side File as well for convenience.\nblockify(plugin_instance: str = None, wait_on_tasks: List[Task] = None) → Task[source]# \nblocks: List[Block]# \nclient: Client# \nstatic create(client: Client, content: str | bytes = None, mime_type: MimeTypes = None, handle: str = None, blocks: List[Block] = None, tags: List[Tag] = None, public_data: bool = False) → Any[source]# \nstatic create_with_plugin(client: Client, plugin_instance: str, url: str = None, mime_type: str = None) → Task[File][source]# \ndelete() → File[source]# \nfilename: str# \nstatic from_local(client: Client, file_path: str, mime_type: MimeTypes = None, handle: str = None, tags: List[Tag] = None, public_data: bool = False) → Any[source]# \nLoads a local file into a Steamship File.\nNOTE: the file_path should be relative to where the call to from_local is happening.\nLoaded files will automatically be tagged with a provenance tag.\nParameters: \nclient – Steamship client for the workspace\nfile_path – Location of the file to upload relative to the current directory of the client\nmime_type – Optional specification of a particular mime type. If not provided, a guess will be made.\nhandle – Intended handle (for lookups, etc.) for Steamship File\ntags – Metadata to add to the Steamship File\npublic_data – Whether to make the Steamship File publicly-accessible\ngenerate(plugin_instance_handle: str, start_block_index: int = None, end_block_index: int | None = None, block_index_list: List[int] | None = None, append_output_to_file: bool = True, options: dict | None = None, wait_on_tasks: List[Task] = None, make_output_public: bool = False) → Task[GenerateResponse][source]# \nGenerate new content from this file. Assumes this file as context for input and output. May specify start and end blocks.\nstatic get(client: Client, _id: str = None, handle: str = None) → File[source]# \nhandle: str# \nid: str# \nimport_with_plugin(plugin_instance: str, url: str = None, mime_type: str = None) → Task[File][source]# \nRun an import operation on an (empty) file object that has already been created.\nindex(plugin_instance: Any = None) → EmbeddingIndex[source]# \nIndex every block in the file.\nTODO(ted): Enable indexing the results of a tag query. TODO(ted): It’s hard to load the EmbeddingIndexPluginInstance with just a handle because of the chain of things that need to be created to it to function.\nstatic list(client: Client, page_size: int | None = None, page_token: str | None = None, sort_order: SortOrder | None = SortOrder.DESC) → ListFileResponse[source]# \nmime_type: MimeTypes# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \npublic_data: bool# \nstatic query(client: Client, tag_filter_query: str) → FileQueryResponse[source]# \nraw()[source]# \nproperty raw_data_url: str | None# \nReturn a URL at which the data content of this File can be accessed. If public_data is True, this content can be accessed without an API key.\nrefresh() → File[source]# \nset_public_data(public_data: bool)[source]# \nSet the public_data flag on this File. If this object already exists server-side, update the flag.\ntag(plugin_instance: str = None, wait_on_tasks: List[Task] = None) → Task[TagResponse][source]# \ntags: List[Tag]# \nworkspace_id: str# \nclass steamship.data.GenerationTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.generation.\nGIST = 'gist'# \nHEADLINE = 'headline'# \nPROMPT_COMPLETION = 'prompt-completion'# \nSUMMARY = 'summary'# \nclass steamship.data.Package(*, client: Client = None, id: str = None, handle: str = None, userId: str = None, profile: Manifest | None = None, description: str | None = None, readme: str | None = None, isPublic: bool = False)[source]# \nBases: CamelModel\nclient: Client# \nstatic create(client: Client, handle: str = None, profile: Manifest = None, is_public=False, fetch_if_exists=False) → Package[source]# \ndelete() → Package[source]# \nDelete this package. If this package is public and another user has created an instance of it, this method will throw an error and the package will not be deleted. Deleting the package will delete any versions and instances of it that you have created.\ndescription: str | None# \nstatic get(client: Client, handle: str) → Package[source]# \nhandle: str# \nid: str# \nis_public: bool# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nprofile: Manifest | None# \nreadme: str | None# \nupdate(client: Client) → Package[source]# \nuser_id: str# \nclass steamship.data.PackageInstance(*, client: Client = None, id: str = None, handle: str = None, packageId: str = None, packageHandle: str | None = None, userHandle: str = None, packageVersionId: str = None, packageVersionHandle: str | None = None, userId: str = None, invocationURL: str = None, config: Dict[str, Any] = None, workspaceId: str = None, workspaceHandle: str = None, initStatus: InvocableInitStatus | None = None)[source]# \nBases: CamelModel\nblocks_from_invoke(path: str, verb: Verb = Verb.POST, timeout_s: float | None = None, **kwargs) → List[Block][source]# \nclient: Client# \nconfig: Dict[str, Any]# \nstatic create(client: Client, package_id: str = None, package_handle: str = None, package_version_id: str = None, package_version_handle: str = None, handle: str = None, fetch_if_exists: bool = None, config: Dict[str, Any] = None) → PackageInstance[source]# \nstatic create_local_development_instance(client: Client, local_development_url: str, package_id: str = None, package_handle: str = None, handle: str = None, fetch_if_exists: bool = True, config: Dict[str, Any] = None) → PackageInstance[source]# \ndelete() → PackageInstance[source]# \nfull_url_for(path: str)[source]# \nstatic get(client: Client, handle: str) → PackageInstance[source]# \nhandle: str# \nid: str# \ninit_status: InvocableInitStatus | None# \ninvocation_url: str# \ninvoke(path: str, verb: Verb = Verb.POST, timeout_s: float | None = None, **kwargs)[source]# \nload_missing_workspace_handle()[source]# \npackage_handle: str | None# \npackage_id: str# \npackage_version_handle: str | None# \npackage_version_id: str# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nrefresh_init_status()[source]# \ntask_from_invoke(path: str, verb: Verb = Verb.POST, timeout_s: float | None = None, **kwargs) → Task[source]# \nuser_handle: str# \nuser_id: str# \nwait_for_init(max_timeout_s: float = 180, retry_delay_s: float = 1)[source]# \nPolls and blocks until the init has succeeded or failed (or timeout reached).\nParameters: \nmax_timeout_s (int) – Max timeout in seconds. Default: 180s. After this timeout, an exception will be thrown.\nretry_delay_s (float) – Delay between status checks. Default: 1s.\nworkspace_handle: str# \nworkspace_id: str# \nclass steamship.data.PackageVersion(*, client: Client = None, id: str = None, packageId: str = None, handle: str = None, configTemplate: Dict[str, Any] = None)[source]# \nBases: CamelModel\nclient: Client# \nconfig_template: Dict[str, Any]# \nstatic create(client: Client, package_id: str = None, handle: str = None, filename: str = None, filebytes: bytes = None, config_template: Dict[str, Any] = None, hosting_handler: str = None) → PackageVersion[source]# \ndelete() → PackageVersion[source]# \nDelete this package version. If this package is public and another user has created an instance of this version, this method will throw an error and the PackageVersion will not be deleted. Deleting the PackageVersion will delete any instances of it that you have created.\nhandle: str# \nid: str# \npackage_id: str# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nclass steamship.data.Plugin(*, client: Client = None, id: str = None, type: str = None, transport: str = None, isPublic: bool = None, trainingPlatform: HostingType | None = None, handle: str = None, description: str = None, metadata: str = None, profile: Manifest | None = None, readme: str | None = None, userId: str | None = None)[source]# \nBases: CamelModel\nclient: Client# \nstatic create(client: Client, description: str, type_: str, transport: str, is_public: bool, handle: str = None, training_platform: HostingType | None = None, metadata: str | Dict | List = None, fetch_if_exists: bool = False) → Plugin[source]# \ndelete() → Plugin[source]# \nDelete this plugin. If this plugin is public and another user has created an instance of it, this method will throw an error and the plugin will not be deleted. Deleting the plugin will delete any versions and instances of it that you have created.\ndescription: str# \nstatic get(client: Client, handle: str)[source]# \nhandle: str# \nid: str# \nis_public: bool# \nstatic list(client: Client, t: str = None, page_size: int | None = None, page_token: str | None = None, sort_order: SortOrder | None = SortOrder.DESC) → ListPluginsResponse[source]# \nmetadata: str# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nprofile: Manifest | None# \nreadme: str | None# \ntraining_platform: HostingType | None# \ntransport: str# \ntype: str# \nupdate(client: Client) → Plugin[source]# \nuser_id: str | None# \nclass steamship.data.PluginInstance(*, client: Client = None, id: str = None, handle: str = None, pluginId: str = None, pluginVersionId: str = None, pluginHandle: str | None = None, pluginVersionHandle: str | None = None, workspaceId: str | None = None, userId: str = None, config: Dict[str, Any] = None, hostingType: HostingType | None = None, hostingCpu: HostingCpu | None = None, hostingMemory: HostingMemory | None = None, hostingTimeout: HostingTimeout | None = None, hostingEnvironment: HostingEnvironment | None = None, initStatus: InvocableInitStatus | None = None)[source]# \nBases: CamelModel\nclient: Client# \nconfig: Dict[str, Any]# \nstatic create(client: Client, plugin_id: str = None, plugin_handle: str = None, plugin_version_id: str = None, plugin_version_handle: str = None, handle: str = None, fetch_if_exists: bool = True, config: Dict[str, Any] = None) → PluginInstance[source]# \nCreate a plugin instance\nWhen handle is empty the engine will automatically assign one fetch_if_exists controls whether we want to re-use an existing plugin instance or not.\ndelete() → PluginInstance[source]# \ngenerate(input_file_id: str = None, input_file_start_block_index: int = None, input_file_end_block_index: int | None = None, input_file_block_index_list: List[int] | None = None, text: str | None = None, block_query: str | None = None, append_output_to_file: bool = False, output_file_id: str | None = None, make_output_public: bool | None = None, options: dict | None = None) → Task[GenerateResponse][source]# \nSee GenerateRequest for description of parameter options\nstatic get(client: Client, handle: str) → PluginInstance[source]# \nget_training_parameters(training_request: TrainingParameterPluginInput) → TrainingParameterPluginOutput[source]# \nhandle: str# \nhosting_cpu: HostingCpu | None# \nhosting_environment: HostingEnvironment | None# \nhosting_memory: HostingMemory | None# \nhosting_timeout: HostingTimeout | None# \nhosting_type: HostingType | None# \nid: str# \ninit_status: InvocableInitStatus | None# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nplugin_handle: str | None# \nplugin_id: str# \nplugin_version_handle: str | None# \nplugin_version_id: str# \nrefresh_init_status()[source]# \ntag(doc: str | File) → Task[TagResponse][source]# \ntrain(training_request: TrainingParameterPluginInput = None, training_epochs: int | None = None, export_query: str | None = None, testing_holdout_percent: float | None = None, test_split_seed: int | None = None, training_params: Dict | None = None, inference_params: Dict | None = None) → Task[TrainPluginOutput][source]# \nTrain a plugin instance. Please provide either training_request OR the other parameters; passing training_request ignores all other parameters, but is kept for backwards compatibility.\nuser_id: str# \nwait_for_init(max_timeout_s: float = 180, retry_delay_s: float = 1)[source]# \nPolls and blocks until the init has succeeded or failed (or timeout reached).\nParameters: \nmax_timeout_s (int) – Max timeout in seconds. Default: 180s. After this timeout, an exception will be thrown.\nretry_delay_s (float) – Delay between status checks. Default: 1s.\nworkspace_id: str | None# \nclass steamship.data.PluginVersion(*, client: Client = None, id: str = None, pluginId: str = None, handle: str = None, hostingMemory: HostingMemory | None = None, hostingTimeout: HostingTimeout | None = None, hostingHandler: str = None, isPublic: bool = None, isDefault: bool = None, configTemplate: Dict[str, Any] = None)[source]# \nBases: CamelModel\nclient: Client# \nconfig_template: Dict[str, Any]# \nstatic create(client: Client, handle: str, plugin_id: str = None, filename: str = None, filebytes: bytes = None, hosting_memory: HostingMemory | None = None, hosting_timeout: HostingTimeout | None = None, hosting_handler: str = None, is_public: bool = None, is_default: bool = None, config_template: Dict[str, Any] = None) → PluginVersion[source]# \ndelete() → PluginVersion[source]# \nDelete this plugin version. If this plugin is public and another user has created an instance of this version, this method will throw an error and the PluginVersion will not be deleted. Deleting the PluginVersion will delete any instances of it that you have created.\nhandle: str# \nhosting_handler: str# \nhosting_memory: HostingMemory | None# \nhosting_timeout: HostingTimeout | None# \nid: str# \nis_default: bool# \nis_public: bool# \nstatic list(client: Client, plugin_id: str = None, handle: str = None, public: bool = True) → ListPluginVersionsResponse[source]# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nplugin_id: str# \nclass steamship.data.Tag(*, client: Client = None, id: str = None, fileId: str = None, blockId: str | None = None, kind: TagKind | str = None, name: str | None = None, value: Dict[TagValueKey | str, Any] | None = None, startIdx: int | None = None, endIdx: int | None = None, text: str | None = None)[source]# \nBases: CamelModel\nclass DeleteRequest(*, id: str = None, fileId: str = None, blockId: str = None)[source]# \nBases: Request\nblock_id: str# \nfile_id: str# \nid: str# \nclass ListRequest(*, fileId: str = None, blockId: str = None)[source]# \nBases: Request\nblock_id: str# \nfile_id: str# \nclass ListResponse(*, tags: List[Tag] = None)[source]# \nBases: Response\ntags: List[Tag]# \nblock_id: str | None# \nclient: Client# \nstatic create(client: Client, file_id: str = None, block_id: str = None, kind: str = None, name: str = None, start_idx: int = None, end_idx: int = None, value: Dict[str, Any] = None) → Tag[source]# \ndelete() → Tag[source]# \nend_idx: int | None# \nfile_id: str# \nid: str# \nindex(plugin_instance: Any = None)[source]# \nIndex this tag.\nkind: TagKind | str# \nname: str | None# \nclassmethod parse_obj(obj: Any) → BaseModel[source]# \nstatic query(client: Client, tag_filter_query: str) → TagQueryResponse[source]# \nstart_idx: int | None# \ntext: str | None# \nvalue: Dict[TagValueKey | str, Any] | None# \nclass steamship.data.TagKind(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of kind constants for Tags.\nThese define broad categories of tags. Suggested name values for each category are found in separate enums. For example: kind=TagKind.DOCUMENT, name=DocTag.H1\nCHAT = 'chat'# \nCHAT_HISTORY_CONTEXT = 'chat-history-context'# \nDEPENDENCY = 'dependency'# \nDOCUMENT = 'document'# \nEMBEDDING = 'embedding'# \nEMOTION = 'emotion'# \nENTITY = 'entity'# \nGENERATION = 'generation'# \nINTENT = 'intent'# \nKIND = 'summary'# \nMESSAGE_ID = 'message-id'# \nPART_OF_SPEECH = 'part-of-speech'# \nPROVENANCE = 'provenance'# \nROLE = 'role'# \nSEARCH_RESULT = 'search-result'# \nSENTIMENT = 'sentiment'# \nSUMMARY = 'summary'# \nTIMESTAMP = 'timestamp'# \nTOKEN = 'token'# \nTOKENIZATION = 'tokenization'# \nTOPIC = 'topic'# \nclass steamship.data.TagValueKey(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of key constants for the value object within a tag.\nBOOL_VALUE = 'bool-value'# \nDIRECT = 'direct'# \nEND_TIME_S = 'end-time-s'# \nENTITY_NAME = 'entity_name'# \nNUMBER_VALUE = 'number-value'# \nSCORE = 'score'# \nSTART_TIME_S = 'start-time-s'# \nSTRING_VALUE = 'string-value'# \nTIMESTAMP_VALUE = 'timestamp-value'# \nVALUE = 'value'# \nVECTOR_VALUE = 'vector-value'# \nclass steamship.data.TokenTag(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\nA set of name constants for Tags with a kind of TagKind.token; appropriate for parsing-level ideas.\nENTITY_IOB = 'entity-iob'# \nENTITY_TYPE = 'entity-type'# \nHEAD = 'head'# \nIS_ALPHA = 'is-alpha'# \nIS_ASCII = 'is-ascii'# \nIS_BRACKET = 'is-bracket'# \nIS_CURRENCY = 'is-currency'# \nIS_DIGIT = 'is-digit'# \nIS_LEFT_PUNCT = 'is-left-punct'# \nIS_OUT_OF_VOCABULARY = 'is-out-of-vocabulary'# \nIS_PUNCT = 'is-punct'# \nIS_QUOTE = 'is-quote'# \nIS_RIGHT_PUNCT = 'is-right-punct'# \nIS_SPACE = 'is-space'# \nIS_STOPWORD = 'is-stopword'# \nIS_TITLE = 'is-title'# \nLANGUAGE = 'language'# \nLEFT_EDGE = 'left-edge'# \nLEMMA = 'lemma'# \nLIKE_EMAIL = 'like-email'# \nLIKE_NUM = 'like-num'# \nLIKE_URL = 'like-url'# \nNORMALIZED = 'normalized'# \nPREFIX = 'prefix'# \nRIGHT_EDGE = 'right-edge'# \nSHAPE = 'shape'# \nSUFFIX = 'suffix'# \nTEXT = 'text'# \nTEXT_WITH_WHITESPACE = 'text-with-whitespace'# \nWHITESPACE = 'whitespace'# \nclass steamship.data.Workspace(*, client: Client = None, id: str = None, handle: str = None)[source]# \nBases: CamelModel\nclass CreateRequest(*, id: str | None = None, handle: str | None = None, fetchIfExists: bool | None = None, externalId: str | None = None, externalType: str | None = None, metadata: str | None = None)[source]# \nBases: Request\nexternal_id: str | None# \nexternal_type: str | None# \nfetch_if_exists: bool | None# \nhandle: str | None# \nid: str | None# \nmetadata: str | None# \nclient: Client# \nstatic create(client: Client, handle: str | None = None, external_id: str | None = None, external_type: str | None = None, metadata: Any = None, fetch_if_exists: bool = True) → Workspace[source]# \ncreate_signed_url(request: Request) → Response[source]# \ndelete() → Workspace[source]# \nstatic get(client: Client, id_: str = None, handle: str = None, fetch_if_exists: bool = None) → Workspace[source]# \nhandle: str# \nid: str# \nstatic list(client: Client, t: str = None, page_size: int | None = None, page_token: str | None = None, sort_order: SortOrder | None = SortOrder.DESC) → ListWorkspacesResponse[source]# \nclassmethod parse_obj(obj: Any) → BaseModel[source]#",
  "markdown": "## steamship.data package[#](#steamship-data-package \"Link to this heading\")\n\n## Subpackages[#](#subpackages \"Link to this heading\")\n\n*   [steamship.data.operations package](https://docs.steamship.com/api-reference/steamship.data.operations.html)\n    *   [Submodules](https://docs.steamship.com/api-reference/steamship.data.operations.html#submodules)\n    *   [steamship.data.operations.blockifier module](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship-data-operations-blockifier-module)\n        *   [`BlockifyRequest`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.blockifier.BlockifyRequest)\n            *   [`BlockifyRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.blockifier.BlockifyRequest.handle)\n            *   [`BlockifyRequest.id`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.blockifier.BlockifyRequest.id)\n            *   [`BlockifyRequest.name`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.blockifier.BlockifyRequest.name)\n            *   [`BlockifyRequest.plugin_instance`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.blockifier.BlockifyRequest.plugin_instance)\n            *   [`BlockifyRequest.type`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.blockifier.BlockifyRequest.type)\n    *   [steamship.data.operations.embedder module](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship-data-operations-embedder-module)\n        *   [`EmbedRequest`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.embedder.EmbedRequest)\n            *   [`EmbedRequest.docs`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.embedder.EmbedRequest.docs)\n            *   [`EmbedRequest.metadata`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.embedder.EmbedRequest.metadata)\n            *   [`EmbedRequest.plugin_instance`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.embedder.EmbedRequest.plugin_instance)\n    *   [steamship.data.operations.generator module](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship-data-operations-generator-module)\n        *   [`GenerateRequest`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest)\n            *   [`GenerateRequest.append_output_to_file`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.append_output_to_file)\n            *   [`GenerateRequest.block_query`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.block_query)\n            *   [`GenerateRequest.input_file_block_index_list`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.input_file_block_index_list)\n            *   [`GenerateRequest.input_file_end_block_index`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.input_file_end_block_index)\n            *   [`GenerateRequest.input_file_id`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.input_file_id)\n            *   [`GenerateRequest.input_file_start_block_index`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.input_file_start_block_index)\n            *   [`GenerateRequest.make_output_public`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.make_output_public)\n            *   [`GenerateRequest.options`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.options)\n            *   [`GenerateRequest.output_file_id`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.output_file_id)\n            *   [`GenerateRequest.plugin_instance`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.plugin_instance)\n            *   [`GenerateRequest.text`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateRequest.text)\n        *   [`GenerateResponse`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateResponse)\n            *   [`GenerateResponse.blocks`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateResponse.blocks)\n    *   [steamship.data.operations.tagger module](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship-data-operations-tagger-module)\n        *   [`TagRequest`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagRequest)\n            *   [`TagRequest.file`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagRequest.file)\n            *   [`TagRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagRequest.handle)\n            *   [`TagRequest.id`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagRequest.id)\n            *   [`TagRequest.name`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagRequest.name)\n            *   [`TagRequest.plugin_instance`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagRequest.plugin_instance)\n            *   [`TagRequest.type`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagRequest.type)\n        *   [`TagResponse`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagResponse)\n            *   [`TagResponse.file`](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagResponse.file)\n    *   [Module contents](https://docs.steamship.com/api-reference/steamship.data.operations.html#module-contents)\n*   [steamship.data.package package](https://docs.steamship.com/api-reference/steamship.data.package.html)\n    *   [Submodules](https://docs.steamship.com/api-reference/steamship.data.package.html#submodules)\n    *   [steamship.data.package.package module](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship-data-package-package-module)\n        *   [`Package`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package)\n            *   [`Package.client`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.client)\n            *   [`Package.create()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.create)\n            *   [`Package.delete()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.delete)\n            *   [`Package.description`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.description)\n            *   [`Package.get()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.get)\n            *   [`Package.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.handle)\n            *   [`Package.id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.id)\n            *   [`Package.is_public`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.is_public)\n            *   [`Package.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.parse_obj)\n            *   [`Package.profile`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.profile)\n            *   [`Package.readme`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.readme)\n            *   [`Package.update()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.update)\n            *   [`Package.user_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package.user_id)\n        *   [`PackageCreateRequest`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageCreateRequest)\n            *   [`PackageCreateRequest.is_public`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageCreateRequest.is_public)\n            *   [`PackageCreateRequest.profile`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageCreateRequest.profile)\n        *   [`PackageUpdateRequest`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageUpdateRequest)\n            *   [`PackageUpdateRequest.description`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageUpdateRequest.description)\n            *   [`PackageUpdateRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageUpdateRequest.handle)\n            *   [`PackageUpdateRequest.id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageUpdateRequest.id)\n            *   [`PackageUpdateRequest.profile`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageUpdateRequest.profile)\n            *   [`PackageUpdateRequest.readme`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.PackageUpdateRequest.readme)\n    *   [steamship.data.package.package\\_instance module](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship-data-package-package-instance-module)\n        *   [`CreatePackageInstanceRequest`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest)\n            *   [`CreatePackageInstanceRequest.config`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.config)\n            *   [`CreatePackageInstanceRequest.fetch_if_exists`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.fetch_if_exists)\n            *   [`CreatePackageInstanceRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.handle)\n            *   [`CreatePackageInstanceRequest.id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.id)\n            *   [`CreatePackageInstanceRequest.local_development_url`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.local_development_url)\n            *   [`CreatePackageInstanceRequest.package_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.package_handle)\n            *   [`CreatePackageInstanceRequest.package_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.package_id)\n            *   [`CreatePackageInstanceRequest.package_version_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.package_version_handle)\n            *   [`CreatePackageInstanceRequest.package_version_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.package_version_id)\n            *   [`CreatePackageInstanceRequest.workspace_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.CreatePackageInstanceRequest.workspace_id)\n        *   [`PackageInstance`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance)\n            *   [`PackageInstance.blocks_from_invoke()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.blocks_from_invoke)\n            *   [`PackageInstance.client`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.client)\n            *   [`PackageInstance.config`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.config)\n            *   [`PackageInstance.create()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.create)\n            *   [`PackageInstance.create_local_development_instance()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.create_local_development_instance)\n            *   [`PackageInstance.delete()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.delete)\n            *   [`PackageInstance.full_url_for()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.full_url_for)\n            *   [`PackageInstance.get()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.get)\n            *   [`PackageInstance.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.handle)\n            *   [`PackageInstance.id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.id)\n            *   [`PackageInstance.init_status`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.init_status)\n            *   [`PackageInstance.invocation_url`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.invocation_url)\n            *   [`PackageInstance.invoke()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.invoke)\n            *   [`PackageInstance.load_missing_workspace_handle()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.load_missing_workspace_handle)\n            *   [`PackageInstance.package_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.package_handle)\n            *   [`PackageInstance.package_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.package_id)\n            *   [`PackageInstance.package_version_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.package_version_handle)\n            *   [`PackageInstance.package_version_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.package_version_id)\n            *   [`PackageInstance.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.parse_obj)\n            *   [`PackageInstance.refresh_init_status()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.refresh_init_status)\n            *   [`PackageInstance.task_from_invoke()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.task_from_invoke)\n            *   [`PackageInstance.user_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.user_handle)\n            *   [`PackageInstance.user_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.user_id)\n            *   [`PackageInstance.wait_for_init()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.wait_for_init)\n            *   [`PackageInstance.workspace_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.workspace_handle)\n            *   [`PackageInstance.workspace_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance.workspace_id)\n    *   [steamship.data.package.package\\_version module](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship-data-package-package-version-module)\n        *   [`CreatePackageVersionRequest`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.CreatePackageVersionRequest)\n            *   [`CreatePackageVersionRequest.config_template`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.CreatePackageVersionRequest.config_template)\n            *   [`CreatePackageVersionRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.CreatePackageVersionRequest.handle)\n            *   [`CreatePackageVersionRequest.hosting_handler`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.CreatePackageVersionRequest.hosting_handler)\n            *   [`CreatePackageVersionRequest.package_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.CreatePackageVersionRequest.package_id)\n            *   [`CreatePackageVersionRequest.type`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.CreatePackageVersionRequest.type)\n        *   [`PackageVersion`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion)\n            *   [`PackageVersion.client`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion.client)\n            *   [`PackageVersion.config_template`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion.config_template)\n            *   [`PackageVersion.create()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion.create)\n            *   [`PackageVersion.delete()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion.delete)\n            *   [`PackageVersion.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion.handle)\n            *   [`PackageVersion.id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion.id)\n            *   [`PackageVersion.package_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion.package_id)\n            *   [`PackageVersion.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion.parse_obj)\n    *   [Module contents](https://docs.steamship.com/api-reference/steamship.data.package.html#module-contents)\n        *   [`Package`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package)\n            *   [`Package.client`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.client)\n            *   [`Package.create()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.create)\n            *   [`Package.delete()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.delete)\n            *   [`Package.description`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.description)\n            *   [`Package.get()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.get)\n            *   [`Package.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.handle)\n            *   [`Package.id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.id)\n            *   [`Package.is_public`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.is_public)\n            *   [`Package.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.parse_obj)\n            *   [`Package.profile`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.profile)\n            *   [`Package.readme`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.readme)\n            *   [`Package.update()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.update)\n            *   [`Package.user_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.Package.user_id)\n        *   [`PackageInstance`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance)\n            *   [`PackageInstance.blocks_from_invoke()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.blocks_from_invoke)\n            *   [`PackageInstance.client`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.client)\n            *   [`PackageInstance.config`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.config)\n            *   [`PackageInstance.create()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.create)\n            *   [`PackageInstance.create_local_development_instance()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.create_local_development_instance)\n            *   [`PackageInstance.delete()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.delete)\n            *   [`PackageInstance.full_url_for()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.full_url_for)\n            *   [`PackageInstance.get()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.get)\n            *   [`PackageInstance.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.handle)\n            *   [`PackageInstance.id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.id)\n            *   [`PackageInstance.init_status`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.init_status)\n            *   [`PackageInstance.invocation_url`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.invocation_url)\n            *   [`PackageInstance.invoke()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.invoke)\n            *   [`PackageInstance.load_missing_workspace_handle()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.load_missing_workspace_handle)\n            *   [`PackageInstance.package_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.package_handle)\n            *   [`PackageInstance.package_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.package_id)\n            *   [`PackageInstance.package_version_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.package_version_handle)\n            *   [`PackageInstance.package_version_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.package_version_id)\n            *   [`PackageInstance.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.parse_obj)\n            *   [`PackageInstance.refresh_init_status()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.refresh_init_status)\n            *   [`PackageInstance.task_from_invoke()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.task_from_invoke)\n            *   [`PackageInstance.user_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.user_handle)\n            *   [`PackageInstance.user_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.user_id)\n            *   [`PackageInstance.wait_for_init()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.wait_for_init)\n            *   [`PackageInstance.workspace_handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.workspace_handle)\n            *   [`PackageInstance.workspace_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageInstance.workspace_id)\n        *   [`PackageVersion`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion)\n            *   [`PackageVersion.client`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion.client)\n            *   [`PackageVersion.config_template`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion.config_template)\n            *   [`PackageVersion.create()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion.create)\n            *   [`PackageVersion.delete()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion.delete)\n            *   [`PackageVersion.handle`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion.handle)\n            *   [`PackageVersion.id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion.id)\n            *   [`PackageVersion.package_id`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion.package_id)\n            *   [`PackageVersion.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.PackageVersion.parse_obj)\n*   [steamship.data.plugin package](https://docs.steamship.com/api-reference/steamship.data.plugin.html)\n    *   [Submodules](https://docs.steamship.com/api-reference/steamship.data.plugin.html#submodules)\n    *   [steamship.data.plugin.hosting module](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship-data-plugin-hosting-module)\n        *   [`HostingCpu`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu)\n            *   [`HostingCpu.LG`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.LG)\n            *   [`HostingCpu.MAX`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.MAX)\n            *   [`HostingCpu.MD`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.MD)\n            *   [`HostingCpu.MIN`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.MIN)\n            *   [`HostingCpu.SM`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.SM)\n            *   [`HostingCpu.XL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.XL)\n            *   [`HostingCpu.XS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.XS)\n            *   [`HostingCpu.XXL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.XXL)\n            *   [`HostingCpu.XXS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu.XXS)\n        *   [`HostingEnvironment`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingEnvironment)\n            *   [`HostingEnvironment.PYTHON38`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingEnvironment.PYTHON38)\n            *   [`HostingEnvironment.STEAMSHIP_PYTORCH_CPU`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingEnvironment.STEAMSHIP_PYTORCH_CPU)\n        *   [`HostingMemory`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory)\n            *   [`HostingMemory.LG`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.LG)\n            *   [`HostingMemory.MAX`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.MAX)\n            *   [`HostingMemory.MD`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.MD)\n            *   [`HostingMemory.MIN`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.MIN)\n            *   [`HostingMemory.SM`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.SM)\n            *   [`HostingMemory.XL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.XL)\n            *   [`HostingMemory.XS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.XS)\n            *   [`HostingMemory.XXL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.XXL)\n            *   [`HostingMemory.XXS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory.XXS)\n        *   [`HostingTimeout`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout)\n            *   [`HostingTimeout.LG`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.LG)\n            *   [`HostingTimeout.MAX`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.MAX)\n            *   [`HostingTimeout.MD`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.MD)\n            *   [`HostingTimeout.MIN`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.MIN)\n            *   [`HostingTimeout.SM`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.SM)\n            *   [`HostingTimeout.XL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.XL)\n            *   [`HostingTimeout.XS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.XS)\n            *   [`HostingTimeout.XXL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.XXL)\n            *   [`HostingTimeout.XXS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout.XXS)\n        *   [`HostingType`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingType)\n            *   [`HostingType.ECS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingType.ECS)\n            *   [`HostingType.LAMBDA`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingType.LAMBDA)\n    *   [steamship.data.plugin.index\\_plugin\\_instance module](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship-data-plugin-index-plugin-instance-module)\n        *   [`EmbedderInvocation`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbedderInvocation)\n            *   [`EmbedderInvocation.config`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbedderInvocation.config)\n            *   [`EmbedderInvocation.fetch_if_exists`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbedderInvocation.fetch_if_exists)\n            *   [`EmbedderInvocation.instance_handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbedderInvocation.instance_handle)\n            *   [`EmbedderInvocation.plugin_handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbedderInvocation.plugin_handle)\n            *   [`EmbedderInvocation.version`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbedderInvocation.version)\n        *   [`EmbeddingIndexPluginInstance`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance)\n            *   [`EmbeddingIndexPluginInstance.create()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance.create)\n            *   [`EmbeddingIndexPluginInstance.delete()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance.delete)\n            *   [`EmbeddingIndexPluginInstance.embedder`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance.embedder)\n            *   [`EmbeddingIndexPluginInstance.index`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance.index)\n            *   [`EmbeddingIndexPluginInstance.insert()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance.insert)\n            *   [`EmbeddingIndexPluginInstance.reset()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance.reset)\n            *   [`EmbeddingIndexPluginInstance.search()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance.search)\n        *   [`SearchResult`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResult)\n            *   [`SearchResult.from_query_result()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResult.from_query_result)\n            *   [`SearchResult.score`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResult.score)\n            *   [`SearchResult.tag`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResult.tag)\n        *   [`SearchResults`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResults)\n            *   [`SearchResults.from_query_results()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResults.from_query_results)\n            *   [`SearchResults.items`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResults.items)\n            *   [`SearchResults.to_ranked_blocks()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResults.to_ranked_blocks)\n    *   [steamship.data.plugin.plugin module](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship-data-plugin-plugin-module)\n        *   [`CreatePluginRequest`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest)\n            *   [`CreatePluginRequest.description`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.description)\n            *   [`CreatePluginRequest.fetch_if_exists`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.fetch_if_exists)\n            *   [`CreatePluginRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.handle)\n            *   [`CreatePluginRequest.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.id)\n            *   [`CreatePluginRequest.is_public`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.is_public)\n            *   [`CreatePluginRequest.metadata`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.metadata)\n            *   [`CreatePluginRequest.training_platform`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.training_platform)\n            *   [`CreatePluginRequest.transport`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.transport)\n            *   [`CreatePluginRequest.type`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.CreatePluginRequest.type)\n        *   [`ListPluginsRequest`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.ListPluginsRequest)\n            *   [`ListPluginsRequest.type`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.ListPluginsRequest.type)\n        *   [`ListPluginsResponse`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.ListPluginsResponse)\n            *   [`ListPluginsResponse.plugins`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.ListPluginsResponse.plugins)\n        *   [`Plugin`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin)\n            *   [`Plugin.client`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.client)\n            *   [`Plugin.create()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.create)\n            *   [`Plugin.delete()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.delete)\n            *   [`Plugin.description`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.description)\n            *   [`Plugin.get()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.get)\n            *   [`Plugin.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.handle)\n            *   [`Plugin.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.id)\n            *   [`Plugin.is_public`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.is_public)\n            *   [`Plugin.list()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.list)\n            *   [`Plugin.metadata`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.metadata)\n            *   [`Plugin.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.parse_obj)\n            *   [`Plugin.profile`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.profile)\n            *   [`Plugin.readme`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.readme)\n            *   [`Plugin.training_platform`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.training_platform)\n            *   [`Plugin.transport`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.transport)\n            *   [`Plugin.type`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.type)\n            *   [`Plugin.update()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.update)\n            *   [`Plugin.user_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin.user_id)\n        *   [`PluginAdapterType`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginAdapterType)\n            *   [`PluginAdapterType.huggingface`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginAdapterType.huggingface)\n            *   [`PluginAdapterType.openai`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginAdapterType.openai)\n            *   [`PluginAdapterType.steamship_docker`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginAdapterType.steamship_docker)\n            *   [`PluginAdapterType.steamship_sagemaker`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginAdapterType.steamship_sagemaker)\n        *   [`PluginTargetType`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginTargetType)\n            *   [`PluginTargetType.FILE`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginTargetType.FILE)\n            *   [`PluginTargetType.WORKSPACE`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginTargetType.WORKSPACE)\n        *   [`PluginType`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginType)\n            *   [`PluginType.classifier`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginType.classifier)\n            *   [`PluginType.embedder`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginType.embedder)\n            *   [`PluginType.generator`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginType.generator)\n            *   [`PluginType.parser`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginType.parser)\n            *   [`PluginType.tagger`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginType.tagger)\n        *   [`PluginUpdateRequest`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginUpdateRequest)\n            *   [`PluginUpdateRequest.description`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginUpdateRequest.description)\n            *   [`PluginUpdateRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginUpdateRequest.handle)\n            *   [`PluginUpdateRequest.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginUpdateRequest.id)\n            *   [`PluginUpdateRequest.profile`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginUpdateRequest.profile)\n            *   [`PluginUpdateRequest.readme`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.PluginUpdateRequest.readme)\n    *   [steamship.data.plugin.plugin\\_instance module](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship-data-plugin-plugin-instance-module)\n        *   [`CreatePluginInstanceRequest`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest)\n            *   [`CreatePluginInstanceRequest.config`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest.config)\n            *   [`CreatePluginInstanceRequest.fetch_if_exists`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest.fetch_if_exists)\n            *   [`CreatePluginInstanceRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest.handle)\n            *   [`CreatePluginInstanceRequest.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest.id)\n            *   [`CreatePluginInstanceRequest.plugin_handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest.plugin_handle)\n            *   [`CreatePluginInstanceRequest.plugin_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest.plugin_id)\n            *   [`CreatePluginInstanceRequest.plugin_version_handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest.plugin_version_handle)\n            *   [`CreatePluginInstanceRequest.plugin_version_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.CreatePluginInstanceRequest.plugin_version_id)\n        *   [`PluginInstance`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance)\n            *   [`PluginInstance.client`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.client)\n            *   [`PluginInstance.config`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.config)\n            *   [`PluginInstance.create()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.create)\n            *   [`PluginInstance.delete()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.delete)\n            *   [`PluginInstance.generate()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.generate)\n            *   [`PluginInstance.get()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.get)\n            *   [`PluginInstance.get_training_parameters()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.get_training_parameters)\n            *   [`PluginInstance.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.handle)\n            *   [`PluginInstance.hosting_cpu`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.hosting_cpu)\n            *   [`PluginInstance.hosting_environment`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.hosting_environment)\n            *   [`PluginInstance.hosting_memory`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.hosting_memory)\n            *   [`PluginInstance.hosting_timeout`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.hosting_timeout)\n            *   [`PluginInstance.hosting_type`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.hosting_type)\n            *   [`PluginInstance.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.id)\n            *   [`PluginInstance.init_status`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.init_status)\n            *   [`PluginInstance.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.parse_obj)\n            *   [`PluginInstance.plugin_handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.plugin_handle)\n            *   [`PluginInstance.plugin_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.plugin_id)\n            *   [`PluginInstance.plugin_version_handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.plugin_version_handle)\n            *   [`PluginInstance.plugin_version_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.plugin_version_id)\n            *   [`PluginInstance.refresh_init_status()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.refresh_init_status)\n            *   [`PluginInstance.tag()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.tag)\n            *   [`PluginInstance.train()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.train)\n            *   [`PluginInstance.user_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.user_id)\n            *   [`PluginInstance.wait_for_init()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.wait_for_init)\n            *   [`PluginInstance.workspace_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance.workspace_id)\n    *   [steamship.data.plugin.plugin\\_version module](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship-data-plugin-plugin-version-module)\n        *   [`CreatePluginVersionRequest`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest)\n            *   [`CreatePluginVersionRequest.config_template`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.config_template)\n            *   [`CreatePluginVersionRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.handle)\n            *   [`CreatePluginVersionRequest.hosting_handler`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.hosting_handler)\n            *   [`CreatePluginVersionRequest.hosting_memory`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.hosting_memory)\n            *   [`CreatePluginVersionRequest.hosting_timeout`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.hosting_timeout)\n            *   [`CreatePluginVersionRequest.is_default`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.is_default)\n            *   [`CreatePluginVersionRequest.is_public`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.is_public)\n            *   [`CreatePluginVersionRequest.plugin_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.plugin_id)\n            *   [`CreatePluginVersionRequest.type`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.CreatePluginVersionRequest.type)\n        *   [`ListPluginVersionsRequest`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.ListPluginVersionsRequest)\n            *   [`ListPluginVersionsRequest.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.ListPluginVersionsRequest.handle)\n            *   [`ListPluginVersionsRequest.plugin_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.ListPluginVersionsRequest.plugin_id)\n        *   [`ListPluginVersionsResponse`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.ListPluginVersionsResponse)\n            *   [`ListPluginVersionsResponse.plugins`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.ListPluginVersionsResponse.plugins)\n        *   [`PluginVersion`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion)\n            *   [`PluginVersion.client`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.client)\n            *   [`PluginVersion.config_template`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.config_template)\n            *   [`PluginVersion.create()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.create)\n            *   [`PluginVersion.delete()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.delete)\n            *   [`PluginVersion.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.handle)\n            *   [`PluginVersion.hosting_handler`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.hosting_handler)\n            *   [`PluginVersion.hosting_memory`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.hosting_memory)\n            *   [`PluginVersion.hosting_timeout`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.hosting_timeout)\n            *   [`PluginVersion.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.id)\n            *   [`PluginVersion.is_default`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.is_default)\n            *   [`PluginVersion.is_public`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.is_public)\n            *   [`PluginVersion.list()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.list)\n            *   [`PluginVersion.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.parse_obj)\n            *   [`PluginVersion.plugin_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion.plugin_id)\n    *   [steamship.data.plugin.prompt\\_generation\\_plugin\\_instance module](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship-data-plugin-prompt-generation-plugin-instance-module)\n        *   [`PromptGenerationPluginInstance`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.prompt_generation_plugin_instance.PromptGenerationPluginInstance)\n            *   [`PromptGenerationPluginInstance.create()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.prompt_generation_plugin_instance.PromptGenerationPluginInstance.create)\n            *   [`PromptGenerationPluginInstance.generate()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.prompt_generation_plugin_instance.PromptGenerationPluginInstance.generate)\n    *   [Module contents](https://docs.steamship.com/api-reference/steamship.data.plugin.html#module-contents)\n        *   [`HostingCpu`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu)\n            *   [`HostingCpu.LG`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.LG)\n            *   [`HostingCpu.MAX`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.MAX)\n            *   [`HostingCpu.MD`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.MD)\n            *   [`HostingCpu.MIN`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.MIN)\n            *   [`HostingCpu.SM`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.SM)\n            *   [`HostingCpu.XL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.XL)\n            *   [`HostingCpu.XS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.XS)\n            *   [`HostingCpu.XXL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.XXL)\n            *   [`HostingCpu.XXS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingCpu.XXS)\n        *   [`HostingEnvironment`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingEnvironment)\n            *   [`HostingEnvironment.PYTHON38`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingEnvironment.PYTHON38)\n            *   [`HostingEnvironment.STEAMSHIP_PYTORCH_CPU`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingEnvironment.STEAMSHIP_PYTORCH_CPU)\n        *   [`HostingMemory`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory)\n            *   [`HostingMemory.LG`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.LG)\n            *   [`HostingMemory.MAX`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.MAX)\n            *   [`HostingMemory.MD`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.MD)\n            *   [`HostingMemory.MIN`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.MIN)\n            *   [`HostingMemory.SM`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.SM)\n            *   [`HostingMemory.XL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.XL)\n            *   [`HostingMemory.XS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.XS)\n            *   [`HostingMemory.XXL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.XXL)\n            *   [`HostingMemory.XXS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingMemory.XXS)\n        *   [`HostingTimeout`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout)\n            *   [`HostingTimeout.LG`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.LG)\n            *   [`HostingTimeout.MAX`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.MAX)\n            *   [`HostingTimeout.MD`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.MD)\n            *   [`HostingTimeout.MIN`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.MIN)\n            *   [`HostingTimeout.SM`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.SM)\n            *   [`HostingTimeout.XL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.XL)\n            *   [`HostingTimeout.XS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.XS)\n            *   [`HostingTimeout.XXL`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.XXL)\n            *   [`HostingTimeout.XXS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingTimeout.XXS)\n        *   [`HostingType`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingType)\n            *   [`HostingType.ECS`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingType.ECS)\n            *   [`HostingType.LAMBDA`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.HostingType.LAMBDA)\n        *   [`Plugin`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin)\n            *   [`Plugin.client`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.client)\n            *   [`Plugin.create()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.create)\n            *   [`Plugin.delete()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.delete)\n            *   [`Plugin.description`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.description)\n            *   [`Plugin.get()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.get)\n            *   [`Plugin.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.handle)\n            *   [`Plugin.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.id)\n            *   [`Plugin.is_public`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.is_public)\n            *   [`Plugin.list()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.list)\n            *   [`Plugin.metadata`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.metadata)\n            *   [`Plugin.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.parse_obj)\n            *   [`Plugin.profile`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.profile)\n            *   [`Plugin.readme`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.readme)\n            *   [`Plugin.training_platform`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.training_platform)\n            *   [`Plugin.transport`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.transport)\n            *   [`Plugin.type`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.type)\n            *   [`Plugin.update()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.update)\n            *   [`Plugin.user_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.Plugin.user_id)\n        *   [`PluginAdapterType`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginAdapterType)\n            *   [`PluginAdapterType.huggingface`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginAdapterType.huggingface)\n            *   [`PluginAdapterType.openai`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginAdapterType.openai)\n            *   [`PluginAdapterType.steamship_docker`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginAdapterType.steamship_docker)\n            *   [`PluginAdapterType.steamship_sagemaker`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginAdapterType.steamship_sagemaker)\n        *   [`PluginInstance`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance)\n            *   [`PluginInstance.client`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.client)\n            *   [`PluginInstance.config`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.config)\n            *   [`PluginInstance.create()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.create)\n            *   [`PluginInstance.delete()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.delete)\n            *   [`PluginInstance.generate()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.generate)\n            *   [`PluginInstance.get()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.get)\n            *   [`PluginInstance.get_training_parameters()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.get_training_parameters)\n            *   [`PluginInstance.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.handle)\n            *   [`PluginInstance.hosting_cpu`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.hosting_cpu)\n            *   [`PluginInstance.hosting_environment`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.hosting_environment)\n            *   [`PluginInstance.hosting_memory`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.hosting_memory)\n            *   [`PluginInstance.hosting_timeout`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.hosting_timeout)\n            *   [`PluginInstance.hosting_type`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.hosting_type)\n            *   [`PluginInstance.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.id)\n            *   [`PluginInstance.init_status`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.init_status)\n            *   [`PluginInstance.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.parse_obj)\n            *   [`PluginInstance.plugin_handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.plugin_handle)\n            *   [`PluginInstance.plugin_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.plugin_id)\n            *   [`PluginInstance.plugin_version_handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.plugin_version_handle)\n            *   [`PluginInstance.plugin_version_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.plugin_version_id)\n            *   [`PluginInstance.refresh_init_status()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.refresh_init_status)\n            *   [`PluginInstance.tag()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.tag)\n            *   [`PluginInstance.train()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.train)\n            *   [`PluginInstance.user_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.user_id)\n            *   [`PluginInstance.wait_for_init()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.wait_for_init)\n            *   [`PluginInstance.workspace_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginInstance.workspace_id)\n        *   [`PluginTargetType`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginTargetType)\n            *   [`PluginTargetType.FILE`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginTargetType.FILE)\n            *   [`PluginTargetType.WORKSPACE`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginTargetType.WORKSPACE)\n        *   [`PluginType`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginType)\n            *   [`PluginType.classifier`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginType.classifier)\n            *   [`PluginType.embedder`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginType.embedder)\n            *   [`PluginType.generator`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginType.generator)\n            *   [`PluginType.parser`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginType.parser)\n            *   [`PluginType.tagger`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginType.tagger)\n        *   [`PluginVersion`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion)\n            *   [`PluginVersion.client`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.client)\n            *   [`PluginVersion.config_template`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.config_template)\n            *   [`PluginVersion.create()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.create)\n            *   [`PluginVersion.delete()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.delete)\n            *   [`PluginVersion.handle`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.handle)\n            *   [`PluginVersion.hosting_handler`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.hosting_handler)\n            *   [`PluginVersion.hosting_memory`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.hosting_memory)\n            *   [`PluginVersion.hosting_timeout`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.hosting_timeout)\n            *   [`PluginVersion.id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.id)\n            *   [`PluginVersion.is_default`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.is_default)\n            *   [`PluginVersion.is_public`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.is_public)\n            *   [`PluginVersion.list()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.list)\n            *   [`PluginVersion.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.parse_obj)\n            *   [`PluginVersion.plugin_id`](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.PluginVersion.plugin_id)\n*   [steamship.data.tags package](https://docs.steamship.com/api-reference/steamship.data.tags.html)\n    *   [Submodules](https://docs.steamship.com/api-reference/steamship.data.tags.html#submodules)\n    *   [steamship.data.tags.tag module](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship-data-tags-tag-module)\n        *   [`EmbeddingTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.EmbeddingTag)\n        *   [`EmotionTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.EmotionTag)\n            *   [`EmotionTag.Emotion`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.EmotionTag.Emotion)\n        *   [`EntityTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.EntityTag)\n            *   [`EntityTag.EntityType`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.EntityTag.EntityType)\n        *   [`IntentTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.IntentTag)\n            *   [`IntentTag.Intent`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.IntentTag.Intent)\n        *   [`PromptCompletionTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.PromptCompletionTag)\n        *   [`SentimentTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.SentimentTag)\n            *   [`SentimentTag.Sentiment`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.SentimentTag.Sentiment)\n        *   [`SummaryTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.SummaryTag)\n        *   [`Tag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag)\n            *   [`Tag.DeleteRequest`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.DeleteRequest)\n            *   [`Tag.ListRequest`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.ListRequest)\n            *   [`Tag.ListResponse`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.ListResponse)\n            *   [`Tag.block_id`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.block_id)\n            *   [`Tag.client`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.client)\n            *   [`Tag.create()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.create)\n            *   [`Tag.delete()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.delete)\n            *   [`Tag.end_idx`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.end_idx)\n            *   [`Tag.file_id`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.file_id)\n            *   [`Tag.id`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.id)\n            *   [`Tag.index()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.index)\n            *   [`Tag.kind`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.kind)\n            *   [`Tag.name`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.name)\n            *   [`Tag.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.parse_obj)\n            *   [`Tag.query()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.query)\n            *   [`Tag.start_idx`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.start_idx)\n            *   [`Tag.text`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.text)\n            *   [`Tag.value`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag.value)\n        *   [`TagQueryRequest`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TagQueryRequest)\n            *   [`TagQueryRequest.tag_filter_query`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TagQueryRequest.tag_filter_query)\n        *   [`TagQueryResponse`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TagQueryResponse)\n            *   [`TagQueryResponse.tags`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TagQueryResponse.tags)\n        *   [`TimestampTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TimestampTag)\n        *   [`TokenizationTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TokenizationTag)\n            *   [`TokenizationTag.Type`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TokenizationTag.Type)\n        *   [`TopicTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TopicTag)\n    *   [steamship.data.tags.tag\\_constants module](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship-data-tags-tag-constants-module)\n        *   [`ChatTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ChatTag)\n            *   [`ChatTag.CHAT_ID`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ChatTag.CHAT_ID)\n            *   [`ChatTag.CHUNK`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ChatTag.CHUNK)\n            *   [`ChatTag.CONTEXT_KEYS`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ChatTag.CONTEXT_KEYS)\n            *   [`ChatTag.INDEX_HANDLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ChatTag.INDEX_HANDLE)\n            *   [`ChatTag.MESSAGE_ID`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ChatTag.MESSAGE_ID)\n            *   [`ChatTag.ROLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ChatTag.ROLE)\n        *   [`DocTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag)\n            *   [`DocTag.ARTICLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.ARTICLE)\n            *   [`DocTag.BLOCK_CODE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.BLOCK_CODE)\n            *   [`DocTag.BLOCK_QUOTE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.BLOCK_QUOTE)\n            *   [`DocTag.CAPTION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.CAPTION)\n            *   [`DocTag.CHAPTER`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.CHAPTER)\n            *   [`DocTag.CHAT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.CHAT)\n            *   [`DocTag.DIV`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.DIV)\n            *   [`DocTag.DOCUMENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.DOCUMENT)\n            *   [`DocTag.EMPHASIZED`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.EMPHASIZED)\n            *   [`DocTag.FOOTER`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.FOOTER)\n            *   [`DocTag.H1`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.H1)\n            *   [`DocTag.H2`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.H2)\n            *   [`DocTag.H3`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.H3)\n            *   [`DocTag.H4`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.H4)\n            *   [`DocTag.H5`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.H5)\n            *   [`DocTag.HEADER`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.HEADER)\n            *   [`DocTag.IMAGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.IMAGE)\n            *   [`DocTag.LINE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.LINE)\n            *   [`DocTag.LINK`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.LINK)\n            *   [`DocTag.LIST_ITEM`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.LIST_ITEM)\n            *   [`DocTag.MAIN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.MAIN)\n            *   [`DocTag.METADATA`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.METADATA)\n            *   [`DocTag.ORDERED_LIST`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.ORDERED_LIST)\n            *   [`DocTag.PAGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.PAGE)\n            *   [`DocTag.PARAGRAPH`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.PARAGRAPH)\n            *   [`DocTag.PRE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.PRE)\n            *   [`DocTag.REGION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.REGION)\n            *   [`DocTag.SENTENCE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.SENTENCE)\n            *   [`DocTag.SOURCE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.SOURCE)\n            *   [`DocTag.SPAN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.SPAN)\n            *   [`DocTag.STRONG`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.STRONG)\n            *   [`DocTag.SUBTITLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.SUBTITLE)\n            *   [`DocTag.TELETYPE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.TELETYPE)\n            *   [`DocTag.TEXT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.TEXT)\n            *   [`DocTag.TITLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.TITLE)\n            *   [`DocTag.TOKEN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.TOKEN)\n            *   [`DocTag.UNDERLINED`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.UNDERLINED)\n            *   [`DocTag.UNKNOWN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.UNKNOWN)\n            *   [`DocTag.UNORDERED_LIST`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.UNORDERED_LIST)\n            *   [`DocTag.from_html_tag()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag.from_html_tag)\n        *   [`GenerationTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.GenerationTag)\n            *   [`GenerationTag.GIST`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.GenerationTag.GIST)\n            *   [`GenerationTag.HEADLINE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.GenerationTag.HEADLINE)\n            *   [`GenerationTag.PROMPT_COMPLETION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.GenerationTag.PROMPT_COMPLETION)\n            *   [`GenerationTag.SUMMARY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.GenerationTag.SUMMARY)\n        *   [`ProvenanceTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ProvenanceTag)\n            *   [`ProvenanceTag.FILE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ProvenanceTag.FILE)\n            *   [`ProvenanceTag.SPEAKER`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ProvenanceTag.SPEAKER)\n            *   [`ProvenanceTag.URL`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.ProvenanceTag.URL)\n        *   [`RoleTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag)\n            *   [`RoleTag.AGENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag.AGENT)\n            *   [`RoleTag.ASSISTANT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag.ASSISTANT)\n            *   [`RoleTag.FUNCTION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag.FUNCTION)\n            *   [`RoleTag.SYSTEM`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag.SYSTEM)\n            *   [`RoleTag.USER`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag.USER)\n        *   [`TagKind`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind)\n            *   [`TagKind.CHAT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.CHAT)\n            *   [`TagKind.CHAT_HISTORY_CONTEXT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.CHAT_HISTORY_CONTEXT)\n            *   [`TagKind.DEPENDENCY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.DEPENDENCY)\n            *   [`TagKind.DOCUMENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.DOCUMENT)\n            *   [`TagKind.EMBEDDING`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.EMBEDDING)\n            *   [`TagKind.EMOTION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.EMOTION)\n            *   [`TagKind.ENTITY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.ENTITY)\n            *   [`TagKind.GENERATION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.GENERATION)\n            *   [`TagKind.INTENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.INTENT)\n            *   [`TagKind.KIND`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.KIND)\n            *   [`TagKind.MESSAGE_ID`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.MESSAGE_ID)\n            *   [`TagKind.PART_OF_SPEECH`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.PART_OF_SPEECH)\n            *   [`TagKind.PROVENANCE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.PROVENANCE)\n            *   [`TagKind.ROLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.ROLE)\n            *   [`TagKind.SEARCH_RESULT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.SEARCH_RESULT)\n            *   [`TagKind.SENTIMENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.SENTIMENT)\n            *   [`TagKind.SUMMARY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.SUMMARY)\n            *   [`TagKind.TIMESTAMP`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.TIMESTAMP)\n            *   [`TagKind.TOKEN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.TOKEN)\n            *   [`TagKind.TOKENIZATION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.TOKENIZATION)\n            *   [`TagKind.TOPIC`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind.TOPIC)\n        *   [`TagValueKey`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey)\n            *   [`TagValueKey.BOOL_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.BOOL_VALUE)\n            *   [`TagValueKey.DIRECT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.DIRECT)\n            *   [`TagValueKey.END_TIME_S`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.END_TIME_S)\n            *   [`TagValueKey.ENTITY_NAME`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.ENTITY_NAME)\n            *   [`TagValueKey.NUMBER_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.NUMBER_VALUE)\n            *   [`TagValueKey.SCORE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.SCORE)\n            *   [`TagValueKey.START_TIME_S`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.START_TIME_S)\n            *   [`TagValueKey.STRING_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.STRING_VALUE)\n            *   [`TagValueKey.TIMESTAMP_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.TIMESTAMP_VALUE)\n            *   [`TagValueKey.VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.VALUE)\n            *   [`TagValueKey.VECTOR_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey.VECTOR_VALUE)\n        *   [`TokenTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag)\n            *   [`TokenTag.ENTITY_IOB`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.ENTITY_IOB)\n            *   [`TokenTag.ENTITY_TYPE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.ENTITY_TYPE)\n            *   [`TokenTag.HEAD`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.HEAD)\n            *   [`TokenTag.IS_ALPHA`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_ALPHA)\n            *   [`TokenTag.IS_ASCII`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_ASCII)\n            *   [`TokenTag.IS_BRACKET`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_BRACKET)\n            *   [`TokenTag.IS_CURRENCY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_CURRENCY)\n            *   [`TokenTag.IS_DIGIT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_DIGIT)\n            *   [`TokenTag.IS_LEFT_PUNCT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_LEFT_PUNCT)\n            *   [`TokenTag.IS_OUT_OF_VOCABULARY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_OUT_OF_VOCABULARY)\n            *   [`TokenTag.IS_PUNCT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_PUNCT)\n            *   [`TokenTag.IS_QUOTE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_QUOTE)\n            *   [`TokenTag.IS_RIGHT_PUNCT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_RIGHT_PUNCT)\n            *   [`TokenTag.IS_SPACE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_SPACE)\n            *   [`TokenTag.IS_STOPWORD`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_STOPWORD)\n            *   [`TokenTag.IS_TITLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.IS_TITLE)\n            *   [`TokenTag.LANGUAGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.LANGUAGE)\n            *   [`TokenTag.LEFT_EDGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.LEFT_EDGE)\n            *   [`TokenTag.LEMMA`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.LEMMA)\n            *   [`TokenTag.LIKE_EMAIL`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.LIKE_EMAIL)\n            *   [`TokenTag.LIKE_NUM`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.LIKE_NUM)\n            *   [`TokenTag.LIKE_URL`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.LIKE_URL)\n            *   [`TokenTag.NORMALIZED`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.NORMALIZED)\n            *   [`TokenTag.PREFIX`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.PREFIX)\n            *   [`TokenTag.RIGHT_EDGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.RIGHT_EDGE)\n            *   [`TokenTag.SHAPE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.SHAPE)\n            *   [`TokenTag.SUFFIX`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.SUFFIX)\n            *   [`TokenTag.TEXT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.TEXT)\n            *   [`TokenTag.TEXT_WITH_WHITESPACE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.TEXT_WITH_WHITESPACE)\n            *   [`TokenTag.WHITESPACE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TokenTag.WHITESPACE)\n    *   [Module contents](https://docs.steamship.com/api-reference/steamship.data.tags.html#module-contents)\n        *   [`DocTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag)\n            *   [`DocTag.ARTICLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.ARTICLE)\n            *   [`DocTag.BLOCK_CODE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.BLOCK_CODE)\n            *   [`DocTag.BLOCK_QUOTE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.BLOCK_QUOTE)\n            *   [`DocTag.CAPTION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.CAPTION)\n            *   [`DocTag.CHAPTER`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.CHAPTER)\n            *   [`DocTag.CHAT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.CHAT)\n            *   [`DocTag.DIV`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.DIV)\n            *   [`DocTag.DOCUMENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.DOCUMENT)\n            *   [`DocTag.EMPHASIZED`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.EMPHASIZED)\n            *   [`DocTag.FOOTER`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.FOOTER)\n            *   [`DocTag.H1`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.H1)\n            *   [`DocTag.H2`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.H2)\n            *   [`DocTag.H3`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.H3)\n            *   [`DocTag.H4`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.H4)\n            *   [`DocTag.H5`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.H5)\n            *   [`DocTag.HEADER`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.HEADER)\n            *   [`DocTag.IMAGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.IMAGE)\n            *   [`DocTag.LINE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.LINE)\n            *   [`DocTag.LINK`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.LINK)\n            *   [`DocTag.LIST_ITEM`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.LIST_ITEM)\n            *   [`DocTag.MAIN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.MAIN)\n            *   [`DocTag.METADATA`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.METADATA)\n            *   [`DocTag.ORDERED_LIST`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.ORDERED_LIST)\n            *   [`DocTag.PAGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.PAGE)\n            *   [`DocTag.PARAGRAPH`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.PARAGRAPH)\n            *   [`DocTag.PRE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.PRE)\n            *   [`DocTag.REGION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.REGION)\n            *   [`DocTag.SENTENCE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.SENTENCE)\n            *   [`DocTag.SOURCE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.SOURCE)\n            *   [`DocTag.SPAN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.SPAN)\n            *   [`DocTag.STRONG`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.STRONG)\n            *   [`DocTag.SUBTITLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.SUBTITLE)\n            *   [`DocTag.TELETYPE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.TELETYPE)\n            *   [`DocTag.TEXT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.TEXT)\n            *   [`DocTag.TITLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.TITLE)\n            *   [`DocTag.TOKEN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.TOKEN)\n            *   [`DocTag.UNDERLINED`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.UNDERLINED)\n            *   [`DocTag.UNKNOWN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.UNKNOWN)\n            *   [`DocTag.UNORDERED_LIST`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.UNORDERED_LIST)\n            *   [`DocTag.from_html_tag()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.DocTag.from_html_tag)\n        *   [`GenerationTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.GenerationTag)\n            *   [`GenerationTag.GIST`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.GenerationTag.GIST)\n            *   [`GenerationTag.HEADLINE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.GenerationTag.HEADLINE)\n            *   [`GenerationTag.PROMPT_COMPLETION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.GenerationTag.PROMPT_COMPLETION)\n            *   [`GenerationTag.SUMMARY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.GenerationTag.SUMMARY)\n        *   [`Tag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag)\n            *   [`Tag.DeleteRequest`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.DeleteRequest)\n            *   [`Tag.ListRequest`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.ListRequest)\n            *   [`Tag.ListResponse`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.ListResponse)\n            *   [`Tag.block_id`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.block_id)\n            *   [`Tag.client`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.client)\n            *   [`Tag.create()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.create)\n            *   [`Tag.delete()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.delete)\n            *   [`Tag.end_idx`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.end_idx)\n            *   [`Tag.file_id`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.file_id)\n            *   [`Tag.id`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.id)\n            *   [`Tag.index()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.index)\n            *   [`Tag.kind`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.kind)\n            *   [`Tag.name`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.name)\n            *   [`Tag.parse_obj()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.parse_obj)\n            *   [`Tag.query()`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.query)\n            *   [`Tag.start_idx`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.start_idx)\n            *   [`Tag.text`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.text)\n            *   [`Tag.value`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.Tag.value)\n        *   [`TagKind`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind)\n            *   [`TagKind.CHAT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.CHAT)\n            *   [`TagKind.CHAT_HISTORY_CONTEXT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.CHAT_HISTORY_CONTEXT)\n            *   [`TagKind.DEPENDENCY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.DEPENDENCY)\n            *   [`TagKind.DOCUMENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.DOCUMENT)\n            *   [`TagKind.EMBEDDING`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.EMBEDDING)\n            *   [`TagKind.EMOTION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.EMOTION)\n            *   [`TagKind.ENTITY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.ENTITY)\n            *   [`TagKind.GENERATION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.GENERATION)\n            *   [`TagKind.INTENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.INTENT)\n            *   [`TagKind.KIND`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.KIND)\n            *   [`TagKind.MESSAGE_ID`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.MESSAGE_ID)\n            *   [`TagKind.PART_OF_SPEECH`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.PART_OF_SPEECH)\n            *   [`TagKind.PROVENANCE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.PROVENANCE)\n            *   [`TagKind.ROLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.ROLE)\n            *   [`TagKind.SEARCH_RESULT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.SEARCH_RESULT)\n            *   [`TagKind.SENTIMENT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.SENTIMENT)\n            *   [`TagKind.SUMMARY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.SUMMARY)\n            *   [`TagKind.TIMESTAMP`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.TIMESTAMP)\n            *   [`TagKind.TOKEN`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.TOKEN)\n            *   [`TagKind.TOKENIZATION`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.TOKENIZATION)\n            *   [`TagKind.TOPIC`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagKind.TOPIC)\n        *   [`TagValueKey`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey)\n            *   [`TagValueKey.BOOL_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.BOOL_VALUE)\n            *   [`TagValueKey.DIRECT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.DIRECT)\n            *   [`TagValueKey.END_TIME_S`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.END_TIME_S)\n            *   [`TagValueKey.ENTITY_NAME`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.ENTITY_NAME)\n            *   [`TagValueKey.NUMBER_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.NUMBER_VALUE)\n            *   [`TagValueKey.SCORE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.SCORE)\n            *   [`TagValueKey.START_TIME_S`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.START_TIME_S)\n            *   [`TagValueKey.STRING_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.STRING_VALUE)\n            *   [`TagValueKey.TIMESTAMP_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.TIMESTAMP_VALUE)\n            *   [`TagValueKey.VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.VALUE)\n            *   [`TagValueKey.VECTOR_VALUE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TagValueKey.VECTOR_VALUE)\n        *   [`TokenTag`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag)\n            *   [`TokenTag.ENTITY_IOB`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.ENTITY_IOB)\n            *   [`TokenTag.ENTITY_TYPE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.ENTITY_TYPE)\n            *   [`TokenTag.HEAD`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.HEAD)\n            *   [`TokenTag.IS_ALPHA`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_ALPHA)\n            *   [`TokenTag.IS_ASCII`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_ASCII)\n            *   [`TokenTag.IS_BRACKET`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_BRACKET)\n            *   [`TokenTag.IS_CURRENCY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_CURRENCY)\n            *   [`TokenTag.IS_DIGIT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_DIGIT)\n            *   [`TokenTag.IS_LEFT_PUNCT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_LEFT_PUNCT)\n            *   [`TokenTag.IS_OUT_OF_VOCABULARY`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_OUT_OF_VOCABULARY)\n            *   [`TokenTag.IS_PUNCT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_PUNCT)\n            *   [`TokenTag.IS_QUOTE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_QUOTE)\n            *   [`TokenTag.IS_RIGHT_PUNCT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_RIGHT_PUNCT)\n            *   [`TokenTag.IS_SPACE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_SPACE)\n            *   [`TokenTag.IS_STOPWORD`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_STOPWORD)\n            *   [`TokenTag.IS_TITLE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.IS_TITLE)\n            *   [`TokenTag.LANGUAGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.LANGUAGE)\n            *   [`TokenTag.LEFT_EDGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.LEFT_EDGE)\n            *   [`TokenTag.LEMMA`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.LEMMA)\n            *   [`TokenTag.LIKE_EMAIL`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.LIKE_EMAIL)\n            *   [`TokenTag.LIKE_NUM`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.LIKE_NUM)\n            *   [`TokenTag.LIKE_URL`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.LIKE_URL)\n            *   [`TokenTag.NORMALIZED`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.NORMALIZED)\n            *   [`TokenTag.PREFIX`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.PREFIX)\n            *   [`TokenTag.RIGHT_EDGE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.RIGHT_EDGE)\n            *   [`TokenTag.SHAPE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.SHAPE)\n            *   [`TokenTag.SUFFIX`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.SUFFIX)\n            *   [`TokenTag.TEXT`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.TEXT)\n            *   [`TokenTag.TEXT_WITH_WHITESPACE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.TEXT_WITH_WHITESPACE)\n            *   [`TokenTag.WHITESPACE`](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.TokenTag.WHITESPACE)\n\n## Submodules[#](#submodules \"Link to this heading\")\n\n## steamship.data.block module[#](#steamship-data-block-module \"Link to this heading\")\n\n_class_ steamship.data.block.Block(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= \\[\\]_, _index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mimeType: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _publicData: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _contentURL: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _uploadType: [BlockUploadType](#steamship.data.block.BlockUploadType \"steamship.data.block.BlockUploadType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _uploadBytes: [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block)[#](#steamship.data.block.Block \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nA Block is a chunk of content within a File. It can be plain text content, image content, video content, etc. If the content is not text, the text value may be the empty string for backwards compatibility.\n\n_class_ ListRequest(_\\*_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.ListRequest)[#](#steamship.data.block.Block.ListRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.block.Block.ListRequest.file_id \"Link to this definition\")\n\n_class_ ListResponse(_\\*_, _blocks: List\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\] \\= \\[\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.ListResponse)[#](#steamship.data.block.Block.ListResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\nblocks_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.data.block.Block.ListResponse.blocks \"Link to this definition\")\n\nas\\_llm\\_input(_exclude\\_block\\_wrapper: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_) → [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.as_llm_input)[#](#steamship.data.block.Block.as_llm_input \"Link to this definition\")\n\n_property_ chat\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.block.Block.chat_id \"Link to this definition\")\n\n_property_ chat\\_role_: [RoleTag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag \"steamship.data.tags.tag_constants.RoleTag\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.chat_role \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.block.Block.client \"Link to this definition\")\n\ncontent\\_url_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.content_url \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Block](#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.create)[#](#steamship.data.block.Block.create \"Link to this definition\")\n\nCreate a new Block within a File specified by file\\_id.\n\nYou can create a Block in several ways: - Providing raw text as the text parameter; - Providing the content of the block as string or bytes; - Providing a publicly accessible URL where the content is stored.\n\ndelete() → [Block](#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.delete)[#](#steamship.data.block.Block.delete \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.block.Block.file_id \"Link to this definition\")\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [Block](#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.get)[#](#steamship.data.block.Block.get \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.block.Block.id \"Link to this definition\")\n\nindex(_embedding\\_plugin\\_instance: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.index)[#](#steamship.data.block.Block.index \"Link to this definition\")\n\nIndex this block.\n\nindex\\_in\\_file_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.index_in_file \"Link to this definition\")\n\nis\\_audio()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.is_audio)[#](#steamship.data.block.Block.is_audio \"Link to this definition\")\n\nReturn whether this is an audio Block.\n\nis\\_image()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.is_image)[#](#steamship.data.block.Block.is_image \"Link to this definition\")\n\nReturn whether this is an image Block.\n\nis\\_text() → [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.is_text)[#](#steamship.data.block.Block.is_text \"Link to this definition\")\n\nReturn whether this is a text Block.\n\nis\\_video()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.is_video)[#](#steamship.data.block.Block.is_video \"Link to this definition\")\n\nReturn whether this is a video Block.\n\n_property_ message\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.block.Block.message_id \"Link to this definition\")\n\nmime\\_type_: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.mime_type \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.parse_obj)[#](#steamship.data.block.Block.parse_obj \"Link to this definition\")\n\npublic\\_data_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.block.Block.public_data \"Link to this definition\")\n\n_static_ query(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _tag\\_filter\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [BlockQueryResponse](#steamship.data.block.BlockQueryResponse \"steamship.data.block.BlockQueryResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.query)[#](#steamship.data.block.Block.query \"Link to this definition\")\n\nraw()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.raw)[#](#steamship.data.block.Block.raw \"Link to this definition\")\n\n_property_ raw\\_data\\_url_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.raw_data_url \"Link to this definition\")\n\nReturn a URL at which the data content of this Block can be accessed. If public\\_data is True, this content can be accessed without an API key.\n\nset\\_chat\\_id(_chat\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.set_chat_id)[#](#steamship.data.block.Block.set_chat_id \"Link to this definition\")\n\nset\\_chat\\_role(_role: [RoleTag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag \"steamship.data.tags.tag_constants.RoleTag\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.set_chat_role)[#](#steamship.data.block.Block.set_chat_role \"Link to this definition\")\n\nset\\_message\\_id(_message\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.set_message_id)[#](#steamship.data.block.Block.set_message_id \"Link to this definition\")\n\nset\\_public\\_data(_public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.set_public_data)[#](#steamship.data.block.Block.set_public_data \"Link to this definition\")\n\nSet the public\\_data flag on this Block. If this object already exists server-side, update the flag.\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.tags \"Link to this definition\")\n\ntext_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.block.Block.text \"Link to this definition\")\n\nto\\_public\\_url() → [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.to_public_url)[#](#steamship.data.block.Block.to_public_url \"Link to this definition\")\n\nReturn a public URL to access the Block’s data.\n\nupload\\_bytes_: [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.upload_bytes \"Link to this definition\")\n\nupload\\_type_: [BlockUploadType](#steamship.data.block.BlockUploadType \"steamship.data.block.BlockUploadType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.upload_type \"Link to this definition\")\n\nurl_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.block.Block.url \"Link to this definition\")\n\n_class_ steamship.data.block.BlockQueryRequest(_\\*_, _tagFilterQuery: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#BlockQueryRequest)[#](#steamship.data.block.BlockQueryRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\ntag\\_filter\\_query_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.block.BlockQueryRequest.tag_filter_query \"Link to this definition\")\n\n_class_ steamship.data.block.BlockQueryResponse(_\\*_, _blocks: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#BlockQueryResponse)[#](#steamship.data.block.BlockQueryResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\nblocks_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.data.block.BlockQueryResponse.blocks \"Link to this definition\")\n\n_class_ steamship.data.block.BlockUploadType(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#BlockUploadType)[#](#steamship.data.block.BlockUploadType \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nBLOCKS _\\= 'blocks'_[#](#steamship.data.block.BlockUploadType.BLOCKS \"Link to this definition\")\n\nFILE _\\= 'file'_[#](#steamship.data.block.BlockUploadType.FILE \"Link to this definition\")\n\nNONE _\\= 'none'_[#](#steamship.data.block.BlockUploadType.NONE \"Link to this definition\")\n\nURL _\\= 'url'_[#](#steamship.data.block.BlockUploadType.URL \"Link to this definition\")\n\nsteamship.data.block.get\\_tag\\_value\\_key(_tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_, _key: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _kind: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → any | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#get_tag_value_key)[#](#steamship.data.block.get_tag_value_key \"Link to this definition\")\n\nIterates through a list of tags and returns the first that contains the provided Kind/Name/ValueKey.\n\n## steamship.data.embeddings module[#](#steamship-data-embeddings-module \"Link to this heading\")\n\n_class_ steamship.data.embeddings.EmbedAndSearchRequest(_\\*_, _query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _docs: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _pluginInstance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _k: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= 1_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbedAndSearchRequest)[#](#steamship.data.embeddings.EmbedAndSearchRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\ndocs_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_[#](#steamship.data.embeddings.EmbedAndSearchRequest.docs \"Link to this definition\")\n\nk_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbedAndSearchRequest.k \"Link to this definition\")\n\nplugin\\_instance_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbedAndSearchRequest.plugin_instance \"Link to this definition\")\n\nquery_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbedAndSearchRequest.query \"Link to this definition\")\n\n_class_ steamship.data.embeddings.EmbeddedItem(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _indexId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tagId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _value: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_, _embedding: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\")\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddedItem)[#](#steamship.data.embeddings.EmbeddedItem \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.block_id \"Link to this definition\")\n\nclone\\_for\\_insert() → [EmbeddedItem](#steamship.data.embeddings.EmbeddedItem \"steamship.data.embeddings.EmbeddedItem\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddedItem.clone_for_insert)[#](#steamship.data.embeddings.EmbeddedItem.clone_for_insert \"Link to this definition\")\n\nProduces a clone with a string representation of the metadata\n\nembedding_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\")\\]_[#](#steamship.data.embeddings.EmbeddedItem.embedding \"Link to this definition\")\n\nexternal\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.external_id \"Link to this definition\")\n\nexternal\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.external_type \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.file_id \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.id \"Link to this definition\")\n\nindex\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.index_id \"Link to this definition\")\n\nmetadata_: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.metadata \"Link to this definition\")\n\ntag\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.tag_id \"Link to this definition\")\n\nvalue_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddedItem.value \"Link to this definition\")\n\n_class_ steamship.data.embeddings.EmbeddingIndex(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _plugin: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex)[#](#steamship.data.embeddings.EmbeddingIndex \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nA persistent, read-optimized index over embeddings.\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.embeddings.EmbeddingIndex.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _embedder\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _external\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _external\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_) → [EmbeddingIndex](#steamship.data.embeddings.EmbeddingIndex \"steamship.data.embeddings.EmbeddingIndex\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.create)[#](#steamship.data.embeddings.EmbeddingIndex.create \"Link to this definition\")\n\ndelete() → [EmbeddingIndex](#steamship.data.embeddings.EmbeddingIndex \"steamship.data.embeddings.EmbeddingIndex\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.delete)[#](#steamship.data.embeddings.EmbeddingIndex.delete \"Link to this definition\")\n\nembed() → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[IndexEmbedResponse](#steamship.data.embeddings.IndexEmbedResponse \"steamship.data.embeddings.IndexEmbedResponse\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.embed)[#](#steamship.data.embeddings.EmbeddingIndex.embed \"Link to this definition\")\n\nexternal\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddingIndex.external_id \"Link to this definition\")\n\nexternal\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddingIndex.external_type \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddingIndex.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddingIndex.id \"Link to this definition\")\n\ninsert(_value: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _external\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _external\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\") | [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\") \\= None_, _reindex: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _allow\\_long\\_records\\=False_) → [IndexInsertResponse](#steamship.data.embeddings.IndexInsertResponse \"steamship.data.embeddings.IndexInsertResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.insert)[#](#steamship.data.embeddings.EmbeddingIndex.insert \"Link to this definition\")\n\ninsert\\_file(_file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _block\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _external\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _external\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\") | [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\") \\= None_, _reindex: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [IndexInsertResponse](#steamship.data.embeddings.IndexInsertResponse \"steamship.data.embeddings.IndexInsertResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.insert_file)[#](#steamship.data.embeddings.EmbeddingIndex.insert_file \"Link to this definition\")\n\ninsert\\_many(_items: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[EmbeddedItem](#steamship.data.embeddings.EmbeddedItem \"steamship.data.embeddings.EmbeddedItem\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _reindex: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _allow\\_long\\_records\\=False_) → [IndexInsertResponse](#steamship.data.embeddings.IndexInsertResponse \"steamship.data.embeddings.IndexInsertResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.insert_many)[#](#steamship.data.embeddings.EmbeddingIndex.insert_many \"Link to this definition\")\n\nlist\\_items(_file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _block\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _span\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _page\\_size: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _page\\_token: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sort\\_order: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_) → [ListItemsResponse](#steamship.data.embeddings.ListItemsResponse \"steamship.data.embeddings.ListItemsResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.list_items)[#](#steamship.data.embeddings.EmbeddingIndex.list_items \"Link to this definition\")\n\nmetadata_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddingIndex.metadata \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddingIndex.name \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.parse_obj)[#](#steamship.data.embeddings.EmbeddingIndex.parse_obj \"Link to this definition\")\n\nplugin_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.EmbeddingIndex.plugin \"Link to this definition\")\n\nsearch(_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | List\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _k: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= 1_, _include\\_metadata: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[QueryResults](#steamship.data.embeddings.QueryResults \"steamship.data.embeddings.QueryResults\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.search)[#](#steamship.data.embeddings.EmbeddingIndex.search \"Link to this definition\")\n\n_class_ steamship.data.embeddings.IndexCreateRequest(_\\*_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginInstance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fetchIfExists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _externalId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#IndexCreateRequest)[#](#steamship.data.embeddings.IndexCreateRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nexternal\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexCreateRequest.external_id \"Link to this definition\")\n\nexternal\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexCreateRequest.external_type \"Link to this definition\")\n\nfetch\\_if\\_exists_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexCreateRequest.fetch_if_exists \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexCreateRequest.handle \"Link to this definition\")\n\nmetadata_: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexCreateRequest.metadata \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexCreateRequest.name \"Link to this definition\")\n\nplugin\\_instance_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexCreateRequest.plugin_instance \"Link to this definition\")\n\n_class_ steamship.data.embeddings.IndexEmbedRequest(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#IndexEmbedRequest)[#](#steamship.data.embeddings.IndexEmbedRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexEmbedRequest.id \"Link to this definition\")\n\n_class_ steamship.data.embeddings.IndexEmbedResponse(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#IndexEmbedResponse)[#](#steamship.data.embeddings.IndexEmbedResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexEmbedResponse.id \"Link to this definition\")\n\n_class_ steamship.data.embeddings.IndexInsertRequest(_\\*_, _indexId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _items: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[EmbeddedItem](#steamship.data.embeddings.EmbeddedItem \"steamship.data.embeddings.EmbeddedItem\")\\] \\= None_, _value: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_, _reindex: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#IndexInsertRequest)[#](#steamship.data.embeddings.IndexInsertRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nblock\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexInsertRequest.block_type \"Link to this definition\")\n\nexternal\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexInsertRequest.external_id \"Link to this definition\")\n\nexternal\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexInsertRequest.external_type \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexInsertRequest.file_id \"Link to this definition\")\n\nindex\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexInsertRequest.index_id \"Link to this definition\")\n\nitems_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[EmbeddedItem](#steamship.data.embeddings.EmbeddedItem \"steamship.data.embeddings.EmbeddedItem\")\\]_[#](#steamship.data.embeddings.IndexInsertRequest.items \"Link to this definition\")\n\nmetadata_: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexInsertRequest.metadata \"Link to this definition\")\n\nreindex_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexInsertRequest.reindex \"Link to this definition\")\n\nvalue_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexInsertRequest.value \"Link to this definition\")\n\n_class_ steamship.data.embeddings.IndexInsertResponse(_\\*_, _itemIds: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[IndexItemId](#steamship.data.embeddings.IndexItemId \"steamship.data.embeddings.IndexItemId\")\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#IndexInsertResponse)[#](#steamship.data.embeddings.IndexInsertResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\nitem\\_ids_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[IndexItemId](#steamship.data.embeddings.IndexItemId \"steamship.data.embeddings.IndexItemId\")\\]_[#](#steamship.data.embeddings.IndexInsertResponse.item_ids \"Link to this definition\")\n\n_class_ steamship.data.embeddings.IndexItemId(_\\*_, _indexId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#IndexItemId)[#](#steamship.data.embeddings.IndexItemId \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexItemId.id \"Link to this definition\")\n\nindex\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexItemId.index_id \"Link to this definition\")\n\n_class_ steamship.data.embeddings.IndexSearchRequest(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _queries: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\] \\= None_, _k: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= 1_, _includeMetadata: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#IndexSearchRequest)[#](#steamship.data.embeddings.IndexSearchRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexSearchRequest.id \"Link to this definition\")\n\ninclude\\_metadata_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexSearchRequest.include_metadata \"Link to this definition\")\n\nk_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexSearchRequest.k \"Link to this definition\")\n\nqueries_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_[#](#steamship.data.embeddings.IndexSearchRequest.queries \"Link to this definition\")\n\nquery_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.IndexSearchRequest.query \"Link to this definition\")\n\n_class_ steamship.data.embeddings.ListItemsRequest(_\\*_, _pageSize: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _pageToken: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sortOrder: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _spanId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#ListItemsRequest)[#](#steamship.data.embeddings.ListItemsRequest \"Link to this definition\")\n\nBases: [`ListRequest`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.ListRequest \"steamship.base.request.ListRequest\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.ListItemsRequest.block_id \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.ListItemsRequest.file_id \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.ListItemsRequest.id \"Link to this definition\")\n\nspan\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.embeddings.ListItemsRequest.span_id \"Link to this definition\")\n\n_class_ steamship.data.embeddings.ListItemsResponse(_\\*_, _nextPageToken: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _items: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[EmbeddedItem](#steamship.data.embeddings.EmbeddedItem \"steamship.data.embeddings.EmbeddedItem\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#ListItemsResponse)[#](#steamship.data.embeddings.ListItemsResponse \"Link to this definition\")\n\nBases: [`ListResponse`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.ListResponse \"steamship.base.response.ListResponse\")\n\nitems_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[EmbeddedItem](#steamship.data.embeddings.EmbeddedItem \"steamship.data.embeddings.EmbeddedItem\")\\]_[#](#steamship.data.embeddings.ListItemsResponse.items \"Link to this definition\")\n\n_class_ steamship.data.embeddings.QueryResult(_\\*_, _value: [Hit](#steamship.data.search.Hit \"steamship.data.search.Hit\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _score: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#QueryResult)[#](#steamship.data.embeddings.QueryResult \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.embeddings.QueryResult.id \"Link to this definition\")\n\nindex_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.embeddings.QueryResult.index \"Link to this definition\")\n\nscore_: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.embeddings.QueryResult.score \"Link to this definition\")\n\nvalue_: [Hit](#steamship.data.search.Hit \"steamship.data.search.Hit\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.embeddings.QueryResult.value \"Link to this definition\")\n\n_class_ steamship.data.embeddings.QueryResults(_\\*_, _items: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[QueryResult](#steamship.data.embeddings.QueryResult \"steamship.data.embeddings.QueryResult\")\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#QueryResults)[#](#steamship.data.embeddings.QueryResults \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nitems_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[QueryResult](#steamship.data.embeddings.QueryResult \"steamship.data.embeddings.QueryResult\")\\]_[#](#steamship.data.embeddings.QueryResults.items \"Link to this definition\")\n\n## steamship.data.file module[#](#steamship-data-file-module \"Link to this heading\")\n\n_class_ steamship.data.file.File(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _mimeType: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") \\= None_, _workspaceId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blocks: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\] \\= \\[\\]_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= \\[\\]_, _filename: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _publicData: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File)[#](#steamship.data.file.File \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nA file.\n\n_class_ CreateResponse(_data: Any \\= None_, _string: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _\\_bytes: [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") | [io.BytesIO](https://docs.python.org/3.11/library/io.html#io.BytesIO \"(in Python v3.11)\") \\= None_, _json: [io.BytesIO](https://docs.python.org/3.11/library/io.html#io.BytesIO \"(in Python v3.11)\") \\= None_, _mime\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.CreateResponse)[#](#steamship.data.file.File.CreateResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\ndata\\__: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_[#](#steamship.data.file.File.CreateResponse.data_ \"Link to this definition\")\n\nmime\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.file.File.CreateResponse.mime_type \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → [Response](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.CreateResponse.parse_obj)[#](#steamship.data.file.File.CreateResponse.parse_obj \"Link to this definition\")\n\nappend\\_block(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Block](#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.append_block)[#](#steamship.data.file.File.append_block \"Link to this definition\")\n\nAppend a new block to this File. This is a convenience wrapper around Block.create(). You should provide only one of text, content, or url.\n\nThis is a server-side operation, saving the new Block to the file. The new block is appended to this client-side File as well for convenience.\n\nblockify(_plugin\\_instance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _wait\\_on\\_tasks: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Task](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.tasks.Task \"steamship.base.tasks.Task\")\\] \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.tasks.Task \"steamship.base.tasks.Task\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.blockify)[#](#steamship.data.file.File.blockify \"Link to this definition\")\n\nblocks_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.data.file.File.blocks \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.file.File.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blocks: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\] \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.create)[#](#steamship.data.file.File.create \"Link to this definition\")\n\n_static_ create\\_with\\_plugin(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _plugin\\_instance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _mime\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[File](#steamship.data.file.File \"steamship.data.file.File\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.create_with_plugin)[#](#steamship.data.file.File.create_with_plugin \"Link to this definition\")\n\ndelete() → [File](#steamship.data.file.File \"steamship.data.file.File\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.delete)[#](#steamship.data.file.File.delete \"Link to this definition\")\n\nfilename_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.file.File.filename \"Link to this definition\")\n\n_static_ from\\_local(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _file\\_path: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.from_local)[#](#steamship.data.file.File.from_local \"Link to this definition\")\n\nLoads a local file into a Steamship File.\n\nNOTE: the file\\_path should be relative to where the call to from\\_local is happening.\n\nLoaded files will automatically be tagged with a provenance tag.\n\nParameters:\n\n*   **client** – Steamship client for the workspace\n    \n*   **file\\_path** – Location of the file to upload **relative** to the current directory of the client\n    \n*   **mime\\_type** – Optional specification of a particular mime type. If not provided, a guess will be made.\n    \n*   **handle** – Intended handle (for lookups, etc.) for Steamship File\n    \n*   **tags** – Metadata to add to the Steamship File\n    \n*   **public\\_data** – Whether to make the Steamship File publicly-accessible\n    \n\ngenerate(_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _start\\_block\\_index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _end\\_block\\_index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _block\\_index\\_list: List\\[[int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _append\\_output\\_to\\_file: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _options: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _wait\\_on\\_tasks: List\\[[Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\] \\= None_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[GenerateResponse](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateResponse \"steamship.data.operations.generator.GenerateResponse\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.generate)[#](#steamship.data.file.File.generate \"Link to this definition\")\n\nGenerate new content from this file. Assumes this file as context for input and output. May specify start and end blocks.\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [File](#steamship.data.file.File \"steamship.data.file.File\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.get)[#](#steamship.data.file.File.get \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.file.File.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.file.File.id \"Link to this definition\")\n\nimport\\_with\\_plugin(_plugin\\_instance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _mime\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[File](#steamship.data.file.File \"steamship.data.file.File\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.import_with_plugin)[#](#steamship.data.file.File.import_with_plugin \"Link to this definition\")\n\nRun an import operation on an (empty) file object that has already been created.\n\nindex(_plugin\\_instance: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_) → [EmbeddingIndex](#steamship.data.embeddings.EmbeddingIndex \"steamship.data.embeddings.EmbeddingIndex\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.index)[#](#steamship.data.file.File.index \"Link to this definition\")\n\nIndex every block in the file.\n\nTODO(ted): Enable indexing the results of a tag query. TODO(ted): It’s hard to load the EmbeddingIndexPluginInstance with just a handle because of the chain of things that need to be created to it to function.\n\n_static_ list(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _page\\_size: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _page\\_token: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sort\\_order: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_) → [ListFileResponse](#steamship.data.file.ListFileResponse \"steamship.data.file.ListFileResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.list)[#](#steamship.data.file.File.list \"Link to this definition\")\n\nmime\\_type_: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\")_[#](#steamship.data.file.File.mime_type \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.parse_obj)[#](#steamship.data.file.File.parse_obj \"Link to this definition\")\n\npublic\\_data_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.file.File.public_data \"Link to this definition\")\n\n_static_ query(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _tag\\_filter\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [FileQueryResponse](#steamship.data.file.FileQueryResponse \"steamship.data.file.FileQueryResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.query)[#](#steamship.data.file.File.query \"Link to this definition\")\n\nraw()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.raw)[#](#steamship.data.file.File.raw \"Link to this definition\")\n\n_property_ raw\\_data\\_url_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.file.File.raw_data_url \"Link to this definition\")\n\nReturn a URL at which the data content of this File can be accessed. If public\\_data is True, this content can be accessed without an API key.\n\nrefresh() → [File](#steamship.data.file.File \"steamship.data.file.File\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.refresh)[#](#steamship.data.file.File.refresh \"Link to this definition\")\n\nset\\_public\\_data(_public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.set_public_data)[#](#steamship.data.file.File.set_public_data \"Link to this definition\")\n\nSet the public\\_data flag on this File. If this object already exists server-side, update the flag.\n\ntag(_plugin\\_instance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _wait\\_on\\_tasks: List\\[[Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\] \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[TagResponse](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagResponse \"steamship.data.operations.tagger.TagResponse\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.tag)[#](#steamship.data.file.File.tag \"Link to this definition\")\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_[#](#steamship.data.file.File.tags \"Link to this definition\")\n\nworkspace\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.file.File.workspace_id \"Link to this definition\")\n\n_class_ steamship.data.file.FileClearResponse(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#FileClearResponse)[#](#steamship.data.file.FileClearResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.file.FileClearResponse.id \"Link to this definition\")\n\n_class_ steamship.data.file.FileQueryRequest(_\\*_, _tagFilterQuery: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#FileQueryRequest)[#](#steamship.data.file.FileQueryRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\ntag\\_filter\\_query_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.file.FileQueryRequest.tag_filter_query \"Link to this definition\")\n\n_class_ steamship.data.file.FileQueryResponse(_\\*_, _files: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[File](#steamship.data.file.File \"steamship.data.file.File\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#FileQueryResponse)[#](#steamship.data.file.FileQueryResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\nfiles_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[File](#steamship.data.file.File \"steamship.data.file.File\")\\]_[#](#steamship.data.file.FileQueryResponse.files \"Link to this definition\")\n\n_class_ steamship.data.file.FileUploadType(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#FileUploadType)[#](#steamship.data.file.FileUploadType \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nBLOCKS _\\= 'blocks'_[#](#steamship.data.file.FileUploadType.BLOCKS \"Link to this definition\")\n\nFILE _\\= 'file'_[#](#steamship.data.file.FileUploadType.FILE \"Link to this definition\")\n\nFILE\\_IMPORTER _\\= 'fileImporter'_[#](#steamship.data.file.FileUploadType.FILE_IMPORTER \"Link to this definition\")\n\nNONE _\\= 'none'_[#](#steamship.data.file.FileUploadType.NONE \"Link to this definition\")\n\n_class_ steamship.data.file.ListFileRequest(_\\*_, _pageSize: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _pageToken: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sortOrder: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#ListFileRequest)[#](#steamship.data.file.ListFileRequest \"Link to this definition\")\n\nBases: [`ListRequest`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.ListRequest \"steamship.base.request.ListRequest\")\n\n_class_ steamship.data.file.ListFileResponse(_\\*_, _nextPageToken: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _files: List\\[[File](#steamship.data.file.File \"steamship.data.file.File\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#ListFileResponse)[#](#steamship.data.file.ListFileResponse \"Link to this definition\")\n\nBases: [`ListResponse`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.ListResponse \"steamship.base.response.ListResponse\")\n\nfiles_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[File](#steamship.data.file.File \"steamship.data.file.File\")\\]_[#](#steamship.data.file.ListFileResponse.files \"Link to this definition\")\n\n## steamship.data.invocable\\_init\\_status module[#](#steamship-data-invocable-init-status-module \"Link to this heading\")\n\n_class_ steamship.data.invocable\\_init\\_status.InvocableInitStatus(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/invocable_init_status.html#InvocableInitStatus)[#](#steamship.data.invocable_init_status.InvocableInitStatus \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nCOMPLETE _\\= 'complete'_[#](#steamship.data.invocable_init_status.InvocableInitStatus.COMPLETE \"Link to this definition\")\n\nFAILED _\\= 'failed'_[#](#steamship.data.invocable_init_status.InvocableInitStatus.FAILED \"Link to this definition\")\n\nINITIALIZING _\\= 'initializing'_[#](#steamship.data.invocable_init_status.InvocableInitStatus.INITIALIZING \"Link to this definition\")\n\nNOT\\_NEEDED _\\= 'notNeeded'_[#](#steamship.data.invocable_init_status.InvocableInitStatus.NOT_NEEDED \"Link to this definition\")\n\n## steamship.data.manifest module[#](#steamship-data-manifest-module \"Link to this heading\")\n\n_class_ steamship.data.manifest.ConfigParameter(_\\*_, _type: [ConfigParameterType](#steamship.data.manifest.ConfigParameterType \"steamship.data.manifest.ConfigParameterType\")_, _description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _default: StrictStr | StrictBool | StrictFloat | StrictInt | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#ConfigParameter)[#](#steamship.data.manifest.ConfigParameter \"Link to this definition\")\n\nBases: `BaseModel`\n\ndefault_: StrictStr | StrictBool | StrictFloat | StrictInt | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.ConfigParameter.default \"Link to this definition\")\n\ndescription_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.ConfigParameter.description \"Link to this definition\")\n\ntype_: [ConfigParameterType](#steamship.data.manifest.ConfigParameterType \"steamship.data.manifest.ConfigParameterType\")_[#](#steamship.data.manifest.ConfigParameter.type \"Link to this definition\")\n\n_class_ steamship.data.manifest.ConfigParameterType(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#ConfigParameterType)[#](#steamship.data.manifest.ConfigParameterType \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nBOOLEAN _\\= 'boolean'_[#](#steamship.data.manifest.ConfigParameterType.BOOLEAN \"Link to this definition\")\n\nNUMBER _\\= 'number'_[#](#steamship.data.manifest.ConfigParameterType.NUMBER \"Link to this definition\")\n\nSTRING _\\= 'string'_[#](#steamship.data.manifest.ConfigParameterType.STRING \"Link to this definition\")\n\n_static_ from\\_python\\_type(_t: [Type](https://docs.python.org/3.11/library/typing.html#typing.Type \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#ConfigParameterType.from_python_type)[#](#steamship.data.manifest.ConfigParameterType.from_python_type \"Link to this definition\")\n\n_class_ steamship.data.manifest.DeployableType(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#DeployableType)[#](#steamship.data.manifest.DeployableType \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nPACKAGE _\\= 'package'_[#](#steamship.data.manifest.DeployableType.PACKAGE \"Link to this definition\")\n\nPLUGIN _\\= 'plugin'_[#](#steamship.data.manifest.DeployableType.PLUGIN \"Link to this definition\")\n\n_class_ steamship.data.manifest.Manifest(_\\*_, _type: [DeployableType](#steamship.data.manifest.DeployableType \"steamship.data.manifest.DeployableType\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _version: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _author: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _entrypoint: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Unused'_, _public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_, _plugin: [PluginConfig](#steamship.data.manifest.PluginConfig \"steamship.data.manifest.PluginConfig\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _build\\_config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]\\] \\= {'ignore': \\[\\]}_, _configTemplate: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [ConfigParameter](#steamship.data.manifest.ConfigParameter \"steamship.data.manifest.ConfigParameter\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _steamshipRegistry: [SteamshipRegistry](#steamship.data.manifest.SteamshipRegistry \"steamship.data.manifest.SteamshipRegistry\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#Manifest)[#](#steamship.data.manifest.Manifest \"Link to this definition\")\n\nBases: `BaseModel`\n\nbuild\\_config_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]\\]_[#](#steamship.data.manifest.Manifest.build_config \"Link to this definition\")\n\nconfigTemplate_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [ConfigParameter](#steamship.data.manifest.ConfigParameter \"steamship.data.manifest.ConfigParameter\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.Manifest.configTemplate \"Link to this definition\")\n\nconfig\\_template\\_as\\_dict()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#Manifest.config_template_as_dict)[#](#steamship.data.manifest.Manifest.config_template_as_dict \"Link to this definition\")\n\ndescription_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.Manifest.description \"Link to this definition\")\n\nentrypoint_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.manifest.Manifest.entrypoint \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.manifest.Manifest.handle \"Link to this definition\")\n\n_static_ load\\_manifest() → [Manifest](#steamship.data.manifest.Manifest \"steamship.data.manifest.Manifest\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#Manifest.load_manifest)[#](#steamship.data.manifest.Manifest.load_manifest \"Link to this definition\")\n\nplugin_: [PluginConfig](#steamship.data.manifest.PluginConfig \"steamship.data.manifest.PluginConfig\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.Manifest.plugin \"Link to this definition\")\n\npublic_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.manifest.Manifest.public \"Link to this definition\")\n\nsave()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#Manifest.save)[#](#steamship.data.manifest.Manifest.save \"Link to this definition\")\n\nsteamshipRegistry_: [SteamshipRegistry](#steamship.data.manifest.SteamshipRegistry \"steamship.data.manifest.SteamshipRegistry\")_[#](#steamship.data.manifest.Manifest.steamshipRegistry \"Link to this definition\")\n\ntype_: [DeployableType](#steamship.data.manifest.DeployableType \"steamship.data.manifest.DeployableType\")_[#](#steamship.data.manifest.Manifest.type \"Link to this definition\")\n\nversion_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.manifest.Manifest.version \"Link to this definition\")\n\n_class_ steamship.data.manifest.PluginConfig(_\\*_, _isTrainable: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_, _transport: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'jsonOverHttp'_, _type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#PluginConfig)[#](#steamship.data.manifest.PluginConfig \"Link to this definition\")\n\nBases: `BaseModel`\n\nisTrainable_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.PluginConfig.isTrainable \"Link to this definition\")\n\ntransport_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.manifest.PluginConfig.transport \"Link to this definition\")\n\ntype_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.manifest.PluginConfig.type \"Link to this definition\")\n\n_class_ steamship.data.manifest.SteamshipRegistry(_\\*_, _tagline: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _tagline2: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _usefulFor: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _videoUrl: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _githubUrl: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _demoUrl: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _blogUrl: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _jupyterUrl: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _authorGithub: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _authorName: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _authorEmail: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _authorTwitter: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _authorUrl: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/manifest.html#SteamshipRegistry)[#](#steamship.data.manifest.SteamshipRegistry \"Link to this definition\")\n\nBases: `BaseModel`\n\nauthorEmail_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.authorEmail \"Link to this definition\")\n\nauthorGithub_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.authorGithub \"Link to this definition\")\n\nauthorName_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.authorName \"Link to this definition\")\n\nauthorTwitter_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.authorTwitter \"Link to this definition\")\n\nauthorUrl_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.authorUrl \"Link to this definition\")\n\nblogUrl_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.blogUrl \"Link to this definition\")\n\ndemoUrl_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.demoUrl \"Link to this definition\")\n\ngithubUrl_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.githubUrl \"Link to this definition\")\n\njupyterUrl_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.jupyterUrl \"Link to this definition\")\n\ntagline_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.tagline \"Link to this definition\")\n\ntagline2_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.tagline2 \"Link to this definition\")\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_[#](#steamship.data.manifest.SteamshipRegistry.tags \"Link to this definition\")\n\nusefulFor_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.usefulFor \"Link to this definition\")\n\nvideoUrl_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.manifest.SteamshipRegistry.videoUrl \"Link to this definition\")\n\n## steamship.data.search module[#](#steamship-data-search-module \"Link to this heading\")\n\n_class_ steamship.data.search.Hit(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _indexSource: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _value: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _score: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") \\= None_, _externalId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_, _query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/search.html#Hit)[#](#steamship.data.search.Hit \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nexternal\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.external_id \"Link to this definition\")\n\nexternal\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.external_type \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.id \"Link to this definition\")\n\nindex_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.index \"Link to this definition\")\n\nindex\\_source_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.index_source \"Link to this definition\")\n\nmetadata_: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.metadata \"Link to this definition\")\n\nquery_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.query \"Link to this definition\")\n\nscore_: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.score \"Link to this definition\")\n\nvalue_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.search.Hit.value \"Link to this definition\")\n\n## steamship.data.user module[#](#steamship-data-user-module \"Link to this heading\")\n\n_class_ steamship.data.user.User(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/user.html#User)[#](#steamship.data.user.User \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.user.User.client \"Link to this definition\")\n\n_static_ current(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_) → [User](#steamship.data.user.User \"steamship.data.user.User\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/user.html#User.current)[#](#steamship.data.user.User.current \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.user.User.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.user.User.id \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/user.html#User.parse_obj)[#](#steamship.data.user.User.parse_obj \"Link to this definition\")\n\n## steamship.data.workspace module[#](#steamship-data-workspace-module \"Link to this heading\")\n\n_class_ steamship.data.workspace.ListWorkspacesRequest(_\\*_, _pageSize: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _pageToken: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sortOrder: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#ListWorkspacesRequest)[#](#steamship.data.workspace.ListWorkspacesRequest \"Link to this definition\")\n\nBases: [`ListRequest`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.ListRequest \"steamship.base.request.ListRequest\")\n\n_class_ steamship.data.workspace.ListWorkspacesResponse(_\\*_, _nextPageToken: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _workspaces: List\\[[Workspace](#steamship.data.workspace.Workspace \"steamship.data.workspace.Workspace\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#ListWorkspacesResponse)[#](#steamship.data.workspace.ListWorkspacesResponse \"Link to this definition\")\n\nBases: [`ListResponse`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.ListResponse \"steamship.base.response.ListResponse\")\n\nworkspaces_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Workspace](#steamship.data.workspace.Workspace \"steamship.data.workspace.Workspace\")\\]_[#](#steamship.data.workspace.ListWorkspacesResponse.workspaces \"Link to this definition\")\n\n_class_ steamship.data.workspace.SignedUrl[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#SignedUrl)[#](#steamship.data.workspace.SignedUrl \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\n_class_ Bucket(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#SignedUrl.Bucket)[#](#steamship.data.workspace.SignedUrl.Bucket \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nAPP\\_DATA _\\= 'appData'_[#](#steamship.data.workspace.SignedUrl.Bucket.APP_DATA \"Link to this definition\")\n\nEXPORTS _\\= 'exports'_[#](#steamship.data.workspace.SignedUrl.Bucket.EXPORTS \"Link to this definition\")\n\nIMPORTS _\\= 'imports'_[#](#steamship.data.workspace.SignedUrl.Bucket.IMPORTS \"Link to this definition\")\n\nPLUGIN\\_DATA _\\= 'pluginData'_[#](#steamship.data.workspace.SignedUrl.Bucket.PLUGIN_DATA \"Link to this definition\")\n\nUSER\\_DATA _\\= 'userData'_[#](#steamship.data.workspace.SignedUrl.Bucket.USER_DATA \"Link to this definition\")\n\n_class_ Operation(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#SignedUrl.Operation)[#](#steamship.data.workspace.SignedUrl.Operation \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nREAD _\\= 'Read'_[#](#steamship.data.workspace.SignedUrl.Operation.READ \"Link to this definition\")\n\nWRITE _\\= 'Write'_[#](#steamship.data.workspace.SignedUrl.Operation.WRITE \"Link to this definition\")\n\n_class_ Request(_\\*_, _bucket: [SignedUrl.Bucket](#steamship.data.workspace.SignedUrl.Bucket \"steamship.data.workspace.SignedUrl.Bucket\")_, _filepath: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _operation: [SignedUrl.Operation](#steamship.data.workspace.SignedUrl.Operation \"steamship.data.workspace.SignedUrl.Operation\")_, _expiresInMinutes: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#SignedUrl.Request)[#](#steamship.data.workspace.SignedUrl.Request \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nbucket_: [Bucket](#steamship.data.workspace.SignedUrl.Bucket \"steamship.data.workspace.SignedUrl.Bucket\")_[#](#steamship.data.workspace.SignedUrl.Request.bucket \"Link to this definition\")\n\nexpires\\_in\\_minutes_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_[#](#steamship.data.workspace.SignedUrl.Request.expires_in_minutes \"Link to this definition\")\n\nfilepath_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.workspace.SignedUrl.Request.filepath \"Link to this definition\")\n\noperation_: [Operation](#steamship.data.workspace.SignedUrl.Operation \"steamship.data.workspace.SignedUrl.Operation\")_[#](#steamship.data.workspace.SignedUrl.Request.operation \"Link to this definition\")\n\n_class_ Response(_\\*_, _bucket: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _filepath: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _operation: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _expiresInMinutes: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _signedUrl: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#SignedUrl.Response)[#](#steamship.data.workspace.SignedUrl.Response \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\nbucket_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.workspace.SignedUrl.Response.bucket \"Link to this definition\")\n\nexpires\\_in\\_minutes_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_[#](#steamship.data.workspace.SignedUrl.Response.expires_in_minutes \"Link to this definition\")\n\nfilepath_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.workspace.SignedUrl.Response.filepath \"Link to this definition\")\n\noperation_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.workspace.SignedUrl.Response.operation \"Link to this definition\")\n\nsigned\\_url_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.workspace.SignedUrl.Response.signed_url \"Link to this definition\")\n\n_class_ steamship.data.workspace.Workspace(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace)[#](#steamship.data.workspace.Workspace \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\n_class_ CreateRequest(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _fetchIfExists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _externalId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _externalType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _metadata: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.CreateRequest)[#](#steamship.data.workspace.Workspace.CreateRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nexternal\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.workspace.Workspace.CreateRequest.external_id \"Link to this definition\")\n\nexternal\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.workspace.Workspace.CreateRequest.external_type \"Link to this definition\")\n\nfetch\\_if\\_exists_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.workspace.Workspace.CreateRequest.fetch_if_exists \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.workspace.Workspace.CreateRequest.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.workspace.Workspace.CreateRequest.id \"Link to this definition\")\n\nmetadata_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.workspace.Workspace.CreateRequest.metadata \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.workspace.Workspace.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _external\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _external\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _metadata: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [Workspace](#steamship.data.workspace.Workspace \"steamship.data.workspace.Workspace\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.create)[#](#steamship.data.workspace.Workspace.create \"Link to this definition\")\n\ncreate\\_signed\\_url(_request: [Request](#steamship.data.workspace.SignedUrl.Request \"steamship.data.workspace.SignedUrl.Request\")_) → [Response](#steamship.data.workspace.SignedUrl.Response \"steamship.data.workspace.SignedUrl.Response\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.create_signed_url)[#](#steamship.data.workspace.Workspace.create_signed_url \"Link to this definition\")\n\ndelete() → [Workspace](#steamship.data.workspace.Workspace \"steamship.data.workspace.Workspace\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.delete)[#](#steamship.data.workspace.Workspace.delete \"Link to this definition\")\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _id\\_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= None_) → [Workspace](#steamship.data.workspace.Workspace \"steamship.data.workspace.Workspace\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.get)[#](#steamship.data.workspace.Workspace.get \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.workspace.Workspace.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.workspace.Workspace.id \"Link to this definition\")\n\n_static_ list(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _t: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _page\\_size: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _page\\_token: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sort\\_order: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_) → [ListWorkspacesResponse](#steamship.data.workspace.ListWorkspacesResponse \"steamship.data.workspace.ListWorkspacesResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.list)[#](#steamship.data.workspace.Workspace.list \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.parse_obj)[#](#steamship.data.workspace.Workspace.parse_obj \"Link to this definition\")\n\n## Module contents[#](#module-contents \"Link to this heading\")\n\n_class_ steamship.data.Block(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= \\[\\]_, _index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mimeType: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _publicData: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _contentURL: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _uploadType: [BlockUploadType](#steamship.data.block.BlockUploadType \"steamship.data.block.BlockUploadType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _uploadBytes: [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block)[#](#steamship.data.Block \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nA Block is a chunk of content within a File. It can be plain text content, image content, video content, etc. If the content is not text, the text value may be the empty string for backwards compatibility.\n\n_class_ ListRequest(_\\*_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.ListRequest)[#](#steamship.data.Block.ListRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Block.ListRequest.file_id \"Link to this definition\")\n\n_class_ ListResponse(_\\*_, _blocks: List\\[[Block](#steamship.data.Block \"steamship.data.Block\")\\] \\= \\[\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.ListResponse)[#](#steamship.data.Block.ListResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\nblocks_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.data.Block.ListResponse.blocks \"Link to this definition\")\n\nas\\_llm\\_input(_exclude\\_block\\_wrapper: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_) → [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.as_llm_input)[#](#steamship.data.Block.as_llm_input \"Link to this definition\")\n\n_property_ chat\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Block.chat_id \"Link to this definition\")\n\n_property_ chat\\_role_: [RoleTag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag \"steamship.data.tags.tag_constants.RoleTag\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.chat_role \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.Block.client \"Link to this definition\")\n\ncontent\\_url_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.content_url \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Block](#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.create)[#](#steamship.data.Block.create \"Link to this definition\")\n\nCreate a new Block within a File specified by file\\_id.\n\nYou can create a Block in several ways: - Providing raw text as the text parameter; - Providing the content of the block as string or bytes; - Providing a publicly accessible URL where the content is stored.\n\ndelete() → [Block](#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.delete)[#](#steamship.data.Block.delete \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Block.file_id \"Link to this definition\")\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [Block](#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.get)[#](#steamship.data.Block.get \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Block.id \"Link to this definition\")\n\nindex(_embedding\\_plugin\\_instance: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.index)[#](#steamship.data.Block.index \"Link to this definition\")\n\nIndex this block.\n\nindex\\_in\\_file_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.index_in_file \"Link to this definition\")\n\nis\\_audio()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.is_audio)[#](#steamship.data.Block.is_audio \"Link to this definition\")\n\nReturn whether this is an audio Block.\n\nis\\_image()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.is_image)[#](#steamship.data.Block.is_image \"Link to this definition\")\n\nReturn whether this is an image Block.\n\nis\\_text() → [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.is_text)[#](#steamship.data.Block.is_text \"Link to this definition\")\n\nReturn whether this is a text Block.\n\nis\\_video()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.is_video)[#](#steamship.data.Block.is_video \"Link to this definition\")\n\nReturn whether this is a video Block.\n\n_property_ message\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Block.message_id \"Link to this definition\")\n\nmime\\_type_: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.mime_type \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.parse_obj)[#](#steamship.data.Block.parse_obj \"Link to this definition\")\n\npublic\\_data_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.Block.public_data \"Link to this definition\")\n\n_static_ query(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _tag\\_filter\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [BlockQueryResponse](#steamship.data.block.BlockQueryResponse \"steamship.data.block.BlockQueryResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.query)[#](#steamship.data.Block.query \"Link to this definition\")\n\nraw()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.raw)[#](#steamship.data.Block.raw \"Link to this definition\")\n\n_property_ raw\\_data\\_url_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.raw_data_url \"Link to this definition\")\n\nReturn a URL at which the data content of this Block can be accessed. If public\\_data is True, this content can be accessed without an API key.\n\nset\\_chat\\_id(_chat\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.set_chat_id)[#](#steamship.data.Block.set_chat_id \"Link to this definition\")\n\nset\\_chat\\_role(_role: [RoleTag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag \"steamship.data.tags.tag_constants.RoleTag\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.set_chat_role)[#](#steamship.data.Block.set_chat_role \"Link to this definition\")\n\nset\\_message\\_id(_message\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.set_message_id)[#](#steamship.data.Block.set_message_id \"Link to this definition\")\n\nset\\_public\\_data(_public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.set_public_data)[#](#steamship.data.Block.set_public_data \"Link to this definition\")\n\nSet the public\\_data flag on this Block. If this object already exists server-side, update the flag.\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.tags \"Link to this definition\")\n\ntext_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Block.text \"Link to this definition\")\n\nto\\_public\\_url() → [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/block.html#Block.to_public_url)[#](#steamship.data.Block.to_public_url \"Link to this definition\")\n\nReturn a public URL to access the Block’s data.\n\nupload\\_bytes_: [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.upload_bytes \"Link to this definition\")\n\nupload\\_type_: [BlockUploadType](#steamship.data.block.BlockUploadType \"steamship.data.block.BlockUploadType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.upload_type \"Link to this definition\")\n\nurl_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Block.url \"Link to this definition\")\n\n_class_ steamship.data.DocTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#DocTag)[#](#steamship.data.DocTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.doc; appropriate for HTML and Markdown ideas.\n\nARTICLE _\\= 'article'_[#](#steamship.data.DocTag.ARTICLE \"Link to this definition\")\n\nBLOCK\\_CODE _\\= 'block-code'_[#](#steamship.data.DocTag.BLOCK_CODE \"Link to this definition\")\n\nBLOCK\\_QUOTE _\\= 'block-quote'_[#](#steamship.data.DocTag.BLOCK_QUOTE \"Link to this definition\")\n\nCAPTION _\\= 'caption'_[#](#steamship.data.DocTag.CAPTION \"Link to this definition\")\n\nCHAPTER _\\= 'chapter'_[#](#steamship.data.DocTag.CHAPTER \"Link to this definition\")\n\nCHAT _\\= 'chat'_[#](#steamship.data.DocTag.CHAT \"Link to this definition\")\n\nDIV _\\= 'div'_[#](#steamship.data.DocTag.DIV \"Link to this definition\")\n\nDOCUMENT _\\= 'document'_[#](#steamship.data.DocTag.DOCUMENT \"Link to this definition\")\n\nEMPHASIZED _\\= 'emphasized'_[#](#steamship.data.DocTag.EMPHASIZED \"Link to this definition\")\n\nH1 _\\= 'h1'_[#](#steamship.data.DocTag.H1 \"Link to this definition\")\n\nH2 _\\= 'h2'_[#](#steamship.data.DocTag.H2 \"Link to this definition\")\n\nH3 _\\= 'h3'_[#](#steamship.data.DocTag.H3 \"Link to this definition\")\n\nH4 _\\= 'h4'_[#](#steamship.data.DocTag.H4 \"Link to this definition\")\n\nH5 _\\= 'h5'_[#](#steamship.data.DocTag.H5 \"Link to this definition\")\n\nIMAGE _\\= 'image'_[#](#steamship.data.DocTag.IMAGE \"Link to this definition\")\n\nLINE _\\= 'line'_[#](#steamship.data.DocTag.LINE \"Link to this definition\")\n\nLINK _\\= 'link'_[#](#steamship.data.DocTag.LINK \"Link to this definition\")\n\nLIST\\_ITEM _\\= 'list-item'_[#](#steamship.data.DocTag.LIST_ITEM \"Link to this definition\")\n\nMAIN _\\= 'main'_[#](#steamship.data.DocTag.MAIN \"Link to this definition\")\n\nMETADATA _\\= 'metadata'_[#](#steamship.data.DocTag.METADATA \"Link to this definition\")\n\nORDERED\\_LIST _\\= 'ordered-list'_[#](#steamship.data.DocTag.ORDERED_LIST \"Link to this definition\")\n\nPAGE _\\= 'page'_[#](#steamship.data.DocTag.PAGE \"Link to this definition\")\n\nPARAGRAPH _\\= 'paragraph'_[#](#steamship.data.DocTag.PARAGRAPH \"Link to this definition\")\n\nPRE _\\= 'pre'_[#](#steamship.data.DocTag.PRE \"Link to this definition\")\n\nREGION _\\= 'region'_[#](#steamship.data.DocTag.REGION \"Link to this definition\")\n\nSENTENCE _\\= 'sentence'_[#](#steamship.data.DocTag.SENTENCE \"Link to this definition\")\n\nSOURCE _\\= 'source'_[#](#steamship.data.DocTag.SOURCE \"Link to this definition\")\n\nSPAN _\\= 'span'_[#](#steamship.data.DocTag.SPAN \"Link to this definition\")\n\nSTRONG _\\= 'strong'_[#](#steamship.data.DocTag.STRONG \"Link to this definition\")\n\nSUBTITLE _\\= 'subtitle'_[#](#steamship.data.DocTag.SUBTITLE \"Link to this definition\")\n\nTELETYPE _\\= 'teletype'_[#](#steamship.data.DocTag.TELETYPE \"Link to this definition\")\n\nTEXT _\\= 'text'_[#](#steamship.data.DocTag.TEXT \"Link to this definition\")\n\nTITLE _\\= 'title'_[#](#steamship.data.DocTag.TITLE \"Link to this definition\")\n\nTOKEN _\\= 'token'_[#](#steamship.data.DocTag.TOKEN \"Link to this definition\")\n\nUNDERLINED _\\= 'underlined'_[#](#steamship.data.DocTag.UNDERLINED \"Link to this definition\")\n\nUNKNOWN _\\= 'unknown'_[#](#steamship.data.DocTag.UNKNOWN \"Link to this definition\")\n\nUNORDERED\\_LIST _\\= 'unordered-list'_[#](#steamship.data.DocTag.UNORDERED_LIST \"Link to this definition\")\n\n_static_ from\\_html\\_tag(_tagname: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_) → [DocTag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.DocTag \"steamship.data.tags.tag_constants.DocTag\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#DocTag.from_html_tag)[#](#steamship.data.DocTag.from_html_tag \"Link to this definition\")\n\n_class_ steamship.data.EmbeddingIndex(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _plugin: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _externalType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex)[#](#steamship.data.EmbeddingIndex \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nA persistent, read-optimized index over embeddings.\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.EmbeddingIndex.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _embedder\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _external\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _external\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_) → [EmbeddingIndex](#steamship.data.embeddings.EmbeddingIndex \"steamship.data.embeddings.EmbeddingIndex\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.create)[#](#steamship.data.EmbeddingIndex.create \"Link to this definition\")\n\ndelete() → [EmbeddingIndex](#steamship.data.embeddings.EmbeddingIndex \"steamship.data.embeddings.EmbeddingIndex\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.delete)[#](#steamship.data.EmbeddingIndex.delete \"Link to this definition\")\n\nembed() → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[IndexEmbedResponse](#steamship.data.embeddings.IndexEmbedResponse \"steamship.data.embeddings.IndexEmbedResponse\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.embed)[#](#steamship.data.EmbeddingIndex.embed \"Link to this definition\")\n\nexternal\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.EmbeddingIndex.external_id \"Link to this definition\")\n\nexternal\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.EmbeddingIndex.external_type \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.EmbeddingIndex.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.EmbeddingIndex.id \"Link to this definition\")\n\ninsert(_value: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _external\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _external\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\") | [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\") \\= None_, _reindex: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _allow\\_long\\_records\\=False_) → [IndexInsertResponse](#steamship.data.embeddings.IndexInsertResponse \"steamship.data.embeddings.IndexInsertResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.insert)[#](#steamship.data.EmbeddingIndex.insert \"Link to this definition\")\n\ninsert\\_file(_file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _block\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _external\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _external\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\") | [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\") \\= None_, _reindex: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [IndexInsertResponse](#steamship.data.embeddings.IndexInsertResponse \"steamship.data.embeddings.IndexInsertResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.insert_file)[#](#steamship.data.EmbeddingIndex.insert_file \"Link to this definition\")\n\ninsert\\_many(_items: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[EmbeddedItem](#steamship.data.embeddings.EmbeddedItem \"steamship.data.embeddings.EmbeddedItem\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _reindex: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _allow\\_long\\_records\\=False_) → [IndexInsertResponse](#steamship.data.embeddings.IndexInsertResponse \"steamship.data.embeddings.IndexInsertResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.insert_many)[#](#steamship.data.EmbeddingIndex.insert_many \"Link to this definition\")\n\nlist\\_items(_file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _block\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _span\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _page\\_size: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _page\\_token: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sort\\_order: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_) → [ListItemsResponse](#steamship.data.embeddings.ListItemsResponse \"steamship.data.embeddings.ListItemsResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.list_items)[#](#steamship.data.EmbeddingIndex.list_items \"Link to this definition\")\n\nmetadata_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.EmbeddingIndex.metadata \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.EmbeddingIndex.name \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.parse_obj)[#](#steamship.data.EmbeddingIndex.parse_obj \"Link to this definition\")\n\nplugin_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.EmbeddingIndex.plugin \"Link to this definition\")\n\nsearch(_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | List\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _k: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= 1_, _include\\_metadata: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[QueryResults](#steamship.data.embeddings.QueryResults \"steamship.data.embeddings.QueryResults\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/embeddings.html#EmbeddingIndex.search)[#](#steamship.data.EmbeddingIndex.search \"Link to this definition\")\n\n_class_ steamship.data.File(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _mimeType: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") \\= None_, _workspaceId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blocks: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\] \\= \\[\\]_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= \\[\\]_, _filename: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _publicData: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File)[#](#steamship.data.File \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nA file.\n\n_class_ CreateResponse(_data: Any \\= None_, _string: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _\\_bytes: [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") | [io.BytesIO](https://docs.python.org/3.11/library/io.html#io.BytesIO \"(in Python v3.11)\") \\= None_, _json: [io.BytesIO](https://docs.python.org/3.11/library/io.html#io.BytesIO \"(in Python v3.11)\") \\= None_, _mime\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.CreateResponse)[#](#steamship.data.File.CreateResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\ndata\\__: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_[#](#steamship.data.File.CreateResponse.data_ \"Link to this definition\")\n\nmime\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.File.CreateResponse.mime_type \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → [Response](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.CreateResponse.parse_obj)[#](#steamship.data.File.CreateResponse.parse_obj \"Link to this definition\")\n\nappend\\_block(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Block](#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.append_block)[#](#steamship.data.File.append_block \"Link to this definition\")\n\nAppend a new block to this File. This is a convenience wrapper around Block.create(). You should provide only one of text, content, or url.\n\nThis is a server-side operation, saving the new Block to the file. The new block is appended to this client-side File as well for convenience.\n\nblockify(_plugin\\_instance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _wait\\_on\\_tasks: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Task](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.tasks.Task \"steamship.base.tasks.Task\")\\] \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.tasks.Task \"steamship.base.tasks.Task\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.blockify)[#](#steamship.data.File.blockify \"Link to this definition\")\n\nblocks_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.data.File.blocks \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.File.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blocks: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\] \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.create)[#](#steamship.data.File.create \"Link to this definition\")\n\n_static_ create\\_with\\_plugin(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _plugin\\_instance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _mime\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[File](#steamship.data.File \"steamship.data.File\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.create_with_plugin)[#](#steamship.data.File.create_with_plugin \"Link to this definition\")\n\ndelete() → [File](#steamship.data.file.File \"steamship.data.file.File\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.delete)[#](#steamship.data.File.delete \"Link to this definition\")\n\nfilename_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.File.filename \"Link to this definition\")\n\n_static_ from\\_local(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _file\\_path: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.from_local)[#](#steamship.data.File.from_local \"Link to this definition\")\n\nLoads a local file into a Steamship File.\n\nNOTE: the file\\_path should be relative to where the call to from\\_local is happening.\n\nLoaded files will automatically be tagged with a provenance tag.\n\nParameters:\n\n*   **client** – Steamship client for the workspace\n    \n*   **file\\_path** – Location of the file to upload **relative** to the current directory of the client\n    \n*   **mime\\_type** – Optional specification of a particular mime type. If not provided, a guess will be made.\n    \n*   **handle** – Intended handle (for lookups, etc.) for Steamship File\n    \n*   **tags** – Metadata to add to the Steamship File\n    \n*   **public\\_data** – Whether to make the Steamship File publicly-accessible\n    \n\ngenerate(_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _start\\_block\\_index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _end\\_block\\_index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _block\\_index\\_list: List\\[[int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _append\\_output\\_to\\_file: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _options: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _wait\\_on\\_tasks: List\\[[Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\] \\= None_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[GenerateResponse](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateResponse \"steamship.data.operations.generator.GenerateResponse\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.generate)[#](#steamship.data.File.generate \"Link to this definition\")\n\nGenerate new content from this file. Assumes this file as context for input and output. May specify start and end blocks.\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [File](#steamship.data.file.File \"steamship.data.file.File\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.get)[#](#steamship.data.File.get \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.File.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.File.id \"Link to this definition\")\n\nimport\\_with\\_plugin(_plugin\\_instance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _mime\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[File](#steamship.data.File \"steamship.data.File\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.import_with_plugin)[#](#steamship.data.File.import_with_plugin \"Link to this definition\")\n\nRun an import operation on an (empty) file object that has already been created.\n\nindex(_plugin\\_instance: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_) → [EmbeddingIndex](#steamship.data.embeddings.EmbeddingIndex \"steamship.data.embeddings.EmbeddingIndex\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.index)[#](#steamship.data.File.index \"Link to this definition\")\n\nIndex every block in the file.\n\nTODO(ted): Enable indexing the results of a tag query. TODO(ted): It’s hard to load the EmbeddingIndexPluginInstance with just a handle because of the chain of things that need to be created to it to function.\n\n_static_ list(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _page\\_size: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _page\\_token: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sort\\_order: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_) → [ListFileResponse](#steamship.data.file.ListFileResponse \"steamship.data.file.ListFileResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.list)[#](#steamship.data.File.list \"Link to this definition\")\n\nmime\\_type_: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\")_[#](#steamship.data.File.mime_type \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.parse_obj)[#](#steamship.data.File.parse_obj \"Link to this definition\")\n\npublic\\_data_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.File.public_data \"Link to this definition\")\n\n_static_ query(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _tag\\_filter\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [FileQueryResponse](#steamship.data.file.FileQueryResponse \"steamship.data.file.FileQueryResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.query)[#](#steamship.data.File.query \"Link to this definition\")\n\nraw()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.raw)[#](#steamship.data.File.raw \"Link to this definition\")\n\n_property_ raw\\_data\\_url_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.File.raw_data_url \"Link to this definition\")\n\nReturn a URL at which the data content of this File can be accessed. If public\\_data is True, this content can be accessed without an API key.\n\nrefresh() → [File](#steamship.data.file.File \"steamship.data.file.File\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.refresh)[#](#steamship.data.File.refresh \"Link to this definition\")\n\nset\\_public\\_data(_public\\_data: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.set_public_data)[#](#steamship.data.File.set_public_data \"Link to this definition\")\n\nSet the public\\_data flag on this File. If this object already exists server-side, update the flag.\n\ntag(_plugin\\_instance: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _wait\\_on\\_tasks: List\\[[Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\] \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[TagResponse](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagResponse \"steamship.data.operations.tagger.TagResponse\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/file.html#File.tag)[#](#steamship.data.File.tag \"Link to this definition\")\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_[#](#steamship.data.File.tags \"Link to this definition\")\n\nworkspace\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.File.workspace_id \"Link to this definition\")\n\n_class_ steamship.data.GenerationTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#GenerationTag)[#](#steamship.data.GenerationTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.generation.\n\nGIST _\\= 'gist'_[#](#steamship.data.GenerationTag.GIST \"Link to this definition\")\n\nHEADLINE _\\= 'headline'_[#](#steamship.data.GenerationTag.HEADLINE \"Link to this definition\")\n\nPROMPT\\_COMPLETION _\\= 'prompt-completion'_[#](#steamship.data.GenerationTag.PROMPT_COMPLETION \"Link to this definition\")\n\nSUMMARY _\\= 'summary'_[#](#steamship.data.GenerationTag.SUMMARY \"Link to this definition\")\n\n_class_ steamship.data.Package(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _userId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _profile: [Manifest](#steamship.data.manifest.Manifest \"steamship.data.manifest.Manifest\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _readme: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _isPublic: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package.html#Package)[#](#steamship.data.Package \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.Package.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _profile: [Manifest](#steamship.data.manifest.Manifest \"steamship.data.manifest.Manifest\") \\= None_, _is\\_public\\=False_, _fetch\\_if\\_exists\\=False_) → [Package](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package \"steamship.data.package.package.Package\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package.html#Package.create)[#](#steamship.data.Package.create \"Link to this definition\")\n\ndelete() → [Package](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package \"steamship.data.package.package.Package\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package.html#Package.delete)[#](#steamship.data.Package.delete \"Link to this definition\")\n\nDelete this package. If this package is public and another user has created an instance of it, this method will throw an error and the package will not be deleted. Deleting the package will delete any versions and instances of it that you have created.\n\ndescription_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Package.description \"Link to this definition\")\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [Package](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package \"steamship.data.package.package.Package\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package.html#Package.get)[#](#steamship.data.Package.get \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Package.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Package.id \"Link to this definition\")\n\nis\\_public_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.Package.is_public \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package.html#Package.parse_obj)[#](#steamship.data.Package.parse_obj \"Link to this definition\")\n\nprofile_: [Manifest](#steamship.data.manifest.Manifest \"steamship.data.manifest.Manifest\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Package.profile \"Link to this definition\")\n\nreadme_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Package.readme \"Link to this definition\")\n\nupdate(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_) → [Package](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package.Package \"steamship.data.package.package.Package\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package.html#Package.update)[#](#steamship.data.Package.update \"Link to this definition\")\n\nuser\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Package.user_id \"Link to this definition\")\n\n_class_ steamship.data.PackageInstance(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _packageId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _packageHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _userHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _packageVersionId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _packageVersionHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _userId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _invocationURL: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _workspaceId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _workspaceHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _initStatus: [InvocableInitStatus](#steamship.data.invocable_init_status.InvocableInitStatus \"steamship.data.invocable_init_status.InvocableInitStatus\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance)[#](#steamship.data.PackageInstance \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nblocks\\_from\\_invoke(_path: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _verb: [Verb](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.url.Verb \"steamship.utils.url.Verb\") \\= Verb.POST_, _timeout\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _\\*\\*kwargs_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.blocks_from_invoke)[#](#steamship.data.PackageInstance.blocks_from_invoke \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.PackageInstance.client \"Link to this definition\")\n\nconfig_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\]_[#](#steamship.data.PackageInstance.config \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _package\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _package\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _package\\_version\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _package\\_version\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_) → [PackageInstance](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance \"steamship.data.package.package_instance.PackageInstance\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.create)[#](#steamship.data.PackageInstance.create \"Link to this definition\")\n\n_static_ create\\_local\\_development\\_instance(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _local\\_development\\_url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _package\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _package\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_) → [PackageInstance](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance \"steamship.data.package.package_instance.PackageInstance\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.create_local_development_instance)[#](#steamship.data.PackageInstance.create_local_development_instance \"Link to this definition\")\n\ndelete() → [PackageInstance](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance \"steamship.data.package.package_instance.PackageInstance\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.delete)[#](#steamship.data.PackageInstance.delete \"Link to this definition\")\n\nfull\\_url\\_for(_path: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.full_url_for)[#](#steamship.data.PackageInstance.full_url_for \"Link to this definition\")\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [PackageInstance](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_instance.PackageInstance \"steamship.data.package.package_instance.PackageInstance\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.get)[#](#steamship.data.PackageInstance.get \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.id \"Link to this definition\")\n\ninit\\_status_: [InvocableInitStatus](#steamship.data.invocable_init_status.InvocableInitStatus \"steamship.data.invocable_init_status.InvocableInitStatus\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.init_status \"Link to this definition\")\n\ninvocation\\_url_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.invocation_url \"Link to this definition\")\n\ninvoke(_path: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _verb: [Verb](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.url.Verb \"steamship.utils.url.Verb\") \\= Verb.POST_, _timeout\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _\\*\\*kwargs_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.invoke)[#](#steamship.data.PackageInstance.invoke \"Link to this definition\")\n\nload\\_missing\\_workspace\\_handle()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.load_missing_workspace_handle)[#](#steamship.data.PackageInstance.load_missing_workspace_handle \"Link to this definition\")\n\npackage\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.package_handle \"Link to this definition\")\n\npackage\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.package_id \"Link to this definition\")\n\npackage\\_version\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.package_version_handle \"Link to this definition\")\n\npackage\\_version\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.package_version_id \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.parse_obj)[#](#steamship.data.PackageInstance.parse_obj \"Link to this definition\")\n\nrefresh\\_init\\_status()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.refresh_init_status)[#](#steamship.data.PackageInstance.refresh_init_status \"Link to this definition\")\n\ntask\\_from\\_invoke(_path: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _verb: [Verb](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.url.Verb \"steamship.utils.url.Verb\") \\= Verb.POST_, _timeout\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _\\*\\*kwargs_) → [Task](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.tasks.Task \"steamship.base.tasks.Task\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.task_from_invoke)[#](#steamship.data.PackageInstance.task_from_invoke \"Link to this definition\")\n\nuser\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.user_handle \"Link to this definition\")\n\nuser\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.user_id \"Link to this definition\")\n\nwait\\_for\\_init(_max\\_timeout\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") \\= 180_, _retry\\_delay\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") \\= 1_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_instance.html#PackageInstance.wait_for_init)[#](#steamship.data.PackageInstance.wait_for_init \"Link to this definition\")\n\nPolls and blocks until the init has succeeded or failed (or timeout reached).\n\nParameters:\n\n*   **max\\_timeout\\_s** ([_int_](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")) – Max timeout in seconds. Default: 180s. After this timeout, an exception will be thrown.\n    \n*   **retry\\_delay\\_s** ([_float_](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\")) – Delay between status checks. Default: 1s.\n    \n\nworkspace\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.workspace_handle \"Link to this definition\")\n\nworkspace\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageInstance.workspace_id \"Link to this definition\")\n\n_class_ steamship.data.PackageVersion(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _packageId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _configTemplate: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_version.html#PackageVersion)[#](#steamship.data.PackageVersion \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.PackageVersion.client \"Link to this definition\")\n\nconfig\\_template_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\]_[#](#steamship.data.PackageVersion.config_template \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _package\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _filename: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _filebytes: [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _config\\_template: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _hosting\\_handler: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [PackageVersion](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion \"steamship.data.package.package_version.PackageVersion\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_version.html#PackageVersion.create)[#](#steamship.data.PackageVersion.create \"Link to this definition\")\n\ndelete() → [PackageVersion](https://docs.steamship.com/api-reference/steamship.data.package.html#steamship.data.package.package_version.PackageVersion \"steamship.data.package.package_version.PackageVersion\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_version.html#PackageVersion.delete)[#](#steamship.data.PackageVersion.delete \"Link to this definition\")\n\nDelete this package version. If this package is public and another user has created an instance of this version, this method will throw an error and the PackageVersion will not be deleted. Deleting the PackageVersion will delete any instances of it that you have created.\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageVersion.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageVersion.id \"Link to this definition\")\n\npackage\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PackageVersion.package_id \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/package/package_version.html#PackageVersion.parse_obj)[#](#steamship.data.PackageVersion.parse_obj \"Link to this definition\")\n\n_class_ steamship.data.Plugin(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _transport: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _isPublic: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= None_, _trainingPlatform: [HostingType](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingType \"steamship.data.plugin.hosting.HostingType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _metadata: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _profile: [Manifest](#steamship.data.manifest.Manifest \"steamship.data.manifest.Manifest\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _readme: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _userId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin.html#Plugin)[#](#steamship.data.Plugin \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.Plugin.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _type\\_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _transport: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _is\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _training\\_platform: [HostingType](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingType \"steamship.data.plugin.hosting.HostingType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _metadata: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\") | [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_) → [Plugin](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin \"steamship.data.plugin.plugin.Plugin\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin.html#Plugin.create)[#](#steamship.data.Plugin.create \"Link to this definition\")\n\ndelete() → [Plugin](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin \"steamship.data.plugin.plugin.Plugin\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin.html#Plugin.delete)[#](#steamship.data.Plugin.delete \"Link to this definition\")\n\nDelete this plugin. If this plugin is public and another user has created an instance of it, this method will throw an error and the plugin will not be deleted. Deleting the plugin will delete any versions and instances of it that you have created.\n\ndescription_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Plugin.description \"Link to this definition\")\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin.html#Plugin.get)[#](#steamship.data.Plugin.get \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Plugin.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Plugin.id \"Link to this definition\")\n\nis\\_public_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.Plugin.is_public \"Link to this definition\")\n\n_static_ list(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _t: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _page\\_size: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _page\\_token: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sort\\_order: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_) → [ListPluginsResponse](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.ListPluginsResponse \"steamship.data.plugin.plugin.ListPluginsResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin.html#Plugin.list)[#](#steamship.data.Plugin.list \"Link to this definition\")\n\nmetadata_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Plugin.metadata \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin.html#Plugin.parse_obj)[#](#steamship.data.Plugin.parse_obj \"Link to this definition\")\n\nprofile_: [Manifest](#steamship.data.manifest.Manifest \"steamship.data.manifest.Manifest\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Plugin.profile \"Link to this definition\")\n\nreadme_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Plugin.readme \"Link to this definition\")\n\ntraining\\_platform_: [HostingType](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingType \"steamship.data.plugin.hosting.HostingType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Plugin.training_platform \"Link to this definition\")\n\ntransport_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Plugin.transport \"Link to this definition\")\n\ntype_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Plugin.type \"Link to this definition\")\n\nupdate(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_) → [Plugin](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin.Plugin \"steamship.data.plugin.plugin.Plugin\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin.html#Plugin.update)[#](#steamship.data.Plugin.update \"Link to this definition\")\n\nuser\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Plugin.user_id \"Link to this definition\")\n\n_class_ steamship.data.PluginInstance(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginVersionId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _pluginVersionHandle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _workspaceId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _userId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_, _hostingType: [HostingType](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingType \"steamship.data.plugin.hosting.HostingType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _hostingCpu: [HostingCpu](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu \"steamship.data.plugin.hosting.HostingCpu\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _hostingMemory: [HostingMemory](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory \"steamship.data.plugin.hosting.HostingMemory\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _hostingTimeout: [HostingTimeout](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout \"steamship.data.plugin.hosting.HostingTimeout\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _hostingEnvironment: [HostingEnvironment](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingEnvironment \"steamship.data.plugin.hosting.HostingEnvironment\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _initStatus: [InvocableInitStatus](#steamship.data.invocable_init_status.InvocableInitStatus \"steamship.data.invocable_init_status.InvocableInitStatus\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance)[#](#steamship.data.PluginInstance \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.PluginInstance.client \"Link to this definition\")\n\nconfig_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\]_[#](#steamship.data.PluginInstance.config \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _plugin\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _plugin\\_version\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _plugin\\_version\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _config: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_) → [PluginInstance](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance \"steamship.data.plugin.plugin_instance.PluginInstance\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.create)[#](#steamship.data.PluginInstance.create \"Link to this definition\")\n\nCreate a plugin instance\n\nWhen handle is empty the engine will automatically assign one fetch\\_if\\_exists controls whether we want to re-use an existing plugin instance or not.\n\ndelete() → [PluginInstance](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance \"steamship.data.plugin.plugin_instance.PluginInstance\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.delete)[#](#steamship.data.PluginInstance.delete \"Link to this definition\")\n\ngenerate(_input\\_file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _input\\_file\\_start\\_block\\_index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _input\\_file\\_end\\_block\\_index: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _input\\_file\\_block\\_index\\_list: List\\[[int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _block\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _append\\_output\\_to\\_file: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _output\\_file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _options: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[GenerateResponse](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.generator.GenerateResponse \"steamship.data.operations.generator.GenerateResponse\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.generate)[#](#steamship.data.PluginInstance.generate \"Link to this definition\")\n\nSee GenerateRequest for description of parameter options\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [PluginInstance](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_instance.PluginInstance \"steamship.data.plugin.plugin_instance.PluginInstance\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.get)[#](#steamship.data.PluginInstance.get \"Link to this definition\")\n\nget\\_training\\_parameters(_training\\_request: [TrainingParameterPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput \"steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput\")_) → [TrainingParameterPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput \"steamship.plugin.outputs.training_parameter_plugin_output.TrainingParameterPluginOutput\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.get_training_parameters)[#](#steamship.data.PluginInstance.get_training_parameters \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.handle \"Link to this definition\")\n\nhosting\\_cpu_: [HostingCpu](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingCpu \"steamship.data.plugin.hosting.HostingCpu\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.hosting_cpu \"Link to this definition\")\n\nhosting\\_environment_: [HostingEnvironment](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingEnvironment \"steamship.data.plugin.hosting.HostingEnvironment\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.hosting_environment \"Link to this definition\")\n\nhosting\\_memory_: [HostingMemory](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory \"steamship.data.plugin.hosting.HostingMemory\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.hosting_memory \"Link to this definition\")\n\nhosting\\_timeout_: [HostingTimeout](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout \"steamship.data.plugin.hosting.HostingTimeout\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.hosting_timeout \"Link to this definition\")\n\nhosting\\_type_: [HostingType](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingType \"steamship.data.plugin.hosting.HostingType\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.hosting_type \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.id \"Link to this definition\")\n\ninit\\_status_: [InvocableInitStatus](#steamship.data.invocable_init_status.InvocableInitStatus \"steamship.data.invocable_init_status.InvocableInitStatus\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.init_status \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.parse_obj)[#](#steamship.data.PluginInstance.parse_obj \"Link to this definition\")\n\nplugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.plugin_handle \"Link to this definition\")\n\nplugin\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.plugin_id \"Link to this definition\")\n\nplugin\\_version\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.plugin_version_handle \"Link to this definition\")\n\nplugin\\_version\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.plugin_version_id \"Link to this definition\")\n\nrefresh\\_init\\_status()[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.refresh_init_status)[#](#steamship.data.PluginInstance.refresh_init_status \"Link to this definition\")\n\ntag(_doc: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [File](#steamship.data.File \"steamship.data.File\")_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[TagResponse](https://docs.steamship.com/api-reference/steamship.data.operations.html#steamship.data.operations.tagger.TagResponse \"steamship.data.operations.tagger.TagResponse\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.tag)[#](#steamship.data.PluginInstance.tag \"Link to this definition\")\n\ntrain(_training\\_request: [TrainingParameterPluginInput](https://docs.steamship.com/api-reference/steamship.plugin.inputs.html#steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput \"steamship.plugin.inputs.training_parameter_plugin_input.TrainingParameterPluginInput\") \\= None_, _training\\_epochs: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _export\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _testing\\_holdout\\_percent: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _test\\_split\\_seed: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _training\\_params: Dict | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _inference\\_params: Dict | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Task](https://docs.steamship.com/api-reference/steamship.html#steamship.Task \"steamship.Task\")\\[[TrainPluginOutput](https://docs.steamship.com/api-reference/steamship.plugin.outputs.html#steamship.plugin.outputs.train_plugin_output.TrainPluginOutput \"steamship.plugin.outputs.train_plugin_output.TrainPluginOutput\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.train)[#](#steamship.data.PluginInstance.train \"Link to this definition\")\n\nTrain a plugin instance. Please provide either training\\_request OR the other parameters; passing training\\_request ignores all other parameters, but is kept for backwards compatibility.\n\nuser\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.user_id \"Link to this definition\")\n\nwait\\_for\\_init(_max\\_timeout\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") \\= 180_, _retry\\_delay\\_s: [float](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\") \\= 1_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_instance.html#PluginInstance.wait_for_init)[#](#steamship.data.PluginInstance.wait_for_init \"Link to this definition\")\n\nPolls and blocks until the init has succeeded or failed (or timeout reached).\n\nParameters:\n\n*   **max\\_timeout\\_s** ([_int_](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")) – Max timeout in seconds. Default: 180s. After this timeout, an exception will be thrown.\n    \n*   **retry\\_delay\\_s** ([_float_](https://docs.python.org/3.11/library/functions.html#float \"(in Python v3.11)\")) – Delay between status checks. Default: 1s.\n    \n\nworkspace\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginInstance.workspace_id \"Link to this definition\")\n\n_class_ steamship.data.PluginVersion(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _pluginId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _hostingMemory: [HostingMemory](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory \"steamship.data.plugin.hosting.HostingMemory\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _hostingTimeout: [HostingTimeout](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout \"steamship.data.plugin.hosting.HostingTimeout\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _hostingHandler: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _isPublic: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= None_, _isDefault: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= None_, _configTemplate: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_version.html#PluginVersion)[#](#steamship.data.PluginVersion \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.PluginVersion.client \"Link to this definition\")\n\nconfig\\_template_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\]_[#](#steamship.data.PluginVersion.config_template \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _plugin\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _filename: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _filebytes: [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _hosting\\_memory: [HostingMemory](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory \"steamship.data.plugin.hosting.HostingMemory\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _hosting\\_timeout: [HostingTimeout](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout \"steamship.data.plugin.hosting.HostingTimeout\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _hosting\\_handler: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _is\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= None_, _is\\_default: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= None_, _config\\_template: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_) → [PluginVersion](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion \"steamship.data.plugin.plugin_version.PluginVersion\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_version.html#PluginVersion.create)[#](#steamship.data.PluginVersion.create \"Link to this definition\")\n\ndelete() → [PluginVersion](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.PluginVersion \"steamship.data.plugin.plugin_version.PluginVersion\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_version.html#PluginVersion.delete)[#](#steamship.data.PluginVersion.delete \"Link to this definition\")\n\nDelete this plugin version. If this plugin is public and another user has created an instance of this version, this method will throw an error and the PluginVersion will not be deleted. Deleting the PluginVersion will delete any instances of it that you have created.\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginVersion.handle \"Link to this definition\")\n\nhosting\\_handler_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginVersion.hosting_handler \"Link to this definition\")\n\nhosting\\_memory_: [HostingMemory](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingMemory \"steamship.data.plugin.hosting.HostingMemory\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginVersion.hosting_memory \"Link to this definition\")\n\nhosting\\_timeout_: [HostingTimeout](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.hosting.HostingTimeout \"steamship.data.plugin.hosting.HostingTimeout\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.PluginVersion.hosting_timeout \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginVersion.id \"Link to this definition\")\n\nis\\_default_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.PluginVersion.is_default \"Link to this definition\")\n\nis\\_public_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.data.PluginVersion.is_public \"Link to this definition\")\n\n_static_ list(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _plugin\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [ListPluginVersionsResponse](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.plugin_version.ListPluginVersionsResponse \"steamship.data.plugin.plugin_version.ListPluginVersionsResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_version.html#PluginVersion.list)[#](#steamship.data.PluginVersion.list \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/plugin/plugin_version.html#PluginVersion.parse_obj)[#](#steamship.data.PluginVersion.parse_obj \"Link to this definition\")\n\nplugin\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.PluginVersion.plugin_id \"Link to this definition\")\n\n_class_ steamship.data.Tag(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _kind: [TagKind](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind \"steamship.data.tags.tag_constants.TagKind\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _value: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[TagValueKey](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey \"steamship.data.tags.tag_constants.TagValueKey\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _startIdx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _endIdx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag)[#](#steamship.data.Tag \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\n_class_ DeleteRequest(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.DeleteRequest)[#](#steamship.data.Tag.DeleteRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Tag.DeleteRequest.block_id \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Tag.DeleteRequest.file_id \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Tag.DeleteRequest.id \"Link to this definition\")\n\n_class_ ListRequest(_\\*_, _fileId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _blockId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.ListRequest)[#](#steamship.data.Tag.ListRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Tag.ListRequest.block_id \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Tag.ListRequest.file_id \"Link to this definition\")\n\n_class_ ListResponse(_\\*_, _tags: List\\[[Tag](#steamship.data.Tag \"steamship.data.Tag\")\\] \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.ListResponse)[#](#steamship.data.Tag.ListResponse \"Link to this definition\")\n\nBases: [`Response`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.response.Response \"steamship.base.response.Response\")\n\ntags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_[#](#steamship.data.Tag.ListResponse.tags \"Link to this definition\")\n\nblock\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Tag.block_id \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.Tag.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _file\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _block\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _kind: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _start\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _end\\_idx: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") \\= None_, _value: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] \\= None_) → [Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.create)[#](#steamship.data.Tag.create \"Link to this definition\")\n\ndelete() → [Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.delete)[#](#steamship.data.Tag.delete \"Link to this definition\")\n\nend\\_idx_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Tag.end_idx \"Link to this definition\")\n\nfile\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Tag.file_id \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Tag.id \"Link to this definition\")\n\nindex(_plugin\\_instance: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.index)[#](#steamship.data.Tag.index \"Link to this definition\")\n\nIndex this tag.\n\nkind_: [TagKind](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagKind \"steamship.data.tags.tag_constants.TagKind\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Tag.kind \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Tag.name \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.parse_obj)[#](#steamship.data.Tag.parse_obj \"Link to this definition\")\n\n_static_ query(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _tag\\_filter\\_query: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [TagQueryResponse](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.TagQueryResponse \"steamship.data.tags.tag.TagQueryResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag.html#Tag.query)[#](#steamship.data.Tag.query \"Link to this definition\")\n\nstart\\_idx_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Tag.start_idx \"Link to this definition\")\n\ntext_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Tag.text \"Link to this definition\")\n\nvalue_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[TagValueKey](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.TagValueKey \"steamship.data.tags.tag_constants.TagValueKey\") | [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Tag.value \"Link to this definition\")\n\n_class_ steamship.data.TagKind(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TagKind)[#](#steamship.data.TagKind \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of kind constants for Tags.\n\nThese define broad categories of tags. Suggested name values for each category are found in separate enums. For example: kind=TagKind.DOCUMENT, name=DocTag.H1\n\nCHAT _\\= 'chat'_[#](#steamship.data.TagKind.CHAT \"Link to this definition\")\n\nCHAT\\_HISTORY\\_CONTEXT _\\= 'chat-history-context'_[#](#steamship.data.TagKind.CHAT_HISTORY_CONTEXT \"Link to this definition\")\n\nDEPENDENCY _\\= 'dependency'_[#](#steamship.data.TagKind.DEPENDENCY \"Link to this definition\")\n\nDOCUMENT _\\= 'document'_[#](#steamship.data.TagKind.DOCUMENT \"Link to this definition\")\n\nEMBEDDING _\\= 'embedding'_[#](#steamship.data.TagKind.EMBEDDING \"Link to this definition\")\n\nEMOTION _\\= 'emotion'_[#](#steamship.data.TagKind.EMOTION \"Link to this definition\")\n\nENTITY _\\= 'entity'_[#](#steamship.data.TagKind.ENTITY \"Link to this definition\")\n\nGENERATION _\\= 'generation'_[#](#steamship.data.TagKind.GENERATION \"Link to this definition\")\n\nINTENT _\\= 'intent'_[#](#steamship.data.TagKind.INTENT \"Link to this definition\")\n\nKIND _\\= 'summary'_[#](#steamship.data.TagKind.KIND \"Link to this definition\")\n\nMESSAGE\\_ID _\\= 'message-id'_[#](#steamship.data.TagKind.MESSAGE_ID \"Link to this definition\")\n\nPART\\_OF\\_SPEECH _\\= 'part-of-speech'_[#](#steamship.data.TagKind.PART_OF_SPEECH \"Link to this definition\")\n\nPROVENANCE _\\= 'provenance'_[#](#steamship.data.TagKind.PROVENANCE \"Link to this definition\")\n\nROLE _\\= 'role'_[#](#steamship.data.TagKind.ROLE \"Link to this definition\")\n\nSEARCH\\_RESULT _\\= 'search-result'_[#](#steamship.data.TagKind.SEARCH_RESULT \"Link to this definition\")\n\nSENTIMENT _\\= 'sentiment'_[#](#steamship.data.TagKind.SENTIMENT \"Link to this definition\")\n\nSUMMARY _\\= 'summary'_[#](#steamship.data.TagKind.SUMMARY \"Link to this definition\")\n\nTIMESTAMP _\\= 'timestamp'_[#](#steamship.data.TagKind.TIMESTAMP \"Link to this definition\")\n\nTOKEN _\\= 'token'_[#](#steamship.data.TagKind.TOKEN \"Link to this definition\")\n\nTOKENIZATION _\\= 'tokenization'_[#](#steamship.data.TagKind.TOKENIZATION \"Link to this definition\")\n\nTOPIC _\\= 'topic'_[#](#steamship.data.TagKind.TOPIC \"Link to this definition\")\n\n_class_ steamship.data.TagValueKey(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TagValueKey)[#](#steamship.data.TagValueKey \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of key constants for the value object within a tag.\n\nBOOL\\_VALUE _\\= 'bool-value'_[#](#steamship.data.TagValueKey.BOOL_VALUE \"Link to this definition\")\n\nDIRECT _\\= 'direct'_[#](#steamship.data.TagValueKey.DIRECT \"Link to this definition\")\n\nEND\\_TIME\\_S _\\= 'end-time-s'_[#](#steamship.data.TagValueKey.END_TIME_S \"Link to this definition\")\n\nENTITY\\_NAME _\\= 'entity\\_name'_[#](#steamship.data.TagValueKey.ENTITY_NAME \"Link to this definition\")\n\nNUMBER\\_VALUE _\\= 'number-value'_[#](#steamship.data.TagValueKey.NUMBER_VALUE \"Link to this definition\")\n\nSCORE _\\= 'score'_[#](#steamship.data.TagValueKey.SCORE \"Link to this definition\")\n\nSTART\\_TIME\\_S _\\= 'start-time-s'_[#](#steamship.data.TagValueKey.START_TIME_S \"Link to this definition\")\n\nSTRING\\_VALUE _\\= 'string-value'_[#](#steamship.data.TagValueKey.STRING_VALUE \"Link to this definition\")\n\nTIMESTAMP\\_VALUE _\\= 'timestamp-value'_[#](#steamship.data.TagValueKey.TIMESTAMP_VALUE \"Link to this definition\")\n\nVALUE _\\= 'value'_[#](#steamship.data.TagValueKey.VALUE \"Link to this definition\")\n\nVECTOR\\_VALUE _\\= 'vector-value'_[#](#steamship.data.TagValueKey.VECTOR_VALUE \"Link to this definition\")\n\n_class_ steamship.data.TokenTag(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/tags/tag_constants.html#TokenTag)[#](#steamship.data.TokenTag \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\nA set of name constants for Tags with a kind of TagKind.token; appropriate for parsing-level ideas.\n\nENTITY\\_IOB _\\= 'entity-iob'_[#](#steamship.data.TokenTag.ENTITY_IOB \"Link to this definition\")\n\nENTITY\\_TYPE _\\= 'entity-type'_[#](#steamship.data.TokenTag.ENTITY_TYPE \"Link to this definition\")\n\nHEAD _\\= 'head'_[#](#steamship.data.TokenTag.HEAD \"Link to this definition\")\n\nIS\\_ALPHA _\\= 'is-alpha'_[#](#steamship.data.TokenTag.IS_ALPHA \"Link to this definition\")\n\nIS\\_ASCII _\\= 'is-ascii'_[#](#steamship.data.TokenTag.IS_ASCII \"Link to this definition\")\n\nIS\\_BRACKET _\\= 'is-bracket'_[#](#steamship.data.TokenTag.IS_BRACKET \"Link to this definition\")\n\nIS\\_CURRENCY _\\= 'is-currency'_[#](#steamship.data.TokenTag.IS_CURRENCY \"Link to this definition\")\n\nIS\\_DIGIT _\\= 'is-digit'_[#](#steamship.data.TokenTag.IS_DIGIT \"Link to this definition\")\n\nIS\\_LEFT\\_PUNCT _\\= 'is-left-punct'_[#](#steamship.data.TokenTag.IS_LEFT_PUNCT \"Link to this definition\")\n\nIS\\_OUT\\_OF\\_VOCABULARY _\\= 'is-out-of-vocabulary'_[#](#steamship.data.TokenTag.IS_OUT_OF_VOCABULARY \"Link to this definition\")\n\nIS\\_PUNCT _\\= 'is-punct'_[#](#steamship.data.TokenTag.IS_PUNCT \"Link to this definition\")\n\nIS\\_QUOTE _\\= 'is-quote'_[#](#steamship.data.TokenTag.IS_QUOTE \"Link to this definition\")\n\nIS\\_RIGHT\\_PUNCT _\\= 'is-right-punct'_[#](#steamship.data.TokenTag.IS_RIGHT_PUNCT \"Link to this definition\")\n\nIS\\_SPACE _\\= 'is-space'_[#](#steamship.data.TokenTag.IS_SPACE \"Link to this definition\")\n\nIS\\_STOPWORD _\\= 'is-stopword'_[#](#steamship.data.TokenTag.IS_STOPWORD \"Link to this definition\")\n\nIS\\_TITLE _\\= 'is-title'_[#](#steamship.data.TokenTag.IS_TITLE \"Link to this definition\")\n\nLANGUAGE _\\= 'language'_[#](#steamship.data.TokenTag.LANGUAGE \"Link to this definition\")\n\nLEFT\\_EDGE _\\= 'left-edge'_[#](#steamship.data.TokenTag.LEFT_EDGE \"Link to this definition\")\n\nLEMMA _\\= 'lemma'_[#](#steamship.data.TokenTag.LEMMA \"Link to this definition\")\n\nLIKE\\_EMAIL _\\= 'like-email'_[#](#steamship.data.TokenTag.LIKE_EMAIL \"Link to this definition\")\n\nLIKE\\_NUM _\\= 'like-num'_[#](#steamship.data.TokenTag.LIKE_NUM \"Link to this definition\")\n\nLIKE\\_URL _\\= 'like-url'_[#](#steamship.data.TokenTag.LIKE_URL \"Link to this definition\")\n\nNORMALIZED _\\= 'normalized'_[#](#steamship.data.TokenTag.NORMALIZED \"Link to this definition\")\n\nPREFIX _\\= 'prefix'_[#](#steamship.data.TokenTag.PREFIX \"Link to this definition\")\n\nRIGHT\\_EDGE _\\= 'right-edge'_[#](#steamship.data.TokenTag.RIGHT_EDGE \"Link to this definition\")\n\nSHAPE _\\= 'shape'_[#](#steamship.data.TokenTag.SHAPE \"Link to this definition\")\n\nSUFFIX _\\= 'suffix'_[#](#steamship.data.TokenTag.SUFFIX \"Link to this definition\")\n\nTEXT _\\= 'text'_[#](#steamship.data.TokenTag.TEXT \"Link to this definition\")\n\nTEXT\\_WITH\\_WHITESPACE _\\= 'text-with-whitespace'_[#](#steamship.data.TokenTag.TEXT_WITH_WHITESPACE \"Link to this definition\")\n\nWHITESPACE _\\= 'whitespace'_[#](#steamship.data.TokenTag.WHITESPACE \"Link to this definition\")\n\n_class_ steamship.data.Workspace(_\\*_, _client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\") \\= None_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace)[#](#steamship.data.Workspace \"Link to this definition\")\n\nBases: [`CamelModel`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.model.CamelModel \"steamship.base.model.CamelModel\")\n\n_class_ CreateRequest(_\\*_, _id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _fetchIfExists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _externalId: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _externalType: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _metadata: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.CreateRequest)[#](#steamship.data.Workspace.CreateRequest \"Link to this definition\")\n\nBases: [`Request`](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.Request \"steamship.base.request.Request\")\n\nexternal\\_id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Workspace.CreateRequest.external_id \"Link to this definition\")\n\nexternal\\_type_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Workspace.CreateRequest.external_type \"Link to this definition\")\n\nfetch\\_if\\_exists_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Workspace.CreateRequest.fetch_if_exists \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Workspace.CreateRequest.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Workspace.CreateRequest.id \"Link to this definition\")\n\nmetadata_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.data.Workspace.CreateRequest.metadata \"Link to this definition\")\n\nclient_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.data.Workspace.client \"Link to this definition\")\n\n_static_ create(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _external\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _external\\_type: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _metadata: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [Workspace](#steamship.data.workspace.Workspace \"steamship.data.workspace.Workspace\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.create)[#](#steamship.data.Workspace.create \"Link to this definition\")\n\ncreate\\_signed\\_url(_request: [Request](#steamship.data.workspace.SignedUrl.Request \"steamship.data.workspace.SignedUrl.Request\")_) → [Response](#steamship.data.workspace.SignedUrl.Response \"steamship.data.workspace.SignedUrl.Response\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.create_signed_url)[#](#steamship.data.Workspace.create_signed_url \"Link to this definition\")\n\ndelete() → [Workspace](#steamship.data.workspace.Workspace \"steamship.data.workspace.Workspace\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.delete)[#](#steamship.data.Workspace.delete \"Link to this definition\")\n\n_static_ get(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _id\\_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _fetch\\_if\\_exists: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= None_) → [Workspace](#steamship.data.workspace.Workspace \"steamship.data.workspace.Workspace\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.get)[#](#steamship.data.Workspace.get \"Link to this definition\")\n\nhandle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Workspace.handle \"Link to this definition\")\n\nid_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.data.Workspace.id \"Link to this definition\")\n\n_static_ list(_client: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_, _t: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _page\\_size: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _page\\_token: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _sort\\_order: [SortOrder](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.request.SortOrder \"steamship.base.request.SortOrder\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= SortOrder.DESC_) → [ListWorkspacesResponse](#steamship.data.workspace.ListWorkspacesResponse \"steamship.data.workspace.ListWorkspacesResponse\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.list)[#](#steamship.data.Workspace.list \"Link to this definition\")\n\n_classmethod_ parse\\_obj(_obj: [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")_) → BaseModel[\\[source\\]](https://docs.steamship.com/_modules/steamship/data/workspace.html#Workspace.parse_obj)[#](#steamship.data.Workspace.parse_obj \"Link to this definition\")"
},
{
  "url": "https://docs.steamship.com/plugins/developing/index",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/plugins/developing/index#developingpluginssec",
    "loadedTime": "2023-08-17T22:19:48.937Z",
    "referrerUrl": "https://docs.steamship.com/plugins/developing/blockifiers",
    "depth": 2,
    "httpStatusCode": 404
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/plugins/developing/index#developingpluginssec",
    "title": "404: This page could not be found",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "404\nThis page could not be found.",
  "markdown": "## 404\n\n## This page could not be found."
},
{
  "url": "https://docs.steamship.com/api-reference/steamship.agents.schema",
  "crawl": {
    "loadedUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.schema#steamship.agents.schema.agent.Agent",
    "loadedTime": "2023-08-17T22:19:50.110Z",
    "referrerUrl": "https://docs.steamship.com/agents",
    "depth": 2,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.schema#steamship.agents.schema.agent.Agent",
    "title": "steamship.agents.schema package - Steamship Documentation",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": "en"
  },
  "screenshotUrl": null,
  "text": "steamship.agents.schema package#\nSubmodules#\nsteamship.agents.schema.action module#\nclass steamship.agents.schema.action.Action(*, tool: str, input: List[Block], output: List[Block] | None = None)[source]# \nBases: BaseModel\nActions represent a binding of a Tool to the inputs supplied to the tool.\nUpon completion, the Action also contains the output of the Tool given the inputs.\ninput: List[Block]# \nData provided directly to the Tool (full context is passed in run).\noutput: List[Block] | None# \nAny direct output produced by the Tool.\nto_chat_messages() → List[Block][source]# \ntool: str# \nName of tool used by this action.\nclass steamship.agents.schema.action.FinishAction(*, tool: str = 'Agent-FinishAction', input: List[Block] = [], output: List[Block] | None = None)[source]# \nBases: Action\nRepresents a final selected action in an Agent Execution.\ninput: List[Block]# \nData provided directly to the Tool (full context is passed in run).\nsteamship.agents.schema.agent module#\nclass steamship.agents.schema.agent.Agent(*, tools: List[Tool], message_selector: MessageSelector = NoMessages())[source]# \nBases: BaseModel, ABC\nAgent is responsible for choosing the next action to take for an AgentService.\nIt uses the provided context, and a set of Tools, to decide on an action that will be executed by the AgentService.\nmessage_selector: MessageSelector# \nSelector of messages from ChatHistory. Used for conversation memory retrieval.\nabstract next_action(context: AgentContext) → Action[source]# \ntools: List[Tool]# \nTools that can be used by the Agent in selecting the next Action.\nclass steamship.agents.schema.agent.ChatAgent(*, tools: List[Tool], message_selector: MessageSelector = NoMessages(), llm: ChatLLM, output_parser: OutputParser)[source]# \nBases: Agent, ABC\nChatAgents choose next actions for an AgentService based on chat-based interactions with an LLM.\nllm: ChatLLM# \noutput_parser: OutputParser# \nUtility responsible for converting LLM output into Actions\nclass steamship.agents.schema.agent.LLMAgent(*, tools: List[Tool], message_selector: MessageSelector = NoMessages(), llm: LLM, output_parser: OutputParser)[source]# \nBases: Agent\nLLMAgents choose next actions for an AgentService based on interactions with an LLM.\nllm: LLM# \nThe LLM to use for action selection.\nstatic messages_to_prompt_history(messages: List[Block]) → str[source]# \nabstract next_action(context: AgentContext) → Action[source]# \noutput_parser: OutputParser# \nUtility responsible for converting LLM output into Actions\nsteamship.agents.schema.cache module#\nclass steamship.agents.schema.cache.ActionCache(client: Steamship, key_value_store: KeyValueStore)[source]# \nBases: object\nProvide persistent cache layer for AgentContext that allows lookups of output blocks from Actions.\nUse this cache to eliminate calls to Tools.\nNOTE: EXPERIMENTAL.\nclear() → None[source]# \nclient: Steamship# \ndelete(key: Action) → bool[source]# \nstatic get_or_create(client: Steamship, context_keys: Dict[str, str])[source]# \nkey_value_store: KeyValueStore# \nlookup(key: Action) → List[Block] | None[source]# \nupdate(key: Action, value: List[Block])[source]# \nclass steamship.agents.schema.cache.LLMCache(client: Steamship, key_value_store: KeyValueStore)[source]# \nBases: object\nProvide persistent cache layer for AgentContext that allows lookups of Actions from LLM prompts.\nUse this cache to eliminate calls to LLMs for Tool selection and direct responses.\nNOTE: EXPERIMENTAL.\nclear() → None[source]# \nclient: Steamship# \ndelete(key: List[Block]) → bool[source]# \nstatic get_or_create(client: Steamship, context_keys: Dict[str, str])[source]# \nkey_value_store: KeyValueStore# \nlookup(key: List[Block]) → Action | None[source]# \nupdate(key: List[Block], value: Action)[source]# \nsteamship.agents.schema.chathistory module#\nclass steamship.agents.schema.chathistory.ChatHistory(file: File, embedding_index: EmbeddingIndexPluginInstance | None, text_splitter: TextSplitter = None)[source]# \nBases: object\nA ChatHistory is a wrapper of a File ideal for ongoing interactions between a user and a virtual assistant. It also includes vector-backed storage for similarity-based retrieval.\nappend_assistant_message(text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None) → Block[source]# \nAppend a new block to this with content provided by the agent, i.e., results from the assistant.\nappend_message_with_role(text: str = None, role: RoleTag = RoleTag.USER, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None) → Block[source]# \nAppend a new block to this with content provided by the end-user.\nappend_system_message(text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None) → Block[source]# \nAppend a new block to this with content provided by the system, i.e., instructions to the assistant.\nappend_user_message(text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None) → Block[source]# \nAppend a new block to this with content provided by the end-user.\nclear()[source]# \nDeletes ALL messages from the ChatHistory (including system).\nNOTE: upon deletion, refresh() is called to ensure up-to-date history refs.\nproperty client: Client# \ndelete_messages(selector: MessageSelector)[source]# \nDelete a set of selected messages from the ChatHistory.\nIf selector == None, no messages will be deleted.\nNOTES: - upon deletion, refresh() is called to ensure up-to-date history refs. - causes a full re-index of chat history if the history is searchable.\nembedding_index: EmbeddingIndexPluginInstance# \nfile: File# \nstatic get_or_create(client: Steamship, context_keys: Dict[str, str], tags: List[Tag] = None, searchable: bool = True) → ChatHistory[source]# \nproperty initial_system_prompt: Block | None# \nis_searchable() → bool[source]# \nproperty last_agent_message: Block | None# \nproperty last_system_message: Block | None# \nproperty last_user_message: Block | None# \nproperty messages: List[Block]# \nrefresh()[source]# \nsearch(text: str, k=None) → Task[SearchResults][source]# \nselect_messages(selector: MessageSelector) → List[Block][source]# \nproperty tags: List[Tag]# \ntext_splitter: TextSplitter# \nsteamship.agents.schema.context module#\nclass steamship.agents.schema.context.AgentContext[source]# \nBases: object\nAgentContext contains all relevant information about a particular execution of an Agent. It is used by the AgentService to manage execution history as well as store/retrieve information and metadata that will be used in the process of an agent execution.\naction_cache: ActionCache | None# \nCaches all interations with Tools within a Context. This provides a way to avoid duplicated calls to Tools when within the same context.\nchat_history: ChatHistory# \nRecord of user-package messages. It records user submitted queries/prompts and the final agent-driven answer sent in response to those queries/prompts. It does NOT record any chat history related to agent execution and action selection.\nclient: Steamship# \nProvides workspace-specific utilities for the agents and tools.\ncompleted_steps: List[Action]# \nRecord of agent-selected Actions and their outputs. This provides an ordered look at the execution sequence for this context.\nemit_funcs: List[Callable[[List[Block], Dict[str, Any]], None]]# \nCalled when an agent execution has completed. These provide a way for the AgentService to return the result of an agent execution to the package that requested the agent execution.\nstatic get_or_create(client: Steamship, context_keys: Dict[str, str], tags: List[Tag] = None, searchable: bool = True, use_llm_cache: bool | None = False, use_action_cache: bool | None = False)[source]# \nproperty id: str# \nllm_cache: LLMCache | None# \nCaches all interations with LLMs within a Context. This provides a way to avoid duplicated calls to LLMs when within the same context.\nmetadata: Dict[str, Any]# \nAllows storage of arbitrary information that may be useful for agents and tools.\nsteamship.agents.schema.functions module#\nclass steamship.agents.schema.functions.FunctionParameters(*, type: JSONType = JSONType.object, properties: Mapping[str, FunctionProperty], required: List[str] | None = [])[source]# \nBases: BaseModel\nSchema for the description of how to invoke an OpenAI function.\nproperties: Mapping[str, FunctionProperty]# \nMap of param names to their types and description\nrequired: List[str] | None# \nList of required parameter names.\ntype: JSONType# \nType of this object. DO NOT MODIFY.\nclass steamship.agents.schema.functions.FunctionProperty(*, type: JSONType = JSONType.object, description: str)[source]# \nBases: BaseModel\nSchema for an individual parameter used in an OpenAI function.\ndescription: str# \nDescription of the property. Should include format instructions.\ntype: JSONType# \nType of the property. Defaults to object.\nclass steamship.agents.schema.functions.JSONType(value, names=None, *, module=None, qualname=None, type=None, start=1, boundary=None)[source]# \nBases: str, Enum\narray = 'array'# \nboolean = 'boolean'# \ninteger = 'integer'# \nnull = 'null'# \nnumber = 'number'# \nobject = 'object'# \nstring = 'string'# \nclass steamship.agents.schema.functions.OpenAIFunction(*, name: str, description: str, parameters: FunctionParameters)[source]# \nBases: BaseModel\nSchema for an OpenAI function that can be used in prompting.\ndescription: str# \nPurpose of function. Should describe expected output (and format).\nname: str# \nName of the function. This will appear in LLM response.\nparameters: FunctionParameters# \nSpecifies how the function should be called.\nsteamship.agents.schema.llm module#\nclass steamship.agents.schema.llm.ChatLLM[source]# \nBases: BaseModel, ABC\nChatLLM wraps large language model-based backends that use a chat completion style interation.\nThey may be used with Agents in Action selection, or for direct prompt completion.\nabstract chat(messages: List[Block], tools: List[Tool] | None, **kwargs) → List[Block][source]# \nSends the set of chat messages to the LLM, returning the next part of the conversation\nclass steamship.agents.schema.llm.LLM[source]# \nBases: BaseModel, ABC\nLLM wraps large language model-based backends.\nThey may be used with LLMAgents in Action selection, or for direct prompt completion.\nabstract complete(prompt: str, stop: str | None = None, **kwargs) → List[Block][source]# \nCompletes the provided prompt, stopping when the stop sequeunce is found.\nsteamship.agents.schema.message_selectors module#\nclass steamship.agents.schema.message_selectors.MessageSelector[source]# \nBases: BaseModel, ABC\nabstract get_messages(messages: List[Block]) → List[Block][source]# \nclass steamship.agents.schema.message_selectors.MessageWindowMessageSelector(*, k: int)[source]# \nBases: MessageSelector\nget_messages(messages: List[Block]) → List[Block][source]# \nk: int# \nclass steamship.agents.schema.message_selectors.NoMessages[source]# \nBases: MessageSelector\nget_messages(messages: List[Block]) → List[Block][source]# \nclass steamship.agents.schema.message_selectors.TokenWindowMessageSelector(*, max_tokens: int)[source]# \nBases: MessageSelector\nget_messages(messages: List[Block]) → List[Block][source]# \nmax_tokens: int# \nsteamship.agents.schema.message_selectors.is_assistant_message(block: Block) → bool[source]# \nsteamship.agents.schema.message_selectors.is_user_message(block: Block) → bool[source]# \nsteamship.agents.schema.message_selectors.tokens(block: Block) → int[source]# \nsteamship.agents.schema.output_parser module#\nclass steamship.agents.schema.output_parser.OutputParser[source]# \nBases: BaseModel, ABC\nUsed to convert text into Actions.\nPrimarily used by LLM-based agents that generate textual descriptions of selected actions and their inputs. OutputParsers can be used to convert those descriptions into Action objects for the AgentService to run.\nExample\ninput: “Action: GenerateImage\nActionInput: row-house”\noutput: Action(“dalle”, “row-house”)\nabstract parse(text: str, context: AgentContext) → Action[source]# \nConvert text into an Action object.\nsteamship.agents.schema.text_splitters module#\nclass steamship.agents.schema.text_splitters.FixedSizeTextSplitter(chunk_size)[source]# \nBases: TextSplitter\nSimplest possible chunking strategy; every n characters.\nchunk_size: int# \nsplit_text(text: str) → List[str][source]# \nSplit the incoming text into strings\nclass steamship.agents.schema.text_splitters.TextSplitter[source]# \nBases: ABC\nchunk_text_to_tags(block: Block, kind: str, name: str = None) → List[Tag][source]# \nSplit the incoming text into strings, and then wrap those strings in Tags\nabstract split_text(text: str) → List[str][source]# \nSplit the incoming text into strings\nsteamship.agents.schema.tool module#\nclass steamship.agents.schema.tool.AgentContext[source]# \nBases: BaseModel\nPlaceholder to avoid circular dependency.\nclass steamship.agents.schema.tool.Tool(*, name: str, agent_description: str, human_description: str)[source]# \nBases: BaseModel\nTools provide functionality that may be used by AgentServices, as directed by Agents, to achieve a goal.\nTools may be used to wrap Steamship packages and plugins, as well as third-party backend services, and even locally-contained bits of Python code.\nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\nas_openai_function() → OpenAIFunction[source]# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\npost_process(async_task: Task, context: AgentContext) → List[Block][source]# \nTransforms Task output into a List[Block].\nabstract run(tool_input: List[Block], context: AgentContext) → List[Block] | Task[Any][source]# \nRun the tool given the provided input and context.\nAt the moment, only synchronous Tools (those that return List[Block]) are supported.\nSupport for asynchronous Tools (those that return Task[Any]) will be added shortly.\nModule contents#\nclass steamship.agents.schema.Action(*, tool: str, input: List[Block], output: List[Block] | None = None)[source]# \nBases: BaseModel\nActions represent a binding of a Tool to the inputs supplied to the tool.\nUpon completion, the Action also contains the output of the Tool given the inputs.\ninput: List[Block]# \nData provided directly to the Tool (full context is passed in run).\noutput: List[Block] | None# \nAny direct output produced by the Tool.\nto_chat_messages() → List[Block][source]# \ntool: str# \nName of tool used by this action.\nclass steamship.agents.schema.Agent(*, tools: List[Tool], message_selector: MessageSelector = NoMessages())[source]# \nBases: BaseModel, ABC\nAgent is responsible for choosing the next action to take for an AgentService.\nIt uses the provided context, and a set of Tools, to decide on an action that will be executed by the AgentService.\nmessage_selector: MessageSelector# \nSelector of messages from ChatHistory. Used for conversation memory retrieval.\nabstract next_action(context: AgentContext) → Action[source]# \ntools: List[Tool]# \nTools that can be used by the Agent in selecting the next Action.\nclass steamship.agents.schema.AgentContext[source]# \nBases: object\nAgentContext contains all relevant information about a particular execution of an Agent. It is used by the AgentService to manage execution history as well as store/retrieve information and metadata that will be used in the process of an agent execution.\naction_cache: ActionCache | None# \nCaches all interations with Tools within a Context. This provides a way to avoid duplicated calls to Tools when within the same context.\nchat_history: ChatHistory# \nRecord of user-package messages. It records user submitted queries/prompts and the final agent-driven answer sent in response to those queries/prompts. It does NOT record any chat history related to agent execution and action selection.\nclient: Steamship# \nProvides workspace-specific utilities for the agents and tools.\ncompleted_steps: List[Action]# \nRecord of agent-selected Actions and their outputs. This provides an ordered look at the execution sequence for this context.\nemit_funcs: List[Callable[[List[Block], Dict[str, Any]], None]]# \nCalled when an agent execution has completed. These provide a way for the AgentService to return the result of an agent execution to the package that requested the agent execution.\nstatic get_or_create(client: Steamship, context_keys: Dict[str, str], tags: List[Tag] = None, searchable: bool = True, use_llm_cache: bool | None = False, use_action_cache: bool | None = False)[source]# \nproperty id: str# \nllm_cache: LLMCache | None# \nCaches all interations with LLMs within a Context. This provides a way to avoid duplicated calls to LLMs when within the same context.\nmetadata: Dict[str, Any]# \nAllows storage of arbitrary information that may be useful for agents and tools.\nclass steamship.agents.schema.ChatAgent(*, tools: List[Tool], message_selector: MessageSelector = NoMessages(), llm: ChatLLM, output_parser: OutputParser)[source]# \nBases: Agent, ABC\nChatAgents choose next actions for an AgentService based on chat-based interactions with an LLM.\nllm: ChatLLM# \nmessage_selector: MessageSelector# \nSelector of messages from ChatHistory. Used for conversation memory retrieval.\noutput_parser: OutputParser# \nUtility responsible for converting LLM output into Actions\ntools: List[Tool]# \nTools that can be used by the Agent in selecting the next Action.\nclass steamship.agents.schema.ChatHistory(file: File, embedding_index: EmbeddingIndexPluginInstance | None, text_splitter: TextSplitter = None)[source]# \nBases: object\nA ChatHistory is a wrapper of a File ideal for ongoing interactions between a user and a virtual assistant. It also includes vector-backed storage for similarity-based retrieval.\nappend_assistant_message(text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None) → Block[source]# \nAppend a new block to this with content provided by the agent, i.e., results from the assistant.\nappend_message_with_role(text: str = None, role: RoleTag = RoleTag.USER, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None) → Block[source]# \nAppend a new block to this with content provided by the end-user.\nappend_system_message(text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None) → Block[source]# \nAppend a new block to this with content provided by the system, i.e., instructions to the assistant.\nappend_user_message(text: str = None, tags: List[Tag] = None, content: str | bytes = None, url: str | None = None, mime_type: MimeTypes | None = None) → Block[source]# \nAppend a new block to this with content provided by the end-user.\nclear()[source]# \nDeletes ALL messages from the ChatHistory (including system).\nNOTE: upon deletion, refresh() is called to ensure up-to-date history refs.\nproperty client: Client# \ndelete_messages(selector: MessageSelector)[source]# \nDelete a set of selected messages from the ChatHistory.\nIf selector == None, no messages will be deleted.\nNOTES: - upon deletion, refresh() is called to ensure up-to-date history refs. - causes a full re-index of chat history if the history is searchable.\nembedding_index: EmbeddingIndexPluginInstance# \nfile: File# \nstatic get_or_create(client: Steamship, context_keys: Dict[str, str], tags: List[Tag] = None, searchable: bool = True) → ChatHistory[source]# \nproperty initial_system_prompt: Block | None# \nis_searchable() → bool[source]# \nproperty last_agent_message: Block | None# \nproperty last_system_message: Block | None# \nproperty last_user_message: Block | None# \nproperty messages: List[Block]# \nrefresh()[source]# \nsearch(text: str, k=None) → Task[SearchResults][source]# \nselect_messages(selector: MessageSelector) → List[Block][source]# \nproperty tags: List[Tag]# \ntext_splitter: TextSplitter# \nclass steamship.agents.schema.ChatLLM[source]# \nBases: BaseModel, ABC\nChatLLM wraps large language model-based backends that use a chat completion style interation.\nThey may be used with Agents in Action selection, or for direct prompt completion.\nabstract chat(messages: List[Block], tools: List[Tool] | None, **kwargs) → List[Block][source]# \nSends the set of chat messages to the LLM, returning the next part of the conversation\nclass steamship.agents.schema.FinishAction(*, tool: str = 'Agent-FinishAction', input: List[Block] = [], output: List[Block] | None = None)[source]# \nBases: Action\nRepresents a final selected action in an Agent Execution.\ninput: List[Block]# \nData provided directly to the Tool (full context is passed in run).\noutput: List[Block] | None# \nAny direct output produced by the Tool.\ntool: str# \nName of tool used by this action.\nclass steamship.agents.schema.LLM[source]# \nBases: BaseModel, ABC\nLLM wraps large language model-based backends.\nThey may be used with LLMAgents in Action selection, or for direct prompt completion.\nabstract complete(prompt: str, stop: str | None = None, **kwargs) → List[Block][source]# \nCompletes the provided prompt, stopping when the stop sequeunce is found.\nclass steamship.agents.schema.LLMAgent(*, tools: List[Tool], message_selector: MessageSelector = NoMessages(), llm: LLM, output_parser: OutputParser)[source]# \nBases: Agent\nLLMAgents choose next actions for an AgentService based on interactions with an LLM.\nllm: LLM# \nThe LLM to use for action selection.\nmessage_selector: MessageSelector# \nSelector of messages from ChatHistory. Used for conversation memory retrieval.\nstatic messages_to_prompt_history(messages: List[Block]) → str[source]# \nabstract next_action(context: AgentContext) → Action[source]# \noutput_parser: OutputParser# \nUtility responsible for converting LLM output into Actions\ntools: List[Tool]# \nTools that can be used by the Agent in selecting the next Action.\nclass steamship.agents.schema.OutputParser[source]# \nBases: BaseModel, ABC\nUsed to convert text into Actions.\nPrimarily used by LLM-based agents that generate textual descriptions of selected actions and their inputs. OutputParsers can be used to convert those descriptions into Action objects for the AgentService to run.\nExample\ninput: “Action: GenerateImage\nActionInput: row-house”\noutput: Action(“dalle”, “row-house”)\nabstract parse(text: str, context: AgentContext) → Action[source]# \nConvert text into an Action object.\nclass steamship.agents.schema.Tool(*, name: str, agent_description: str, human_description: str)[source]# \nBases: BaseModel\nTools provide functionality that may be used by AgentServices, as directed by Agents, to achieve a goal.\nTools may be used to wrap Steamship packages and plugins, as well as third-party backend services, and even locally-contained bits of Python code.\nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\nas_openai_function() → OpenAIFunction[source]# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\npost_process(async_task: Task, context: AgentContext) → List[Block][source]# \nTransforms Task output into a List[Block].\nabstract run(tool_input: List[Block], context: AgentContext) → List[Block] | Task[Any][source]# \nRun the tool given the provided input and context.\nAt the moment, only synchronous Tools (those that return List[Block]) are supported.\nSupport for asynchronous Tools (those that return Task[Any]) will be added shortly.",
  "markdown": "## steamship.agents.schema package[#](#steamship-agents-schema-package \"Link to this heading\")\n\n## Submodules[#](#submodules \"Link to this heading\")\n\n## steamship.agents.schema.action module[#](#steamship-agents-schema-action-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.action.Action(_\\*_, _tool: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _input: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _output: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/action.html#Action)[#](#steamship.agents.schema.action.Action \"Link to this definition\")\n\nBases: `BaseModel`\n\nActions represent a binding of a Tool to the inputs supplied to the tool.\n\nUpon completion, the Action also contains the output of the Tool given the inputs.\n\ninput_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.agents.schema.action.Action.input \"Link to this definition\")\n\nData provided directly to the Tool (full context is passed in run).\n\noutput_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.action.Action.output \"Link to this definition\")\n\nAny direct output produced by the Tool.\n\nto\\_chat\\_messages() → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/action.html#Action.to_chat_messages)[#](#steamship.agents.schema.action.Action.to_chat_messages \"Link to this definition\")\n\ntool_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.action.Action.tool \"Link to this definition\")\n\nName of tool used by this action.\n\n_class_ steamship.agents.schema.action.FinishAction(_\\*_, _tool: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Agent-FinishAction'_, _input: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] \\= \\[\\]_, _output: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/action.html#FinishAction)[#](#steamship.agents.schema.action.FinishAction \"Link to this definition\")\n\nBases: [`Action`](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")\n\nRepresents a final selected action in an Agent Execution.\n\ninput_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.agents.schema.action.FinishAction.input \"Link to this definition\")\n\nData provided directly to the Tool (full context is passed in run).\n\n## steamship.agents.schema.agent module[#](#steamship-agents-schema-agent-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.agent.Agent(_\\*_, _tools: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_, _message\\_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\") \\= NoMessages()_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#Agent)[#](#steamship.agents.schema.agent.Agent \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nAgent is responsible for choosing the next action to take for an AgentService.\n\nIt uses the provided context, and a set of Tools, to decide on an action that will be executed by the AgentService.\n\nmessage\\_selector_: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")_[#](#steamship.agents.schema.agent.Agent.message_selector \"Link to this definition\")\n\nSelector of messages from ChatHistory. Used for conversation memory retrieval.\n\n_abstract_ next\\_action(_context: [AgentContext](#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#Agent.next_action)[#](#steamship.agents.schema.agent.Agent.next_action \"Link to this definition\")\n\ntools_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_[#](#steamship.agents.schema.agent.Agent.tools \"Link to this definition\")\n\nTools that can be used by the Agent in selecting the next Action.\n\n_class_ steamship.agents.schema.agent.ChatAgent(_\\*_, _tools: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_, _message\\_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\") \\= NoMessages()_, _llm: [ChatLLM](#steamship.agents.schema.llm.ChatLLM \"steamship.agents.schema.llm.ChatLLM\")_, _output\\_parser: [OutputParser](#steamship.agents.schema.output_parser.OutputParser \"steamship.agents.schema.output_parser.OutputParser\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#ChatAgent)[#](#steamship.agents.schema.agent.ChatAgent \"Link to this definition\")\n\nBases: [`Agent`](#steamship.agents.schema.agent.Agent \"steamship.agents.schema.agent.Agent\"), [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nChatAgents choose next actions for an AgentService based on chat-based interactions with an LLM.\n\nllm_: [ChatLLM](#steamship.agents.schema.llm.ChatLLM \"steamship.agents.schema.llm.ChatLLM\")_[#](#steamship.agents.schema.agent.ChatAgent.llm \"Link to this definition\")\n\noutput\\_parser_: [OutputParser](#steamship.agents.schema.output_parser.OutputParser \"steamship.agents.schema.output_parser.OutputParser\")_[#](#steamship.agents.schema.agent.ChatAgent.output_parser \"Link to this definition\")\n\nUtility responsible for converting LLM output into Actions\n\n_class_ steamship.agents.schema.agent.LLMAgent(_\\*_, _tools: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_, _message\\_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\") \\= NoMessages()_, _llm: [LLM](#steamship.agents.schema.llm.LLM \"steamship.agents.schema.llm.LLM\")_, _output\\_parser: [OutputParser](#steamship.agents.schema.output_parser.OutputParser \"steamship.agents.schema.output_parser.OutputParser\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#LLMAgent)[#](#steamship.agents.schema.agent.LLMAgent \"Link to this definition\")\n\nBases: [`Agent`](#steamship.agents.schema.agent.Agent \"steamship.agents.schema.agent.Agent\")\n\nLLMAgents choose next actions for an AgentService based on interactions with an LLM.\n\nllm_: [LLM](#steamship.agents.schema.llm.LLM \"steamship.agents.schema.llm.LLM\")_[#](#steamship.agents.schema.agent.LLMAgent.llm \"Link to this definition\")\n\nThe LLM to use for action selection.\n\n_static_ messages\\_to\\_prompt\\_history(_messages: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_) → [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#LLMAgent.messages_to_prompt_history)[#](#steamship.agents.schema.agent.LLMAgent.messages_to_prompt_history \"Link to this definition\")\n\n_abstract_ next\\_action(_context: [AgentContext](#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#LLMAgent.next_action)[#](#steamship.agents.schema.agent.LLMAgent.next_action \"Link to this definition\")\n\noutput\\_parser_: [OutputParser](#steamship.agents.schema.output_parser.OutputParser \"steamship.agents.schema.output_parser.OutputParser\")_[#](#steamship.agents.schema.agent.LLMAgent.output_parser \"Link to this definition\")\n\nUtility responsible for converting LLM output into Actions\n\n## steamship.agents.schema.cache module[#](#steamship-agents-schema-cache-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.cache.ActionCache(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_, _key\\_value\\_store: [KeyValueStore](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.kv_store.KeyValueStore \"steamship.utils.kv_store.KeyValueStore\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#ActionCache)[#](#steamship.agents.schema.cache.ActionCache \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\nProvide persistent cache layer for AgentContext that allows lookups of output blocks from Actions.\n\nUse this cache to eliminate calls to Tools.\n\nNOTE: EXPERIMENTAL.\n\nclear() → [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#ActionCache.clear)[#](#steamship.agents.schema.cache.ActionCache.clear \"Link to this definition\")\n\nclient_: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_[#](#steamship.agents.schema.cache.ActionCache.client \"Link to this definition\")\n\ndelete(_key: [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")_) → [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#ActionCache.delete)[#](#steamship.agents.schema.cache.ActionCache.delete \"Link to this definition\")\n\n_static_ get\\_or\\_create(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_, _context\\_keys: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#ActionCache.get_or_create)[#](#steamship.agents.schema.cache.ActionCache.get_or_create \"Link to this definition\")\n\nkey\\_value\\_store_: [KeyValueStore](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.kv_store.KeyValueStore \"steamship.utils.kv_store.KeyValueStore\")_[#](#steamship.agents.schema.cache.ActionCache.key_value_store \"Link to this definition\")\n\nlookup(_key: [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#ActionCache.lookup)[#](#steamship.agents.schema.cache.ActionCache.lookup \"Link to this definition\")\n\nupdate(_key: [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")_, _value: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#ActionCache.update)[#](#steamship.agents.schema.cache.ActionCache.update \"Link to this definition\")\n\n_class_ steamship.agents.schema.cache.LLMCache(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_, _key\\_value\\_store: [KeyValueStore](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.kv_store.KeyValueStore \"steamship.utils.kv_store.KeyValueStore\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#LLMCache)[#](#steamship.agents.schema.cache.LLMCache \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\nProvide persistent cache layer for AgentContext that allows lookups of Actions from LLM prompts.\n\nUse this cache to eliminate calls to LLMs for Tool selection and direct responses.\n\nNOTE: EXPERIMENTAL.\n\nclear() → [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#LLMCache.clear)[#](#steamship.agents.schema.cache.LLMCache.clear \"Link to this definition\")\n\nclient_: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_[#](#steamship.agents.schema.cache.LLMCache.client \"Link to this definition\")\n\ndelete(_key: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_) → [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#LLMCache.delete)[#](#steamship.agents.schema.cache.LLMCache.delete \"Link to this definition\")\n\n_static_ get\\_or\\_create(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_, _context\\_keys: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#LLMCache.get_or_create)[#](#steamship.agents.schema.cache.LLMCache.get_or_create \"Link to this definition\")\n\nkey\\_value\\_store_: [KeyValueStore](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.kv_store.KeyValueStore \"steamship.utils.kv_store.KeyValueStore\")_[#](#steamship.agents.schema.cache.LLMCache.key_value_store \"Link to this definition\")\n\nlookup(_key: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_) → [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#LLMCache.lookup)[#](#steamship.agents.schema.cache.LLMCache.lookup \"Link to this definition\")\n\nupdate(_key: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _value: [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/cache.html#LLMCache.update)[#](#steamship.agents.schema.cache.LLMCache.update \"Link to this definition\")\n\n## steamship.agents.schema.chathistory module[#](#steamship-agents-schema-chathistory-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.chathistory.ChatHistory(_file: [File](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.file.File \"steamship.data.file.File\")_, _embedding\\_index: [EmbeddingIndexPluginInstance](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance \"steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_, _text\\_splitter: [TextSplitter](#steamship.agents.schema.text_splitters.TextSplitter \"steamship.agents.schema.text_splitters.TextSplitter\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory)[#](#steamship.agents.schema.chathistory.ChatHistory \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\nA ChatHistory is a wrapper of a File ideal for ongoing interactions between a user and a virtual assistant. It also includes vector-backed storage for similarity-based retrieval.\n\nappend\\_assistant\\_message(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.append_assistant_message)[#](#steamship.agents.schema.chathistory.ChatHistory.append_assistant_message \"Link to this definition\")\n\nAppend a new block to this with content provided by the agent, i.e., results from the assistant.\n\nappend\\_message\\_with\\_role(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _role: [RoleTag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag \"steamship.data.tags.tag_constants.RoleTag\") \\= RoleTag.USER_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.append_message_with_role)[#](#steamship.agents.schema.chathistory.ChatHistory.append_message_with_role \"Link to this definition\")\n\nAppend a new block to this with content provided by the end-user.\n\nappend\\_system\\_message(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.append_system_message)[#](#steamship.agents.schema.chathistory.ChatHistory.append_system_message \"Link to this definition\")\n\nAppend a new block to this with content provided by the system, i.e., instructions to the assistant.\n\nappend\\_user\\_message(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.append_user_message)[#](#steamship.agents.schema.chathistory.ChatHistory.append_user_message \"Link to this definition\")\n\nAppend a new block to this with content provided by the end-user.\n\nclear()[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.clear)[#](#steamship.agents.schema.chathistory.ChatHistory.clear \"Link to this definition\")\n\nDeletes ALL messages from the ChatHistory (including system).\n\nNOTE: upon deletion, refresh() is called to ensure up-to-date history refs.\n\n_property_ client_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.agents.schema.chathistory.ChatHistory.client \"Link to this definition\")\n\ndelete\\_messages(_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.delete_messages)[#](#steamship.agents.schema.chathistory.ChatHistory.delete_messages \"Link to this definition\")\n\nDelete a set of selected messages from the ChatHistory.\n\nIf selector == None, no messages will be deleted.\n\nNOTES: - upon deletion, refresh() is called to ensure up-to-date history refs. - causes a full re-index of chat history if the history is searchable.\n\nembedding\\_index_: [EmbeddingIndexPluginInstance](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance \"steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance\")_[#](#steamship.agents.schema.chathistory.ChatHistory.embedding_index \"Link to this definition\")\n\nfile_: [File](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.file.File \"steamship.data.file.File\")_[#](#steamship.agents.schema.chathistory.ChatHistory.file \"Link to this definition\")\n\n_static_ get\\_or\\_create(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_, _context\\_keys: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _searchable: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [ChatHistory](#steamship.agents.schema.chathistory.ChatHistory \"steamship.agents.schema.chathistory.ChatHistory\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.get_or_create)[#](#steamship.agents.schema.chathistory.ChatHistory.get_or_create \"Link to this definition\")\n\n_property_ initial\\_system\\_prompt_: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.chathistory.ChatHistory.initial_system_prompt \"Link to this definition\")\n\nis\\_searchable() → [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.is_searchable)[#](#steamship.agents.schema.chathistory.ChatHistory.is_searchable \"Link to this definition\")\n\n_property_ last\\_agent\\_message_: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.chathistory.ChatHistory.last_agent_message \"Link to this definition\")\n\n_property_ last\\_system\\_message_: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.chathistory.ChatHistory.last_system_message \"Link to this definition\")\n\n_property_ last\\_user\\_message_: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.chathistory.ChatHistory.last_user_message \"Link to this definition\")\n\n_property_ messages_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.agents.schema.chathistory.ChatHistory.messages \"Link to this definition\")\n\nrefresh()[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.refresh)[#](#steamship.agents.schema.chathistory.ChatHistory.refresh \"Link to this definition\")\n\nsearch(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _k\\=None_) → Task\\[[SearchResults](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResults \"steamship.data.plugin.index_plugin_instance.SearchResults\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.search)[#](#steamship.agents.schema.chathistory.ChatHistory.search \"Link to this definition\")\n\nselect\\_messages(_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.select_messages)[#](#steamship.agents.schema.chathistory.ChatHistory.select_messages \"Link to this definition\")\n\n_property_ tags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_[#](#steamship.agents.schema.chathistory.ChatHistory.tags \"Link to this definition\")\n\ntext\\_splitter_: [TextSplitter](#steamship.agents.schema.text_splitters.TextSplitter \"steamship.agents.schema.text_splitters.TextSplitter\")_[#](#steamship.agents.schema.chathistory.ChatHistory.text_splitter \"Link to this definition\")\n\n## steamship.agents.schema.context module[#](#steamship-agents-schema-context-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.context.AgentContext[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/context.html#AgentContext)[#](#steamship.agents.schema.context.AgentContext \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\nAgentContext contains all relevant information about a particular execution of an Agent. It is used by the AgentService to manage execution history as well as store/retrieve information and metadata that will be used in the process of an agent execution.\n\naction\\_cache_: [ActionCache](#steamship.agents.schema.cache.ActionCache \"steamship.agents.schema.cache.ActionCache\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.context.AgentContext.action_cache \"Link to this definition\")\n\nCaches all interations with Tools within a Context. This provides a way to avoid duplicated calls to Tools when within the same context.\n\nchat\\_history_: [ChatHistory](#steamship.agents.schema.chathistory.ChatHistory \"steamship.agents.schema.chathistory.ChatHistory\")_[#](#steamship.agents.schema.context.AgentContext.chat_history \"Link to this definition\")\n\nRecord of user-package messages. It records user submitted queries/prompts and the final agent-driven answer sent in response to those queries/prompts. It does NOT record any chat history related to agent execution and action selection.\n\nclient_: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_[#](#steamship.agents.schema.context.AgentContext.client \"Link to this definition\")\n\nProvides workspace-specific utilities for the agents and tools.\n\ncompleted\\_steps_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")\\]_[#](#steamship.agents.schema.context.AgentContext.completed_steps \"Link to this definition\")\n\nRecord of agent-selected Actions and their outputs. This provides an ordered look at the execution sequence for this context.\n\nemit\\_funcs_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Callable](https://docs.python.org/3.11/library/typing.html#typing.Callable \"(in Python v3.11)\")\\[\\[[List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\], [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\]\\], [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")\\]\\]_[#](#steamship.agents.schema.context.AgentContext.emit_funcs \"Link to this definition\")\n\nCalled when an agent execution has completed. These provide a way for the AgentService to return the result of an agent execution to the package that requested the agent execution.\n\n_static_ get\\_or\\_create(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_, _context\\_keys: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _searchable: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _use\\_llm\\_cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_, _use\\_action\\_cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/context.html#AgentContext.get_or_create)[#](#steamship.agents.schema.context.AgentContext.get_or_create \"Link to this definition\")\n\n_property_ id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.context.AgentContext.id \"Link to this definition\")\n\nllm\\_cache_: [LLMCache](#steamship.agents.schema.cache.LLMCache \"steamship.agents.schema.cache.LLMCache\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.context.AgentContext.llm_cache \"Link to this definition\")\n\nCaches all interations with LLMs within a Context. This provides a way to avoid duplicated calls to LLMs when within the same context.\n\nmetadata_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\]_[#](#steamship.agents.schema.context.AgentContext.metadata \"Link to this definition\")\n\nAllows storage of arbitrary information that may be useful for agents and tools.\n\n## steamship.agents.schema.functions module[#](#steamship-agents-schema-functions-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.functions.FunctionParameters(_\\*_, _type: [JSONType](#steamship.agents.schema.functions.JSONType \"steamship.agents.schema.functions.JSONType\") \\= JSONType.object_, _properties: [Mapping](https://docs.python.org/3.11/library/typing.html#typing.Mapping \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [FunctionProperty](#steamship.agents.schema.functions.FunctionProperty \"steamship.agents.schema.functions.FunctionProperty\")\\]_, _required: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= \\[\\]_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/functions.html#FunctionParameters)[#](#steamship.agents.schema.functions.FunctionParameters \"Link to this definition\")\n\nBases: `BaseModel`\n\nSchema for the description of how to invoke an OpenAI function.\n\nproperties_: [Mapping](https://docs.python.org/3.11/library/typing.html#typing.Mapping \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [FunctionProperty](#steamship.agents.schema.functions.FunctionProperty \"steamship.agents.schema.functions.FunctionProperty\")\\]_[#](#steamship.agents.schema.functions.FunctionParameters.properties \"Link to this definition\")\n\nMap of param names to their types and description\n\nrequired_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.functions.FunctionParameters.required \"Link to this definition\")\n\nList of required parameter names.\n\ntype_: [JSONType](#steamship.agents.schema.functions.JSONType \"steamship.agents.schema.functions.JSONType\")_[#](#steamship.agents.schema.functions.FunctionParameters.type \"Link to this definition\")\n\nType of this object. DO NOT MODIFY.\n\n_class_ steamship.agents.schema.functions.FunctionProperty(_\\*_, _type: [JSONType](#steamship.agents.schema.functions.JSONType \"steamship.agents.schema.functions.JSONType\") \\= JSONType.object_, _description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/functions.html#FunctionProperty)[#](#steamship.agents.schema.functions.FunctionProperty \"Link to this definition\")\n\nBases: `BaseModel`\n\nSchema for an individual parameter used in an OpenAI function.\n\ndescription_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.functions.FunctionProperty.description \"Link to this definition\")\n\nDescription of the property. Should include format instructions.\n\ntype_: [JSONType](#steamship.agents.schema.functions.JSONType \"steamship.agents.schema.functions.JSONType\")_[#](#steamship.agents.schema.functions.FunctionProperty.type \"Link to this definition\")\n\nType of the property. Defaults to object.\n\n_class_ steamship.agents.schema.functions.JSONType(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/functions.html#JSONType)[#](#steamship.agents.schema.functions.JSONType \"Link to this definition\")\n\nBases: [`str`](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [`Enum`](https://docs.python.org/3.11/library/enum.html#enum.Enum \"(in Python v3.11)\")\n\narray _\\= 'array'_[#](#steamship.agents.schema.functions.JSONType.array \"Link to this definition\")\n\nboolean _\\= 'boolean'_[#](#steamship.agents.schema.functions.JSONType.boolean \"Link to this definition\")\n\ninteger _\\= 'integer'_[#](#steamship.agents.schema.functions.JSONType.integer \"Link to this definition\")\n\nnull _\\= 'null'_[#](#steamship.agents.schema.functions.JSONType.null \"Link to this definition\")\n\nnumber _\\= 'number'_[#](#steamship.agents.schema.functions.JSONType.number \"Link to this definition\")\n\nobject _\\= 'object'_[#](#steamship.agents.schema.functions.JSONType.object \"Link to this definition\")\n\nstring _\\= 'string'_[#](#steamship.agents.schema.functions.JSONType.string \"Link to this definition\")\n\n_class_ steamship.agents.schema.functions.OpenAIFunction(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _parameters: [FunctionParameters](#steamship.agents.schema.functions.FunctionParameters \"steamship.agents.schema.functions.FunctionParameters\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/functions.html#OpenAIFunction)[#](#steamship.agents.schema.functions.OpenAIFunction \"Link to this definition\")\n\nBases: `BaseModel`\n\nSchema for an OpenAI function that can be used in prompting.\n\ndescription_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.functions.OpenAIFunction.description \"Link to this definition\")\n\nPurpose of function. Should describe expected output (and format).\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.functions.OpenAIFunction.name \"Link to this definition\")\n\nName of the function. This will appear in LLM response.\n\nparameters_: [FunctionParameters](#steamship.agents.schema.functions.FunctionParameters \"steamship.agents.schema.functions.FunctionParameters\")_[#](#steamship.agents.schema.functions.OpenAIFunction.parameters \"Link to this definition\")\n\nSpecifies how the function should be called.\n\n## steamship.agents.schema.llm module[#](#steamship-agents-schema-llm-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.llm.ChatLLM[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/llm.html#ChatLLM)[#](#steamship.agents.schema.llm.ChatLLM \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nChatLLM wraps large language model-based backends that use a chat completion style interation.\n\nThey may be used with Agents in Action selection, or for direct prompt completion.\n\n_abstract_ chat(_messages: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _tools: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_, _\\*\\*kwargs_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/llm.html#ChatLLM.chat)[#](#steamship.agents.schema.llm.ChatLLM.chat \"Link to this definition\")\n\nSends the set of chat messages to the LLM, returning the next part of the conversation\n\n_class_ steamship.agents.schema.llm.LLM[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/llm.html#LLM)[#](#steamship.agents.schema.llm.LLM \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nLLM wraps large language model-based backends.\n\nThey may be used with LLMAgents in Action selection, or for direct prompt completion.\n\n_abstract_ complete(_prompt: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _stop: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _\\*\\*kwargs_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/llm.html#LLM.complete)[#](#steamship.agents.schema.llm.LLM.complete \"Link to this definition\")\n\nCompletes the provided prompt, stopping when the stop sequeunce is found.\n\n## steamship.agents.schema.message\\_selectors module[#](#steamship-agents-schema-message-selectors-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.message\\_selectors.MessageSelector[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#MessageSelector)[#](#steamship.agents.schema.message_selectors.MessageSelector \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\n_abstract_ get\\_messages(_messages: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#MessageSelector.get_messages)[#](#steamship.agents.schema.message_selectors.MessageSelector.get_messages \"Link to this definition\")\n\n_class_ steamship.agents.schema.message\\_selectors.MessageWindowMessageSelector(_\\*_, _k: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#MessageWindowMessageSelector)[#](#steamship.agents.schema.message_selectors.MessageWindowMessageSelector \"Link to this definition\")\n\nBases: [`MessageSelector`](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")\n\nget\\_messages(_messages: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#MessageWindowMessageSelector.get_messages)[#](#steamship.agents.schema.message_selectors.MessageWindowMessageSelector.get_messages \"Link to this definition\")\n\nk_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_[#](#steamship.agents.schema.message_selectors.MessageWindowMessageSelector.k \"Link to this definition\")\n\n_class_ steamship.agents.schema.message\\_selectors.NoMessages[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#NoMessages)[#](#steamship.agents.schema.message_selectors.NoMessages \"Link to this definition\")\n\nBases: [`MessageSelector`](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")\n\nget\\_messages(_messages: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#NoMessages.get_messages)[#](#steamship.agents.schema.message_selectors.NoMessages.get_messages \"Link to this definition\")\n\n_class_ steamship.agents.schema.message\\_selectors.TokenWindowMessageSelector(_\\*_, _max\\_tokens: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#TokenWindowMessageSelector)[#](#steamship.agents.schema.message_selectors.TokenWindowMessageSelector \"Link to this definition\")\n\nBases: [`MessageSelector`](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")\n\nget\\_messages(_messages: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#TokenWindowMessageSelector.get_messages)[#](#steamship.agents.schema.message_selectors.TokenWindowMessageSelector.get_messages \"Link to this definition\")\n\nmax\\_tokens_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_[#](#steamship.agents.schema.message_selectors.TokenWindowMessageSelector.max_tokens \"Link to this definition\")\n\nsteamship.agents.schema.message\\_selectors.is\\_assistant\\_message(_block: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")_) → [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#is_assistant_message)[#](#steamship.agents.schema.message_selectors.is_assistant_message \"Link to this definition\")\n\nsteamship.agents.schema.message\\_selectors.is\\_user\\_message(_block: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")_) → [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#is_user_message)[#](#steamship.agents.schema.message_selectors.is_user_message \"Link to this definition\")\n\nsteamship.agents.schema.message\\_selectors.tokens(_block: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")_) → [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/message_selectors.html#tokens)[#](#steamship.agents.schema.message_selectors.tokens \"Link to this definition\")\n\n## steamship.agents.schema.output\\_parser module[#](#steamship-agents-schema-output-parser-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.output\\_parser.OutputParser[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/output_parser.html#OutputParser)[#](#steamship.agents.schema.output_parser.OutputParser \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nUsed to convert text into Actions.\n\nPrimarily used by LLM-based agents that generate textual descriptions of selected actions and their inputs. OutputParsers can be used to convert those descriptions into Action objects for the AgentService to run.\n\nExample\n\n*   input: “Action: GenerateImage\n    \n    ActionInput: row-house”\n    \n*   output: Action(“dalle”, “row-house”)\n    \n\n_abstract_ parse(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _context: [AgentContext](#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/output_parser.html#OutputParser.parse)[#](#steamship.agents.schema.output_parser.OutputParser.parse \"Link to this definition\")\n\nConvert text into an Action object.\n\n## steamship.agents.schema.text\\_splitters module[#](#steamship-agents-schema-text-splitters-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.text\\_splitters.FixedSizeTextSplitter(_chunk\\_size_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/text_splitters.html#FixedSizeTextSplitter)[#](#steamship.agents.schema.text_splitters.FixedSizeTextSplitter \"Link to this definition\")\n\nBases: [`TextSplitter`](#steamship.agents.schema.text_splitters.TextSplitter \"steamship.agents.schema.text_splitters.TextSplitter\")\n\nSimplest possible chunking strategy; every n characters.\n\nchunk\\_size_: [int](https://docs.python.org/3.11/library/functions.html#int \"(in Python v3.11)\")_[#](#steamship.agents.schema.text_splitters.FixedSizeTextSplitter.chunk_size \"Link to this definition\")\n\nsplit\\_text(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/text_splitters.html#FixedSizeTextSplitter.split_text)[#](#steamship.agents.schema.text_splitters.FixedSizeTextSplitter.split_text \"Link to this definition\")\n\nSplit the incoming text into strings\n\n_class_ steamship.agents.schema.text\\_splitters.TextSplitter[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/text_splitters.html#TextSplitter)[#](#steamship.agents.schema.text_splitters.TextSplitter \"Link to this definition\")\n\nBases: [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nchunk\\_text\\_to\\_tags(_block: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")_, _kind: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/text_splitters.html#TextSplitter.chunk_text_to_tags)[#](#steamship.agents.schema.text_splitters.TextSplitter.chunk_text_to_tags \"Link to this definition\")\n\nSplit the incoming text into strings, and then wrap those strings in Tags\n\n_abstract_ split\\_text(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/text_splitters.html#TextSplitter.split_text)[#](#steamship.agents.schema.text_splitters.TextSplitter.split_text \"Link to this definition\")\n\nSplit the incoming text into strings\n\n## steamship.agents.schema.tool module[#](#steamship-agents-schema-tool-module \"Link to this heading\")\n\n_class_ steamship.agents.schema.tool.AgentContext[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#AgentContext)[#](#steamship.agents.schema.tool.AgentContext \"Link to this definition\")\n\nBases: `BaseModel`\n\nPlaceholder to avoid circular dependency.\n\n_class_ steamship.agents.schema.tool.Tool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#Tool)[#](#steamship.agents.schema.tool.Tool \"Link to this definition\")\n\nBases: `BaseModel`\n\nTools provide functionality that may be used by AgentServices, as directed by Agents, to achieve a goal.\n\nTools may be used to wrap Steamship packages and plugins, as well as third-party backend services, and even locally-contained bits of Python code.\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.tool.Tool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\nas\\_openai\\_function() → [OpenAIFunction](#steamship.agents.schema.functions.OpenAIFunction \"steamship.agents.schema.functions.OpenAIFunction\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#Tool.as_openai_function)[#](#steamship.agents.schema.tool.Tool.as_openai_function \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.tool.Tool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.tool.Tool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\npost\\_process(_async\\_task: [Task](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.tasks.Task \"steamship.base.tasks.Task\")_, _context: [AgentContext](#steamship.agents.schema.tool.AgentContext \"steamship.agents.schema.tool.AgentContext\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#Tool.post_process)[#](#steamship.agents.schema.tool.Tool.post_process \"Link to this definition\")\n\nTransforms Task output into a List\\[Block\\].\n\n_abstract_ run(_tool\\_input: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _context: [AgentContext](#steamship.agents.schema.tool.AgentContext \"steamship.agents.schema.tool.AgentContext\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | Task\\[Any\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#Tool.run)[#](#steamship.agents.schema.tool.Tool.run \"Link to this definition\")\n\nRun the tool given the provided input and context.\n\nAt the moment, only synchronous Tools (those that return List\\[Block\\]) are supported.\n\nSupport for asynchronous Tools (those that return Task\\[Any\\]) will be added shortly.\n\n## Module contents[#](#module-contents \"Link to this heading\")\n\n_class_ steamship.agents.schema.Action(_\\*_, _tool: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _input: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _output: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/action.html#Action)[#](#steamship.agents.schema.Action \"Link to this definition\")\n\nBases: `BaseModel`\n\nActions represent a binding of a Tool to the inputs supplied to the tool.\n\nUpon completion, the Action also contains the output of the Tool given the inputs.\n\ninput_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.agents.schema.Action.input \"Link to this definition\")\n\nData provided directly to the Tool (full context is passed in run).\n\noutput_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.Action.output \"Link to this definition\")\n\nAny direct output produced by the Tool.\n\nto\\_chat\\_messages() → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/action.html#Action.to_chat_messages)[#](#steamship.agents.schema.Action.to_chat_messages \"Link to this definition\")\n\ntool_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.Action.tool \"Link to this definition\")\n\nName of tool used by this action.\n\n_class_ steamship.agents.schema.Agent(_\\*_, _tools: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_, _message\\_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\") \\= NoMessages()_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#Agent)[#](#steamship.agents.schema.Agent \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nAgent is responsible for choosing the next action to take for an AgentService.\n\nIt uses the provided context, and a set of Tools, to decide on an action that will be executed by the AgentService.\n\nmessage\\_selector_: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")_[#](#steamship.agents.schema.Agent.message_selector \"Link to this definition\")\n\nSelector of messages from ChatHistory. Used for conversation memory retrieval.\n\n_abstract_ next\\_action(_context: [AgentContext](#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#Agent.next_action)[#](#steamship.agents.schema.Agent.next_action \"Link to this definition\")\n\ntools_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_[#](#steamship.agents.schema.Agent.tools \"Link to this definition\")\n\nTools that can be used by the Agent in selecting the next Action.\n\n_class_ steamship.agents.schema.AgentContext[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/context.html#AgentContext)[#](#steamship.agents.schema.AgentContext \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\nAgentContext contains all relevant information about a particular execution of an Agent. It is used by the AgentService to manage execution history as well as store/retrieve information and metadata that will be used in the process of an agent execution.\n\naction\\_cache_: [ActionCache](#steamship.agents.schema.cache.ActionCache \"steamship.agents.schema.cache.ActionCache\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.AgentContext.action_cache \"Link to this definition\")\n\nCaches all interations with Tools within a Context. This provides a way to avoid duplicated calls to Tools when within the same context.\n\nchat\\_history_: [ChatHistory](#steamship.agents.schema.ChatHistory \"steamship.agents.schema.ChatHistory\")_[#](#steamship.agents.schema.AgentContext.chat_history \"Link to this definition\")\n\nRecord of user-package messages. It records user submitted queries/prompts and the final agent-driven answer sent in response to those queries/prompts. It does NOT record any chat history related to agent execution and action selection.\n\nclient_: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_[#](#steamship.agents.schema.AgentContext.client \"Link to this definition\")\n\nProvides workspace-specific utilities for the agents and tools.\n\ncompleted\\_steps_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")\\]_[#](#steamship.agents.schema.AgentContext.completed_steps \"Link to this definition\")\n\nRecord of agent-selected Actions and their outputs. This provides an ordered look at the execution sequence for this context.\n\nemit\\_funcs_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Callable](https://docs.python.org/3.11/library/typing.html#typing.Callable \"(in Python v3.11)\")\\[\\[[List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\], [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\]\\], [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")\\]\\]_[#](#steamship.agents.schema.AgentContext.emit_funcs \"Link to this definition\")\n\nCalled when an agent execution has completed. These provide a way for the AgentService to return the result of an agent execution to the package that requested the agent execution.\n\n_static_ get\\_or\\_create(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_, _context\\_keys: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _searchable: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_, _use\\_llm\\_cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_, _use\\_action\\_cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/context.html#AgentContext.get_or_create)[#](#steamship.agents.schema.AgentContext.get_or_create \"Link to this definition\")\n\n_property_ id_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.AgentContext.id \"Link to this definition\")\n\nllm\\_cache_: [LLMCache](#steamship.agents.schema.cache.LLMCache \"steamship.agents.schema.cache.LLMCache\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.AgentContext.llm_cache \"Link to this definition\")\n\nCaches all interations with LLMs within a Context. This provides a way to avoid duplicated calls to LLMs when within the same context.\n\nmetadata_: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [Any](https://docs.python.org/3.11/library/typing.html#typing.Any \"(in Python v3.11)\")\\]_[#](#steamship.agents.schema.AgentContext.metadata \"Link to this definition\")\n\nAllows storage of arbitrary information that may be useful for agents and tools.\n\n_class_ steamship.agents.schema.ChatAgent(_\\*_, _tools: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_, _message\\_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\") \\= NoMessages()_, _llm: [ChatLLM](#steamship.agents.schema.llm.ChatLLM \"steamship.agents.schema.llm.ChatLLM\")_, _output\\_parser: [OutputParser](#steamship.agents.schema.output_parser.OutputParser \"steamship.agents.schema.output_parser.OutputParser\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#ChatAgent)[#](#steamship.agents.schema.ChatAgent \"Link to this definition\")\n\nBases: [`Agent`](#steamship.agents.schema.agent.Agent \"steamship.agents.schema.agent.Agent\"), [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nChatAgents choose next actions for an AgentService based on chat-based interactions with an LLM.\n\nllm_: [ChatLLM](#steamship.agents.schema.llm.ChatLLM \"steamship.agents.schema.llm.ChatLLM\")_[#](#steamship.agents.schema.ChatAgent.llm \"Link to this definition\")\n\nmessage\\_selector_: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")_[#](#steamship.agents.schema.ChatAgent.message_selector \"Link to this definition\")\n\nSelector of messages from ChatHistory. Used for conversation memory retrieval.\n\noutput\\_parser_: [OutputParser](#steamship.agents.schema.output_parser.OutputParser \"steamship.agents.schema.output_parser.OutputParser\")_[#](#steamship.agents.schema.ChatAgent.output_parser \"Link to this definition\")\n\nUtility responsible for converting LLM output into Actions\n\ntools_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_[#](#steamship.agents.schema.ChatAgent.tools \"Link to this definition\")\n\nTools that can be used by the Agent in selecting the next Action.\n\n_class_ steamship.agents.schema.ChatHistory(_file: [File](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.file.File \"steamship.data.file.File\")_, _embedding\\_index: [EmbeddingIndexPluginInstance](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance \"steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_, _text\\_splitter: [TextSplitter](#steamship.agents.schema.text_splitters.TextSplitter \"steamship.agents.schema.text_splitters.TextSplitter\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory)[#](#steamship.agents.schema.ChatHistory \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\nA ChatHistory is a wrapper of a File ideal for ongoing interactions between a user and a virtual assistant. It also includes vector-backed storage for similarity-based retrieval.\n\nappend\\_assistant\\_message(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.append_assistant_message)[#](#steamship.agents.schema.ChatHistory.append_assistant_message \"Link to this definition\")\n\nAppend a new block to this with content provided by the agent, i.e., results from the assistant.\n\nappend\\_message\\_with\\_role(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _role: [RoleTag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag_constants.RoleTag \"steamship.data.tags.tag_constants.RoleTag\") \\= RoleTag.USER_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.append_message_with_role)[#](#steamship.agents.schema.ChatHistory.append_message_with_role \"Link to this definition\")\n\nAppend a new block to this with content provided by the end-user.\n\nappend\\_system\\_message(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.append_system_message)[#](#steamship.agents.schema.ChatHistory.append_system_message \"Link to this definition\")\n\nAppend a new block to this with content provided by the system, i.e., instructions to the assistant.\n\nappend\\_user\\_message(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= None_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _content: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [bytes](https://docs.python.org/3.11/library/stdtypes.html#bytes \"(in Python v3.11)\") \\= None_, _url: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _mime\\_type: [MimeTypes](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.mime_types.MimeTypes \"steamship.base.mime_types.MimeTypes\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_) → [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.append_user_message)[#](#steamship.agents.schema.ChatHistory.append_user_message \"Link to this definition\")\n\nAppend a new block to this with content provided by the end-user.\n\nclear()[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.clear)[#](#steamship.agents.schema.ChatHistory.clear \"Link to this definition\")\n\nDeletes ALL messages from the ChatHistory (including system).\n\nNOTE: upon deletion, refresh() is called to ensure up-to-date history refs.\n\n_property_ client_: [Client](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.client.Client \"steamship.base.client.Client\")_[#](#steamship.agents.schema.ChatHistory.client \"Link to this definition\")\n\ndelete\\_messages(_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.delete_messages)[#](#steamship.agents.schema.ChatHistory.delete_messages \"Link to this definition\")\n\nDelete a set of selected messages from the ChatHistory.\n\nIf selector == None, no messages will be deleted.\n\nNOTES: - upon deletion, refresh() is called to ensure up-to-date history refs. - causes a full re-index of chat history if the history is searchable.\n\nembedding\\_index_: [EmbeddingIndexPluginInstance](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance \"steamship.data.plugin.index_plugin_instance.EmbeddingIndexPluginInstance\")_[#](#steamship.agents.schema.ChatHistory.embedding_index \"Link to this definition\")\n\nfile_: [File](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.file.File \"steamship.data.file.File\")_[#](#steamship.agents.schema.ChatHistory.file \"Link to this definition\")\n\n_static_ get\\_or\\_create(_client: [Steamship](https://docs.steamship.com/api-reference/steamship.client.html#steamship.client.steamship.Steamship \"steamship.client.steamship.Steamship\")_, _context\\_keys: [Dict](https://docs.python.org/3.11/library/typing.html#typing.Dict \"(in Python v3.11)\")\\[[str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\"), [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")\\]_, _tags: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\] \\= None_, _searchable: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [ChatHistory](#steamship.agents.schema.chathistory.ChatHistory \"steamship.agents.schema.chathistory.ChatHistory\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.get_or_create)[#](#steamship.agents.schema.ChatHistory.get_or_create \"Link to this definition\")\n\n_property_ initial\\_system\\_prompt_: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.ChatHistory.initial_system_prompt \"Link to this definition\")\n\nis\\_searchable() → [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.is_searchable)[#](#steamship.agents.schema.ChatHistory.is_searchable \"Link to this definition\")\n\n_property_ last\\_agent\\_message_: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.ChatHistory.last_agent_message \"Link to this definition\")\n\n_property_ last\\_system\\_message_: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.ChatHistory.last_system_message \"Link to this definition\")\n\n_property_ last\\_user\\_message_: [Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.ChatHistory.last_user_message \"Link to this definition\")\n\n_property_ messages_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.agents.schema.ChatHistory.messages \"Link to this definition\")\n\nrefresh()[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.refresh)[#](#steamship.agents.schema.ChatHistory.refresh \"Link to this definition\")\n\nsearch(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _k\\=None_) → Task\\[[SearchResults](https://docs.steamship.com/api-reference/steamship.data.plugin.html#steamship.data.plugin.index_plugin_instance.SearchResults \"steamship.data.plugin.index_plugin_instance.SearchResults\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.search)[#](#steamship.agents.schema.ChatHistory.search \"Link to this definition\")\n\nselect\\_messages(_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/chathistory.html#ChatHistory.select_messages)[#](#steamship.agents.schema.ChatHistory.select_messages \"Link to this definition\")\n\n_property_ tags_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tag](https://docs.steamship.com/api-reference/steamship.data.tags.html#steamship.data.tags.tag.Tag \"steamship.data.tags.tag.Tag\")\\]_[#](#steamship.agents.schema.ChatHistory.tags \"Link to this definition\")\n\ntext\\_splitter_: [TextSplitter](#steamship.agents.schema.text_splitters.TextSplitter \"steamship.agents.schema.text_splitters.TextSplitter\")_[#](#steamship.agents.schema.ChatHistory.text_splitter \"Link to this definition\")\n\n_class_ steamship.agents.schema.ChatLLM[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/llm.html#ChatLLM)[#](#steamship.agents.schema.ChatLLM \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nChatLLM wraps large language model-based backends that use a chat completion style interation.\n\nThey may be used with Agents in Action selection, or for direct prompt completion.\n\n_abstract_ chat(_messages: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _tools: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_, _\\*\\*kwargs_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/llm.html#ChatLLM.chat)[#](#steamship.agents.schema.ChatLLM.chat \"Link to this definition\")\n\nSends the set of chat messages to the LLM, returning the next part of the conversation\n\n_class_ steamship.agents.schema.FinishAction(_\\*_, _tool: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Agent-FinishAction'_, _input: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] \\= \\[\\]_, _output: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/action.html#FinishAction)[#](#steamship.agents.schema.FinishAction \"Link to this definition\")\n\nBases: [`Action`](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")\n\nRepresents a final selected action in an Agent Execution.\n\ninput_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_[#](#steamship.agents.schema.FinishAction.input \"Link to this definition\")\n\nData provided directly to the Tool (full context is passed in run).\n\noutput_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.schema.FinishAction.output \"Link to this definition\")\n\nAny direct output produced by the Tool.\n\ntool_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.FinishAction.tool \"Link to this definition\")\n\nName of tool used by this action.\n\n_class_ steamship.agents.schema.LLM[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/llm.html#LLM)[#](#steamship.agents.schema.LLM \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nLLM wraps large language model-based backends.\n\nThey may be used with LLMAgents in Action selection, or for direct prompt completion.\n\n_abstract_ complete(_prompt: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _stop: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _\\*\\*kwargs_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/llm.html#LLM.complete)[#](#steamship.agents.schema.LLM.complete \"Link to this definition\")\n\nCompletes the provided prompt, stopping when the stop sequeunce is found.\n\n_class_ steamship.agents.schema.LLMAgent(_\\*_, _tools: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_, _message\\_selector: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\") \\= NoMessages()_, _llm: [LLM](#steamship.agents.schema.llm.LLM \"steamship.agents.schema.llm.LLM\")_, _output\\_parser: [OutputParser](#steamship.agents.schema.output_parser.OutputParser \"steamship.agents.schema.output_parser.OutputParser\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#LLMAgent)[#](#steamship.agents.schema.LLMAgent \"Link to this definition\")\n\nBases: [`Agent`](#steamship.agents.schema.agent.Agent \"steamship.agents.schema.agent.Agent\")\n\nLLMAgents choose next actions for an AgentService based on interactions with an LLM.\n\nllm_: [LLM](#steamship.agents.schema.llm.LLM \"steamship.agents.schema.llm.LLM\")_[#](#steamship.agents.schema.LLMAgent.llm \"Link to this definition\")\n\nThe LLM to use for action selection.\n\nmessage\\_selector_: [MessageSelector](#steamship.agents.schema.message_selectors.MessageSelector \"steamship.agents.schema.message_selectors.MessageSelector\")_[#](#steamship.agents.schema.LLMAgent.message_selector \"Link to this definition\")\n\nSelector of messages from ChatHistory. Used for conversation memory retrieval.\n\n_static_ messages\\_to\\_prompt\\_history(_messages: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_) → [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#LLMAgent.messages_to_prompt_history)[#](#steamship.agents.schema.LLMAgent.messages_to_prompt_history \"Link to this definition\")\n\n_abstract_ next\\_action(_context: [AgentContext](#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/agent.html#LLMAgent.next_action)[#](#steamship.agents.schema.LLMAgent.next_action \"Link to this definition\")\n\noutput\\_parser_: [OutputParser](#steamship.agents.schema.output_parser.OutputParser \"steamship.agents.schema.output_parser.OutputParser\")_[#](#steamship.agents.schema.LLMAgent.output_parser \"Link to this definition\")\n\nUtility responsible for converting LLM output into Actions\n\ntools_: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Tool](#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\\]_[#](#steamship.agents.schema.LLMAgent.tools \"Link to this definition\")\n\nTools that can be used by the Agent in selecting the next Action.\n\n_class_ steamship.agents.schema.OutputParser[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/output_parser.html#OutputParser)[#](#steamship.agents.schema.OutputParser \"Link to this definition\")\n\nBases: `BaseModel`, [`ABC`](https://docs.python.org/3.11/library/abc.html#abc.ABC \"(in Python v3.11)\")\n\nUsed to convert text into Actions.\n\nPrimarily used by LLM-based agents that generate textual descriptions of selected actions and their inputs. OutputParsers can be used to convert those descriptions into Action objects for the AgentService to run.\n\nExample\n\n*   input: “Action: GenerateImage\n    \n    ActionInput: row-house”\n    \n*   output: Action(“dalle”, “row-house”)\n    \n\n_abstract_ parse(_text: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _context: [AgentContext](#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [Action](#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/output_parser.html#OutputParser.parse)[#](#steamship.agents.schema.OutputParser.parse \"Link to this definition\")\n\nConvert text into an Action object.\n\n_class_ steamship.agents.schema.Tool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#Tool)[#](#steamship.agents.schema.Tool \"Link to this definition\")\n\nBases: `BaseModel`\n\nTools provide functionality that may be used by AgentServices, as directed by Agents, to achieve a goal.\n\nTools may be used to wrap Steamship packages and plugins, as well as third-party backend services, and even locally-contained bits of Python code.\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.Tool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\nas\\_openai\\_function() → [OpenAIFunction](#steamship.agents.schema.functions.OpenAIFunction \"steamship.agents.schema.functions.OpenAIFunction\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#Tool.as_openai_function)[#](#steamship.agents.schema.Tool.as_openai_function \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.Tool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.schema.Tool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\npost\\_process(_async\\_task: [Task](https://docs.steamship.com/api-reference/steamship.base.html#steamship.base.tasks.Task \"steamship.base.tasks.Task\")_, _context: [AgentContext](#steamship.agents.schema.tool.AgentContext \"steamship.agents.schema.tool.AgentContext\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#Tool.post_process)[#](#steamship.agents.schema.Tool.post_process \"Link to this definition\")\n\nTransforms Task output into a List\\[Block\\].\n\n_abstract_ run(_tool\\_input: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _context: [AgentContext](#steamship.agents.schema.tool.AgentContext \"steamship.agents.schema.tool.AgentContext\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | Task\\[Any\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/schema/tool.html#Tool.run)[#](#steamship.agents.schema.Tool.run \"Link to this definition\")\n\nRun the tool given the provided input and context.\n\nAt the moment, only synchronous Tools (those that return List\\[Block\\]) are supported.\n\nSupport for asynchronous Tools (those that return Task\\[Any\\]) will be added shortly."
},
{
  "url": "https://docs.steamship.com/api-reference/steamship.agents.tools.image_generation",
  "crawl": {
    "loadedUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.tools.image_generation#steamship.agents.tools.image_generation.dalle.DalleTool",
    "loadedTime": "2023-08-17T22:20:11.959Z",
    "referrerUrl": "https://docs.steamship.com/agents",
    "depth": 2,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.tools.image_generation#steamship.agents.tools.image_generation.dalle.DalleTool",
    "title": "steamship.agents.tools.image_generation package - Steamship Documentation",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": "en"
  },
  "screenshotUrl": null,
  "text": "steamship.agents.tools.image_generation package#\nSubmodules#\nsteamship.agents.tools.image_generation.dalle module#\nTool for generating images.\nclass steamship.agents.tools.image_generation.dalle.DalleTool(*, name: str = 'DalleTool', agent_description: str = 'Used to generate still images from text prompts. Only use if the user has asked directly for an image. When using this tool, the input should be a plain text string that describes, in detail, the desired image.', human_description: str = 'Generates an image from text.', generator_plugin_handle: str = 'dall-e', generator_plugin_instance_handle: str | None = None, generator_plugin_config: dict = {'n': 1, 'size': '256x256'}, merge_blocks: bool = False, make_output_public: bool = True)[source]# \nBases: ImageGeneratorTool\nTool to generate images from text using OpenAI’s DALL-E.\ngenerator_plugin_config: dict# \ngenerator_plugin_handle: str# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\nsteamship.agents.tools.image_generation.google_image_search module#\nTool for generating images.\nclass steamship.agents.tools.image_generation.google_image_search.GoogleImageSearchTool(*, name: str = 'GoogleImageSearchTool', agent_description: str = 'Used to retrieve an image of a well known object, person, place, or idea. Only use if the user has asked directly for an image. Input: a plain text string that describes an object, person, place, or idea. Output: an image of that thing.', human_description: str = 'Fetches an image from Google Image Search.', generator_plugin_handle: str = 'google-image-search', generator_plugin_instance_handle: str | None = None, generator_plugin_config: dict = {}, merge_blocks: bool = False, make_output_public: bool = True)[source]# \nBases: ImageGeneratorTool\nTool to generate images from text by using Google Image Search.\ngenerator_plugin_config: dict# \ngenerator_plugin_handle: str# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\nsteamship.agents.tools.image_generation.stable_diffusion module#\nTool for generating images.\nclass steamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool(*, name: str = 'StableDiffusionTool', agent_description: str = 'Used to generate images from text prompts. Only use if the user has asked directly for an image. When using this tool, the input should be a plain text string that describes, in detail, the desired image.', human_description: str = 'Generates an image from text.', generator_plugin_handle: str = 'stable-diffusion', generator_plugin_instance_handle: str | None = None, generator_plugin_config: dict = {'n': 1}, merge_blocks: bool = False, make_output_public: bool = True)[source]# \nBases: ImageGeneratorTool\nTool to generate images from text using StableDiffusion.\ngenerator_plugin_config: dict# \ngenerator_plugin_handle: str# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\nModule contents#\nclass steamship.agents.tools.image_generation.DalleTool(*, name: str = 'DalleTool', agent_description: str = 'Used to generate still images from text prompts. Only use if the user has asked directly for an image. When using this tool, the input should be a plain text string that describes, in detail, the desired image.', human_description: str = 'Generates an image from text.', generator_plugin_handle: str = 'dall-e', generator_plugin_instance_handle: str | None = None, generator_plugin_config: dict = {'n': 1, 'size': '256x256'}, merge_blocks: bool = False, make_output_public: bool = True)[source]# \nBases: ImageGeneratorTool\nTool to generate images from text using OpenAI’s DALL-E.\nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\ngenerator_plugin_config: dict# \ngenerator_plugin_handle: str# \ngenerator_plugin_instance_handle: str | None# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nmake_output_public: bool# \nmerge_blocks: bool# \nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\nclass steamship.agents.tools.image_generation.GoogleImageSearchTool(*, name: str = 'GoogleImageSearchTool', agent_description: str = 'Used to retrieve an image of a well known object, person, place, or idea. Only use if the user has asked directly for an image. Input: a plain text string that describes an object, person, place, or idea. Output: an image of that thing.', human_description: str = 'Fetches an image from Google Image Search.', generator_plugin_handle: str = 'google-image-search', generator_plugin_instance_handle: str | None = None, generator_plugin_config: dict = {}, merge_blocks: bool = False, make_output_public: bool = True)[source]# \nBases: ImageGeneratorTool\nTool to generate images from text by using Google Image Search.\nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\ngenerator_plugin_config: dict# \ngenerator_plugin_handle: str# \ngenerator_plugin_instance_handle: str | None# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nmake_output_public: bool# \nmerge_blocks: bool# \nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\nclass steamship.agents.tools.image_generation.StableDiffusionTool(*, name: str = 'StableDiffusionTool', agent_description: str = 'Used to generate images from text prompts. Only use if the user has asked directly for an image. When using this tool, the input should be a plain text string that describes, in detail, the desired image.', human_description: str = 'Generates an image from text.', generator_plugin_handle: str = 'stable-diffusion', generator_plugin_instance_handle: str | None = None, generator_plugin_config: dict = {'n': 1}, merge_blocks: bool = False, make_output_public: bool = True)[source]# \nBases: ImageGeneratorTool\nTool to generate images from text using StableDiffusion.\nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\ngenerator_plugin_config: dict# \ngenerator_plugin_handle: str# \ngenerator_plugin_instance_handle: str | None# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nmake_output_public: bool# \nmerge_blocks: bool# \nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.",
  "markdown": "## steamship.agents.tools.image\\_generation package[#](#steamship-agents-tools-image-generation-package \"Link to this heading\")\n\n## Submodules[#](#submodules \"Link to this heading\")\n\n## steamship.agents.tools.image\\_generation.dalle module[#](#steamship-agents-tools-image-generation-dalle-module \"Link to this heading\")\n\nTool for generating images.\n\n_class_ steamship.agents.tools.image\\_generation.dalle.DalleTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'DalleTool'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to generate still images from text prompts. Only use if the user has asked directly for an image. When using this tool, the input should be a plain text string that describes, in detail, the desired image.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Generates an image from text.'_, _generator\\_plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'dall-e'_, _generator\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _generator\\_plugin\\_config: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") \\= {'n': 1, 'size': '256x256'}_, _merge\\_blocks: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/image_generation/dalle.html#DalleTool)[#](#steamship.agents.tools.image_generation.dalle.DalleTool \"Link to this definition\")\n\nBases: [`ImageGeneratorTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.html#steamship.agents.tools.base_tools.ImageGeneratorTool \"steamship.agents.tools.base_tools.ImageGeneratorTool\")\n\nTool to generate images from text using OpenAI’s DALL-E.\n\ngenerator\\_plugin\\_config_: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.dalle.DalleTool.generator_plugin_config \"Link to this definition\")\n\ngenerator\\_plugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.dalle.DalleTool.generator_plugin_handle \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.dalle.DalleTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.dalle.DalleTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\n## steamship.agents.tools.image\\_generation.google\\_image\\_search module[#](#steamship-agents-tools-image-generation-google-image-search-module \"Link to this heading\")\n\nTool for generating images.\n\n_class_ steamship.agents.tools.image\\_generation.google\\_image\\_search.GoogleImageSearchTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'GoogleImageSearchTool'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to retrieve an image of a well known object, person, place, or idea. Only use if the user has asked directly for an image. Input: a plain text string that describes an object, person, place, or idea. Output: an image of that thing.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Fetches an image from Google Image Search.'_, _generator\\_plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'google-image-search'_, _generator\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _generator\\_plugin\\_config: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") \\= {}_, _merge\\_blocks: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/image_generation/google_image_search.html#GoogleImageSearchTool)[#](#steamship.agents.tools.image_generation.google_image_search.GoogleImageSearchTool \"Link to this definition\")\n\nBases: [`ImageGeneratorTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.html#steamship.agents.tools.base_tools.ImageGeneratorTool \"steamship.agents.tools.base_tools.ImageGeneratorTool\")\n\nTool to generate images from text by using Google Image Search.\n\ngenerator\\_plugin\\_config_: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.google_image_search.GoogleImageSearchTool.generator_plugin_config \"Link to this definition\")\n\ngenerator\\_plugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.google_image_search.GoogleImageSearchTool.generator_plugin_handle \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.google_image_search.GoogleImageSearchTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.google_image_search.GoogleImageSearchTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\n## steamship.agents.tools.image\\_generation.stable\\_diffusion module[#](#steamship-agents-tools-image-generation-stable-diffusion-module \"Link to this heading\")\n\nTool for generating images.\n\n_class_ steamship.agents.tools.image\\_generation.stable\\_diffusion.StableDiffusionTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'StableDiffusionTool'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to generate images from text prompts. Only use if the user has asked directly for an image. When using this tool, the input should be a plain text string that describes, in detail, the desired image.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Generates an image from text.'_, _generator\\_plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'stable-diffusion'_, _generator\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _generator\\_plugin\\_config: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") \\= {'n': 1}_, _merge\\_blocks: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/image_generation/stable_diffusion.html#StableDiffusionTool)[#](#steamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool \"Link to this definition\")\n\nBases: [`ImageGeneratorTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.html#steamship.agents.tools.base_tools.ImageGeneratorTool \"steamship.agents.tools.base_tools.ImageGeneratorTool\")\n\nTool to generate images from text using StableDiffusion.\n\ngenerator\\_plugin\\_config_: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool.generator_plugin_config \"Link to this definition\")\n\ngenerator\\_plugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool.generator_plugin_handle \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.stable_diffusion.StableDiffusionTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\n## Module contents[#](#module-contents \"Link to this heading\")\n\n_class_ steamship.agents.tools.image\\_generation.DalleTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'DalleTool'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to generate still images from text prompts. Only use if the user has asked directly for an image. When using this tool, the input should be a plain text string that describes, in detail, the desired image.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Generates an image from text.'_, _generator\\_plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'dall-e'_, _generator\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _generator\\_plugin\\_config: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") \\= {'n': 1, 'size': '256x256'}_, _merge\\_blocks: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/image_generation/dalle.html#DalleTool)[#](#steamship.agents.tools.image_generation.DalleTool \"Link to this definition\")\n\nBases: [`ImageGeneratorTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.html#steamship.agents.tools.base_tools.ImageGeneratorTool \"steamship.agents.tools.base_tools.ImageGeneratorTool\")\n\nTool to generate images from text using OpenAI’s DALL-E.\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.DalleTool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\ngenerator\\_plugin\\_config_: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.DalleTool.generator_plugin_config \"Link to this definition\")\n\ngenerator\\_plugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.DalleTool.generator_plugin_handle \"Link to this definition\")\n\ngenerator\\_plugin\\_instance\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.DalleTool.generator_plugin_instance_handle \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.DalleTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nmake\\_output\\_public_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.DalleTool.make_output_public \"Link to this definition\")\n\nmerge\\_blocks_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.DalleTool.merge_blocks \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.DalleTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\n_class_ steamship.agents.tools.image\\_generation.GoogleImageSearchTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'GoogleImageSearchTool'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to retrieve an image of a well known object, person, place, or idea. Only use if the user has asked directly for an image. Input: a plain text string that describes an object, person, place, or idea. Output: an image of that thing.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Fetches an image from Google Image Search.'_, _generator\\_plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'google-image-search'_, _generator\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _generator\\_plugin\\_config: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") \\= {}_, _merge\\_blocks: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/image_generation/google_image_search.html#GoogleImageSearchTool)[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool \"Link to this definition\")\n\nBases: [`ImageGeneratorTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.html#steamship.agents.tools.base_tools.ImageGeneratorTool \"steamship.agents.tools.base_tools.ImageGeneratorTool\")\n\nTool to generate images from text by using Google Image Search.\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\ngenerator\\_plugin\\_config_: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool.generator_plugin_config \"Link to this definition\")\n\ngenerator\\_plugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool.generator_plugin_handle \"Link to this definition\")\n\ngenerator\\_plugin\\_instance\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool.generator_plugin_instance_handle \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nmake\\_output\\_public_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool.make_output_public \"Link to this definition\")\n\nmerge\\_blocks_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool.merge_blocks \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.GoogleImageSearchTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\n_class_ steamship.agents.tools.image\\_generation.StableDiffusionTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'StableDiffusionTool'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to generate images from text prompts. Only use if the user has asked directly for an image. When using this tool, the input should be a plain text string that describes, in detail, the desired image.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Generates an image from text.'_, _generator\\_plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'stable-diffusion'_, _generator\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _generator\\_plugin\\_config: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") \\= {'n': 1}_, _merge\\_blocks: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/image_generation/stable_diffusion.html#StableDiffusionTool)[#](#steamship.agents.tools.image_generation.StableDiffusionTool \"Link to this definition\")\n\nBases: [`ImageGeneratorTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.html#steamship.agents.tools.base_tools.ImageGeneratorTool \"steamship.agents.tools.base_tools.ImageGeneratorTool\")\n\nTool to generate images from text using StableDiffusion.\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.StableDiffusionTool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\ngenerator\\_plugin\\_config_: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.StableDiffusionTool.generator_plugin_config \"Link to this definition\")\n\ngenerator\\_plugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.StableDiffusionTool.generator_plugin_handle \"Link to this definition\")\n\ngenerator\\_plugin\\_instance\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.StableDiffusionTool.generator_plugin_instance_handle \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.StableDiffusionTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nmake\\_output\\_public_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.StableDiffusionTool.make_output_public \"Link to this definition\")\n\nmerge\\_blocks_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.StableDiffusionTool.merge_blocks \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.image_generation.StableDiffusionTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection."
},
{
  "url": "https://docs.steamship.com/api-reference/steamship.agents.tools.search",
  "crawl": {
    "loadedUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.tools.search#steamship.agents.tools.search.search.SearchTool",
    "loadedTime": "2023-08-17T22:20:11.755Z",
    "referrerUrl": "https://docs.steamship.com/agents",
    "depth": 2,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.tools.search#steamship.agents.tools.search.search.SearchTool",
    "title": "steamship.agents.tools.search package - Steamship Documentation",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": "en"
  },
  "screenshotUrl": null,
  "text": "Back to top \nToggle table of contents sidebar\nsteamship.agents.tools.search package#\nSubmodules#\nsteamship.agents.tools.search.search module#\nTool for searching the web for answers.\nclass steamship.agents.tools.search.search.SearchTool(*, name: str = 'SearchTool', agent_description: str = 'Used to search the web for new information.', human_description: str = 'Searches the web.', cache: bool = False, cache_store: KeyValueStore | None = None)[source]# \nBases: Tool\nTool which uses Steamship’s managed SERP API client to search Google.\nclass Config[source]# \nBases: object\narbitrary_types_allowed = True# \nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\ncache: bool# \ncache_store: KeyValueStore | None# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\nrun(tool_input: List[Block], context: AgentContext) → List[Block] | Task[Any][source]# \nExecute a search using the Steamship plugin.\nModule contents#\nclass steamship.agents.tools.search.SearchTool(*, name: str = 'SearchTool', agent_description: str = 'Used to search the web for new information.', human_description: str = 'Searches the web.', cache: bool = False, cache_store: KeyValueStore | None = None)[source]# \nBases: Tool\nTool which uses Steamship’s managed SERP API client to search Google.\nclass Config[source]# \nBases: object\narbitrary_types_allowed = True# \nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\ncache: bool# \ncache_store: KeyValueStore | None# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\nrun(tool_input: List[Block], context: AgentContext) → List[Block] | Task[Any][source]# \nExecute a search using the Steamship plugin.",
  "markdown": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## steamship.agents.tools.search package[#](#steamship-agents-tools-search-package \"Link to this heading\")\n\n## Submodules[#](#submodules \"Link to this heading\")\n\n## steamship.agents.tools.search.search module[#](#steamship-agents-tools-search-search-module \"Link to this heading\")\n\nTool for searching the web for answers.\n\n_class_ steamship.agents.tools.search.search.SearchTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'SearchTool'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to search the web for new information.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Searches the web.'_, _cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _cache\\_store: [KeyValueStore](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.kv_store.KeyValueStore \"steamship.utils.kv_store.KeyValueStore\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/search/search.html#SearchTool)[#](#steamship.agents.tools.search.search.SearchTool \"Link to this definition\")\n\nBases: [`Tool`](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\n\nTool which uses Steamship’s managed SERP API client to search Google.\n\n_class_ Config[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/search/search.html#SearchTool.Config)[#](#steamship.agents.tools.search.search.SearchTool.Config \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\narbitrary\\_types\\_allowed _\\= True_[#](#steamship.agents.tools.search.search.SearchTool.Config.arbitrary_types_allowed \"Link to this definition\")\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.search.SearchTool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\ncache_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.search.SearchTool.cache \"Link to this definition\")\n\ncache\\_store_: [KeyValueStore](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.kv_store.KeyValueStore \"steamship.utils.kv_store.KeyValueStore\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.search.SearchTool.cache_store \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.search.SearchTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.search.SearchTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\nrun(_tool\\_input: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _context: [AgentContext](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | Task\\[Any\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/search/search.html#SearchTool.run)[#](#steamship.agents.tools.search.search.SearchTool.run \"Link to this definition\")\n\nExecute a search using the Steamship plugin.\n\n## Module contents[#](#module-contents \"Link to this heading\")\n\n_class_ steamship.agents.tools.search.SearchTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'SearchTool'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to search the web for new information.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Searches the web.'_, _cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _cache\\_store: [KeyValueStore](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.kv_store.KeyValueStore \"steamship.utils.kv_store.KeyValueStore\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/search/search.html#SearchTool)[#](#steamship.agents.tools.search.SearchTool \"Link to this definition\")\n\nBases: [`Tool`](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.tool.Tool \"steamship.agents.schema.tool.Tool\")\n\nTool which uses Steamship’s managed SERP API client to search Google.\n\n_class_ Config[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/search/search.html#SearchTool.Config)[#](#steamship.agents.tools.search.SearchTool.Config \"Link to this definition\")\n\nBases: [`object`](https://docs.python.org/3.11/library/functions.html#object \"(in Python v3.11)\")\n\narbitrary\\_types\\_allowed _\\= True_[#](#steamship.agents.tools.search.SearchTool.Config.arbitrary_types_allowed \"Link to this definition\")\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.SearchTool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\ncache_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.SearchTool.cache \"Link to this definition\")\n\ncache\\_store_: [KeyValueStore](https://docs.steamship.com/api-reference/steamship.utils.html#steamship.utils.kv_store.KeyValueStore \"steamship.utils.kv_store.KeyValueStore\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.SearchTool.cache_store \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.SearchTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.search.SearchTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\nrun(_tool\\_input: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _context: [AgentContext](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\] | Task\\[Any\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/search/search.html#SearchTool.run)[#](#steamship.agents.tools.search.SearchTool.run \"Link to this definition\")\n\nExecute a search using the Steamship plugin."
},
{
  "url": "https://docs.steamship.com/api-reference/steamship.agents.tools.speech_generation",
  "crawl": {
    "loadedUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.tools.speech_generation#steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool",
    "loadedTime": "2023-08-17T22:20:12.025Z",
    "referrerUrl": "https://docs.steamship.com/agents",
    "depth": 2,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.tools.speech_generation#steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool",
    "title": "steamship.agents.tools.speech_generation package - Steamship Documentation",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": "en"
  },
  "screenshotUrl": null,
  "text": "Back to top \nToggle table of contents sidebar\nsteamship.agents.tools.speech_generation package#\nSubmodules#\nsteamship.agents.tools.speech_generation.generate_speech module#\nTool for generating images.\nclass steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool(*, name: str = 'GenerateSpokenAudio', agent_description: str = 'Used to generate spoken audio from text prompts. Only use if the user has asked directly for a an audio version of output. When using this tool, the input should be a plain text string containing the content to be spoken.', human_description: str = 'Generates spoken audio from text.', generator_plugin_handle: str = 'elevenlabs', generator_plugin_instance_handle: str | None = None, generator_plugin_config: dict = {}, merge_blocks: bool = False, make_output_public: bool = True)[source]# \nBases: AudioGeneratorTool\nTool to generate audio from text.\nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\ngenerator_plugin_handle: str# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\nModule contents#\nclass steamship.agents.tools.speech_generation.GenerateSpeechTool(*, name: str = 'GenerateSpokenAudio', agent_description: str = 'Used to generate spoken audio from text prompts. Only use if the user has asked directly for a an audio version of output. When using this tool, the input should be a plain text string containing the content to be spoken.', human_description: str = 'Generates spoken audio from text.', generator_plugin_handle: str = 'elevenlabs', generator_plugin_instance_handle: str | None = None, generator_plugin_config: dict = {}, merge_blocks: bool = False, make_output_public: bool = True)[source]# \nBases: AudioGeneratorTool\nTool to generate audio from text.\nagent_description: str# \nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\ngenerator_plugin_config: dict# \ngenerator_plugin_handle: str# \ngenerator_plugin_instance_handle: str | None# \nhuman_description: str# \nHuman-friendly description. Used for logging, tool indices, etc.\nmake_output_public: bool# \nmerge_blocks: bool# \nname: str# \nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.",
  "markdown": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## steamship.agents.tools.speech\\_generation package[#](#steamship-agents-tools-speech-generation-package \"Link to this heading\")\n\n## Submodules[#](#submodules \"Link to this heading\")\n\n## steamship.agents.tools.speech\\_generation.generate\\_speech module[#](#steamship-agents-tools-speech-generation-generate-speech-module \"Link to this heading\")\n\nTool for generating images.\n\n_class_ steamship.agents.tools.speech\\_generation.generate\\_speech.GenerateSpeechTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'GenerateSpokenAudio'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to generate spoken audio from text prompts. Only use if the user has asked directly for a an audio version of output. When using this tool, the input should be a plain text string containing the content to be spoken.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Generates spoken audio from text.'_, _generator\\_plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'elevenlabs'_, _generator\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _generator\\_plugin\\_config: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") \\= {}_, _merge\\_blocks: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/speech_generation/generate_speech.html#GenerateSpeechTool)[#](#steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool \"Link to this definition\")\n\nBases: [`AudioGeneratorTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.html#steamship.agents.tools.base_tools.AudioGeneratorTool \"steamship.agents.tools.base_tools.AudioGeneratorTool\")\n\nTool to generate audio from text.\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\ngenerator\\_plugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool.generator_plugin_handle \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.generate_speech.GenerateSpeechTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection.\n\n## Module contents[#](#module-contents \"Link to this heading\")\n\n_class_ steamship.agents.tools.speech\\_generation.GenerateSpeechTool(_\\*_, _name: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'GenerateSpokenAudio'_, _agent\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Used to generate spoken audio from text prompts. Only use if the user has asked directly for a an audio version of output. When using this tool, the input should be a plain text string containing the content to be spoken.'_, _human\\_description: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'Generates spoken audio from text.'_, _generator\\_plugin\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") \\= 'elevenlabs'_, _generator\\_plugin\\_instance\\_handle: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _generator\\_plugin\\_config: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\") \\= {}_, _merge\\_blocks: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= False_, _make\\_output\\_public: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/tools/speech_generation/generate_speech.html#GenerateSpeechTool)[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool \"Link to this definition\")\n\nBases: [`AudioGeneratorTool`](https://docs.steamship.com/api-reference/steamship.agents.tools.html#steamship.agents.tools.base_tools.AudioGeneratorTool \"steamship.agents.tools.base_tools.AudioGeneratorTool\")\n\nTool to generate audio from text.\n\nagent\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool.agent_description \"Link to this definition\")\n\nDescription for use in an agent in order to enable Action selection. It should include a short summary of what the Tool does, what the inputs to the Tool should be, and what the outputs of the tool are.\n\ngenerator\\_plugin\\_config_: [dict](https://docs.python.org/3.11/library/stdtypes.html#dict \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool.generator_plugin_config \"Link to this definition\")\n\ngenerator\\_plugin\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool.generator_plugin_handle \"Link to this definition\")\n\ngenerator\\_plugin\\_instance\\_handle_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool.generator_plugin_instance_handle \"Link to this definition\")\n\nhuman\\_description_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool.human_description \"Link to this definition\")\n\nHuman-friendly description. Used for logging, tool indices, etc.\n\nmake\\_output\\_public_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool.make_output_public \"Link to this definition\")\n\nmerge\\_blocks_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool.merge_blocks \"Link to this definition\")\n\nname_: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\")_[#](#steamship.agents.tools.speech_generation.GenerateSpeechTool.name \"Link to this definition\")\n\nThe short name for the tool. This will be used by Agents to refer to this tool during action selection."
},
{
  "url": "https://docs.steamship.com/api-reference/steamship.agents.service",
  "crawl": {
    "loadedUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.service#steamship.agents.service.agent_service.AgentService",
    "loadedTime": "2023-08-17T22:20:17.937Z",
    "referrerUrl": "https://docs.steamship.com/agents",
    "depth": 2,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://python-sdk.docs.steamship.com/api/steamship.agents.service#steamship.agents.service.agent_service.AgentService",
    "title": "steamship.agents.service package - Steamship Documentation",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": "en"
  },
  "screenshotUrl": null,
  "text": "Back to top \nToggle table of contents sidebar\nsteamship.agents.service package#\nSubmodules#\nsteamship.agents.service.agent_service module#\nclass steamship.agents.service.agent_service.AgentService(use_llm_cache: bool | None = False, use_action_cache: bool | None = False, **kwargs)[source]# \nBases: PackageService\nAgentService is a Steamship Package that can use an Agent, Tools, and a provided AgentContext to respond to user input.\nbuild_default_context(context_id: str | None = None, **kwargs) → AgentContext[source]# \nBuild’s the agent’s default context.\nThe provides a single place to implement (or override) the default context that will be used by endpoints that transports define. This allows an Agent developer to use, eg, the TelegramTransport but with a custom type of memory or caching.\nThe returned context does not have any emit functions yet registered to it.\nget_default_agent(throw_if_missing: bool = True) → Agent | None[source]# \nReturn the default agent of this agent service.\nThis is a helper wrapper to safeguard naming conventions that have formed.\nnext_action(agent: Agent, input_blocks: List[Block], context: AgentContext) → Action[source]# \nprompt(prompt: str | None = None, context_id: str | None = None, **kwargs) → List[Block][source]# \nRun an agent with the provided text as the input.\nrun_action(agent: Agent, action: Action, context: AgentContext)[source]# \nrun_agent(agent: Agent, context: AgentContext)[source]# \nuse_action_cache: bool# \nWhether or not to cache agent Actions (for tool runs) by default.\nuse_llm_cache: bool# \nWhether or not to cache LLM calls (for tool selection/direct responses) by default.\nModule contents#",
  "markdown": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## steamship.agents.service package[#](#steamship-agents-service-package \"Link to this heading\")\n\n## Submodules[#](#submodules \"Link to this heading\")\n\n## steamship.agents.service.agent\\_service module[#](#steamship-agents-service-agent-service-module \"Link to this heading\")\n\n_class_ steamship.agents.service.agent\\_service.AgentService(_use\\_llm\\_cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_, _use\\_action\\_cache: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= False_, _\\*\\*kwargs_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/service/agent_service.html#AgentService)[#](#steamship.agents.service.agent_service.AgentService \"Link to this definition\")\n\nBases: [`PackageService`](https://docs.steamship.com/api-reference/steamship.invocable.html#steamship.invocable.package_service.PackageService \"steamship.invocable.package_service.PackageService\")\n\nAgentService is a Steamship Package that can use an Agent, Tools, and a provided AgentContext to respond to user input.\n\nbuild\\_default\\_context(_context\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _\\*\\*kwargs_) → [AgentContext](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/service/agent_service.html#AgentService.build_default_context)[#](#steamship.agents.service.agent_service.AgentService.build_default_context \"Link to this definition\")\n\nBuild’s the agent’s default context.\n\nThe provides a single place to implement (or override) the default context that will be used by endpoints that transports define. This allows an Agent developer to use, eg, the TelegramTransport but with a custom type of memory or caching.\n\nThe returned context does not have any emit functions yet registered to it.\n\nget\\_default\\_agent(_throw\\_if\\_missing: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\") \\= True_) → [Agent](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.agent.Agent \"steamship.agents.schema.agent.Agent\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/service/agent_service.html#AgentService.get_default_agent)[#](#steamship.agents.service.agent_service.AgentService.get_default_agent \"Link to this definition\")\n\nReturn the default agent of this agent service.\n\nThis is a helper wrapper to safeguard naming conventions that have formed.\n\nnext\\_action(_agent: [Agent](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.agent.Agent \"steamship.agents.schema.agent.Agent\")_, _input\\_blocks: [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\]_, _context: [AgentContext](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_) → [Action](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/service/agent_service.html#AgentService.next_action)[#](#steamship.agents.service.agent_service.AgentService.next_action \"Link to this definition\")\n\nprompt(_prompt: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _context\\_id: [str](https://docs.python.org/3.11/library/stdtypes.html#str \"(in Python v3.11)\") | [None](https://docs.python.org/3.11/library/constants.html#None \"(in Python v3.11)\") \\= None_, _\\*\\*kwargs_) → [List](https://docs.python.org/3.11/library/typing.html#typing.List \"(in Python v3.11)\")\\[[Block](https://docs.steamship.com/api-reference/steamship.data.html#steamship.data.block.Block \"steamship.data.block.Block\")\\][\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/service/agent_service.html#AgentService.prompt)[#](#steamship.agents.service.agent_service.AgentService.prompt \"Link to this definition\")\n\nRun an agent with the provided text as the input.\n\nrun\\_action(_agent: [Agent](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.agent.Agent \"steamship.agents.schema.agent.Agent\")_, _action: [Action](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.action.Action \"steamship.agents.schema.action.Action\")_, _context: [AgentContext](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/service/agent_service.html#AgentService.run_action)[#](#steamship.agents.service.agent_service.AgentService.run_action \"Link to this definition\")\n\nrun\\_agent(_agent: [Agent](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.agent.Agent \"steamship.agents.schema.agent.Agent\")_, _context: [AgentContext](https://docs.steamship.com/api-reference/steamship.agents.schema.html#steamship.agents.schema.context.AgentContext \"steamship.agents.schema.context.AgentContext\")_)[\\[source\\]](https://docs.steamship.com/_modules/steamship/agents/service/agent_service.html#AgentService.run_agent)[#](#steamship.agents.service.agent_service.AgentService.run_agent \"Link to this definition\")\n\nuse\\_action\\_cache_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.service.agent_service.AgentService.use_action_cache \"Link to this definition\")\n\nWhether or not to cache agent Actions (for tool runs) by default.\n\nuse\\_llm\\_cache_: [bool](https://docs.python.org/3.11/library/functions.html#bool \"(in Python v3.11)\")_[#](#steamship.agents.service.agent_service.AgentService.use_llm_cache \"Link to this definition\")\n\nWhether or not to cache LLM calls (for tool selection/direct responses) by default.\n\n## Module contents[#](#module-contents \"Link to this heading\")"
},
{
  "url": "https://docs.steamship.com/packages/developing/project-structure",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/developing/project-structure",
    "loadedTime": "2023-08-17T22:20:24.212Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/developing/project-structure",
    "title": "Package Project Structure – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Package Project Structure\nYour main implementation lives in the src/api.py file of your project. This file will have been created for you by the template you selected when starting your project.\nIf you are developing a package, you will find a class that derives from the PackageService base class\nIf you are developing a plugin, you will find a class that derives from a base class specific to the plugin type.\nFrom the implementation perspective, think of a package as a Flask app. It looks and feels like a regular Python class, but its methods are decorated with decorators bind them to HTTP endpoints. You can call instances of your package over HTTP, or you can use a Steamship client library wrapper.\nConsider the following package:\nOnce deployed to Steamship, every new instance of this package would be associated with two HTTP endpoints:\nExpose an HTTP GET endpoint at /say_hello that accepts a URL Querystring argument named name and returns a string response\nExpose an HTTP POST endpoint at /do_something that accepts a random number and returns it in a JSON object\nThese per-instance endpoints could also be called using convenience functions in the Steamship Python client:\nA few rules about writing package methods:\nThe @get and @post decorators declare HTTP GET and POST endpoints, respectively\nAll method arguments must be kwargs with defaults\nThe method’s kwargs will be supplied by merging URL query parameters, form-encoded POST data, and JSON-encoded POST data.\nBinary input isn’t yet supported. (Email us at hello@steamship.com for workarounds if you need one).\nAll methods must return a Response object\nFor more examples of writing package endpoints, see the example app (opens in a new tab) from our unit testing suite.\nYou can also define configuration parameters for your package.",
  "markdown": "## Package Project Structure\n\nYour main implementation lives in the `src/api.py` file of your project. This file will have been created for you by the template you selected when starting your project.\n\n*   If you are developing a package, you will find a class that derives from the `PackageService` base class\n*   If you are developing a plugin, you will find a class that derives from a base class specific to the plugin type.\n\nFrom the implementation perspective, think of a package as a Flask app. It looks and feels like a regular Python class, but its methods are decorated with decorators bind them to HTTP endpoints. You can call instances of your package over HTTP, or you can use a Steamship client library wrapper.\n\nConsider the following package:\n\nOnce deployed to Steamship, every new instance of this package would be associated with two HTTP endpoints:\n\n*   Expose an HTTP GET endpoint at `/say_hello` that accepts a URL Querystring argument named `name` and returns a string response\n*   Expose an HTTP POST endpoint at `/do_something` that accepts a random number and returns it in a JSON object\n\nThese per-instance endpoints could also be called using convenience functions in the Steamship Python client:\n\nA few rules about writing package methods:\n\n*   The `@get` and `@post` decorators declare HTTP `GET` and `POST` endpoints, respectively\n*   All method arguments **must be** kwargs with defaults\n*   The method’s kwargs will be supplied by merging URL query parameters, form-encoded POST data, and JSON-encoded POST data.\n*   Binary input isn’t yet supported. (Email us at [hello@steamship.com](mailto:hello@steamship.com) for workarounds if you need one).\n*   All methods must return a `Response` object\n\nFor more examples of writing package endpoints, see the [example app (opens in a new tab)](https://github.com/steamship-core/python-client/blob/main/tests/assets/apps/demo_app.py) from our unit testing suite.\n\nYou can also [define configuration parameters](https://docs.steamship.com/developing/configuration#id1) for your package."
},
{
  "url": "https://docs.steamship.com/packages/cookbook",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook",
    "loadedTime": "2023-08-17T22:20:23.814Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook",
    "title": "Package Development Cookbook – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Package Development Cookbook\nWorking with Language\nCollect and query sentiment\nExtract an outline from markdown\nBuilding Packages\nModify an existing package\nMake a package or plugin user-configurable\nReceive webhooks from another service\nResponse Types\nReturning Text\nReturning JSON\nReturning Images\nReturning Audio",
  "markdown": "## Package Development Cookbook\n\n## Working with Language[](#working-with-language)\n\n*   [Collect and query sentiment](https://docs.steamship.com/packages/cookbook/collecting-and-querying-sentiment)\n*   [Extract an outline from markdown](https://docs.steamship.com/packages/cookbook/how-to-extract-outline-from-markdown)\n\n## Building Packages[](#building-packages)\n\n*   [Modify an existing package](https://docs.steamship.com/packages/cookbook/modifying-an-existing-package)\n*   [Make a package or plugin user-configurable](https://docs.steamship.com/packages/cookbook/adding-configuration)\n*   [Receive webhooks from another service](https://docs.steamship.com/packages/cookbook/receiving-webhooks)\n\n## Response Types[](#response-types)\n\n*   [Returning Text](https://docs.steamship.com/packages/cookbook/return-text)\n*   [Returning JSON](https://docs.steamship.com/packages/cookbook/return-json)\n*   [Returning Images](https://docs.steamship.com/packages/cookbook/return-image)\n*   [Returning Audio](https://docs.steamship.com/packages/cookbook/return-audio)"
},
{
  "url": "https://docs.steamship.com/packages/cookbook/collecting-and-querying-sentiment",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/collecting-and-querying-sentiment",
    "loadedTime": "2023-08-17T22:20:25.927Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/collecting-and-querying-sentiment",
    "title": "Collecting and Querying Sentiment – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Collecting and Querying Sentiment\nThis example package collects plain text files and stores them in Steamship. It runs a sentiment analysis tagger (OneAI Tagger (opens in a new tab)) on them as they are added. Two endpoints allow fetching all of the positive and negative tagged documents.",
  "markdown": "## Collecting and Querying Sentiment\n\nThis example package collects plain text files and stores them in Steamship. It runs a sentiment analysis tagger ([OneAI Tagger (opens in a new tab)](https://www.steamship.com/plugins/oneai-tagger)) on them as they are added. Two endpoints allow fetching all of the positive and negative tagged documents."
},
{
  "url": "https://docs.steamship.com/account/api",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/account/api",
    "loadedTime": "2023-08-17T22:20:35.316Z",
    "referrerUrl": "https://docs.steamship.com/agent-guidebook/required-skills",
    "depth": 2,
    "httpStatusCode": 404
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/account/api",
    "title": "404: This page could not be found",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "404\nThis page could not be found.",
  "markdown": "## 404\n\n## This page could not be found."
},
{
  "url": "https://docs.steamship.com/packages/cookbook/how-to-extract-outline-from-markdown",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/how-to-extract-outline-from-markdown",
    "loadedTime": "2023-08-17T22:20:35.925Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/how-to-extract-outline-from-markdown",
    "title": "Extract an Outline from a Markdown File – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Accept a Markdown file from the remote user, convert it to text blocks using the Markdown Blockifier plugin, and then generate an outline for the text using the tags. For example, the following Markdown file:\nwould generate the following output:\nImplementation:",
  "markdown": "Accept a Markdown file from the remote user, convert it to text blocks using the Markdown Blockifier plugin, and then generate an outline for the text using the tags. For example, the following Markdown file:\n\nwould generate the following output:\n\nImplementation:"
},
{
  "url": "https://docs.steamship.com/packages/cookbook/modifying-an-existing-package",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/modifying-an-existing-package",
    "loadedTime": "2023-08-17T22:20:37.337Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/modifying-an-existing-package",
    "title": "Modifying an Existing Package – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Modifying an Existing Package\nYou may want to modify an existing package to: : * Add a new method\nSwap out a plugin\nAdd more specific business logic\nYou can do this easily in Steamship!\nAs an example, let’s assume we want to change the audio-markdown (opens in a new tab) package to use Assembly’s speech to text instead of Whisper. The goal of the package is to automatically convert audio files to Markdown using specific spoken words to start and end elements.\nFirst, fork the the package repository.\nChange the package handle in steamship.json to a new unique value. You should also update the steamshipRegistry section with your contact info.\nNow we can edit the code to use a different transcription plugin. In a package, src/api.py contains the main implementation. Looking in this file, we see that it is using the Whisper speech to text blockifier:\nThis handle is a reference to the plugin being used. We also provide a plugin (opens in a new tab) for transcription via AssemblyAI. Its handle is s2t-blockifier-default. If we replace the existing handle with this value, our package will use the AssemblyAI plugin instead:\nThat’s it! We can now deploy our new package using the Steamship CLI:\nand use it like any other package.\nIf we wanted to instead add functionality to the package, for example adding an RST output format, we could add a new method to the package:",
  "markdown": "## Modifying an Existing Package\n\nYou may want to modify an existing package to: : \\* Add a new method\n\n*   Swap out a plugin\n*   Add more specific business logic\n\nYou can do this easily in Steamship!\n\nAs an example, let’s assume we want to change the [audio-markdown (opens in a new tab)](https://github.com/steamship-packages/audio-markdown) package to use Assembly’s speech to text instead of Whisper. The goal of the package is to automatically convert audio files to Markdown using specific spoken words to start and end elements.\n\nFirst, fork the the package repository.\n\nChange the package handle in `steamship.json` to a new unique value. You should also update the `steamshipRegistry` section with your contact info.\n\nNow we can edit the code to use a different transcription plugin. In a package, `src/api.py` contains the main implementation. Looking in this file, we see that it is using the Whisper speech to text blockifier:\n\nThis handle is a reference to the plugin being used. We also provide a [plugin (opens in a new tab)](https://github.com/steamship-plugins/assemblyai-s2t-blockifier) for transcription via [AssemblyAI](https://docs.steamship.com/packages/cookbook/assemblyai.com). Its handle is `s2t-blockifier-default`. If we replace the existing handle with this value, our package will use the AssemblyAI plugin instead:\n\nThat’s it! We can now deploy our new package using the Steamship CLI:\n\nand use it like any other package.\n\nIf we wanted to instead add functionality to the package, for example adding an RST output format, we could add a new method to the package:"
},
{
  "url": "https://docs.steamship.com/packages/cookbook/assemblyai.com",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/packages/cookbook/assemblyai.com",
    "loadedTime": "2023-08-17T22:20:45.151Z",
    "referrerUrl": "https://docs.steamship.com/packages/cookbook/modifying-an-existing-package",
    "depth": 2,
    "httpStatusCode": 404
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/packages/cookbook/assemblyai.com",
    "title": "404: This page could not be found",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "404\nThis page could not be found.",
  "markdown": "## 404\n\n## This page could not be found."
},
{
  "url": "https://docs.steamship.com/agent-guidebook/getting-started/create-your-agent",
  "crawl": {
    "loadedUrl": "https://docs.steamship.com/agent-guidebook/getting-started/create-your-agent",
    "loadedTime": "2023-08-17T22:21:01.851Z",
    "referrerUrl": "https://docs.steamship.com/",
    "depth": 1,
    "httpStatusCode": 200
  },
  "metadata": {
    "canonicalUrl": "https://docs.steamship.com/agent-guidebook/getting-started/create-your-agent",
    "title": "Create your Agent – Steamship",
    "description": null,
    "author": null,
    "keywords": null,
    "languageCode": null
  },
  "screenshotUrl": null,
  "text": "Create your Agent\nYou can build and deploy your Agent without a programming environment on your computer. You just need:\nA web browser with internet access\nA GitHub account - for a cloud programming environment\nA Steamship account - for AI hosting in the cloud\nClick on the way you'd like to create your starter project below. Then return to complete your setup with the documentation below.\nClone GitHub Project (opens in a new tab) - ⭐️ Best for Developers\nUse a Dev Container in your Browser (opens in a new tab) - 🎓 Easiest for Classrooms\nUse a Dev Container in Docker on Localhost (opens in a new tab)\nGit Clone (Local) Setup\nTo build an Agent on your local machine, first you'll need to make sure your machine has the right dependencies:\nPython 3.8\ngit\nAn IDE of your preference\nThen, just:\nFollow the link above.\nCopy the GitHub repository link.\nOpen a terminal and run:\nChange directories into your new project.\nSet up a Python Virtual environment with the required dependencies:\nIn MacOS or Linux:\nIn Windows:\nOnce your Python dependencies are installed, run:\nThat's it! You should be ready to begin.\nDev Container (Browser) Setup\nTo build an Agent in your browser using GitHub Dev Containers:\nFollow the link above.\nClick on the GitHub link at the lower-left side of the browser\nSelect Continue Working in New CodeSpace from the menu that appears center-top\nSelect a machine type to run in\nWait until your environment is fully ready\nTest by typing the ship command in your console\nThat's it! You should be ready to begin.\nDev Container (Local) Setup\nTo build an Agent in a local GitHub Dev Container, first you'll need to make sure your machine has the right dependencies:\nDocker\nVisual Studio Code\nThen, just:\nFollow the link above.\nWhen your Dev Container opens, run: \nOnce your Python dependencies are installed, run: \nThat's it! You should be ready to begin.\nLast updated on August 16, 2023",
  "markdown": "## Create your Agent\n\nYou can build and deploy your Agent without a programming environment on your computer. You just need:\n\n1.  **A web browser** with internet access\n2.  **A GitHub account** - for a cloud programming environment\n3.  **A Steamship account** - for AI hosting in the cloud\n\nClick on the way you'd like to create your starter project below. Then return to complete your setup with the documentation below.\n\n*   [Clone GitHub Project (opens in a new tab)](https://steamship.com/learn/agent-guidebook/clone-github) - _⭐️ Best for Developers_\n*   [Use a Dev Container in your Browser (opens in a new tab)](https://steamship.com/learn/agent-guidebook/clone-devcontainer-browser) - _🎓 Easiest for Classrooms_\n*   [Use a Dev Container in Docker on Localhost (opens in a new tab)](https://steamship.com/learn/agent-guidebook/clone-devcontainer-local)\n\n## Git Clone (Local) Setup[](#git-clone-local-setup)\n\nTo build an Agent on your local machine, first you'll need to make sure your machine has the right dependencies:\n\n1.  Python 3.8\n2.  git\n3.  An IDE of your preference\n\nThen, just:\n\n1.  Follow the link above.\n    \n2.  Copy the GitHub repository link.\n    \n3.  Open a terminal and run:\n    \n4.  Change directories into your new project.\n    \n5.  Set up a Python Virtual environment with the required dependencies:\n    \n    In MacOS or Linux:\n    \n    In Windows:\n    \n6.  Once your Python dependencies are installed, run:\n    \n\nThat's it! You should be ready to begin.\n\n## Dev Container (Browser) Setup[](#dev-container-browser-setup)\n\nTo build an Agent in your browser using GitHub Dev Containers:\n\n1.  Follow the link above.\n2.  Click on the **GitHub** link at the lower-left side of the browser\n3.  Select **Continue Working in New CodeSpace** from the menu that appears center-top\n4.  Select a machine type to run in\n5.  Wait until your environment is fully ready\n6.  Test by typing the `ship` command in your console\n\nThat's it! You should be ready to begin.\n\n## Dev Container (Local) Setup[](#dev-container-local-setup)\n\nTo build an Agent in a local GitHub Dev Container, first you'll need to make sure your machine has the right dependencies:\n\n1.  Docker\n2.  Visual Studio Code\n\nThen, just:\n\n1.  Follow the link above.\n2.  When your Dev Container opens, run:\n3.  Once your Python dependencies are installed, run:\n\nThat's it! You should be ready to begin.\n\nLast updated on August 16, 2023"
}]